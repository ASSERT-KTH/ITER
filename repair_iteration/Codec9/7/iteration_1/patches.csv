bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
2	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
3	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
4	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
5	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  false);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
6	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
7	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
8	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
9	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
10	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
11	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
12	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
13	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
15	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  true);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
16	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_PREFIX,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_PREFIX,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BASE64_PREFIX,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
17	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
18	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  null);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  null);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
19	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_PREFIX,  true);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_PREFIX,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BIASE64_PREFIX,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
20	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE,  false);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE,  false);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
21	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  0);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  0);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
22	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
23	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
24	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
25	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  0,  binaryData.length);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
26	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  0);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  0);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
27	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  0,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  0,  binaryData.length);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
28	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  0);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  0);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
29	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  buffer,  null,  null);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  buffer,  null,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  buffer,  null,  null);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
30	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  0,  null);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  0,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  0,  null);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
31	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  -1);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  -1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  -1);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
32	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  ';');  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  ';');  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  ';');	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
33	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  1);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  1);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
34	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  0);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  0);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
35	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  0,  binaryData.length);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
36	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  0,  binaryData.length);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
37	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  1);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  1);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
38	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  1);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  1);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
39	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  false);  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  false);	  return    encodeBase64(binaryData,    false,    0);    	non-compiled	[CE]  ';'  expected	7	None	replace
40	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arra  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arra  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arra	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
41	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  bytes,  0,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  bytes,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  bytes,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  byte[0],  0,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  byte[0],  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  byte[0],  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  this.binaryData,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buf,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buf,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buf,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  byteData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  byteData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  byteData,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
49	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
50	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
51	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
52	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
53	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  b.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  b.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  b.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
54	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  binaryData.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
55	[BUG]  [BUGGY]  return  encodeBase64(b,  false,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(b,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(b,  false,  binaryData.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
56	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  binary.length);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  binary.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  binary.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
57	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  binaryData.length);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  binaryData.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
58	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  b.length,  b.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  b.length,  b.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  b.length,  b.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
59	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  true);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  true);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
60	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1,  false);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1,  false);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
61	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)/  2,  false);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)/  2,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)/  2,  false);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
62	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  0xff);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  0xff);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  0xff);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
63	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)+  1);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
64	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true));  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true));	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
65	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
66	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  buffer);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  buffer);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
67	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  32));  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  32));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  32));	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
68	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  0));  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  0));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  0));	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
69	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0,  binaryData.length);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  0,  binaryData.length);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
70	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  32);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  32);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  32);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
71	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData).length);  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData).length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData).length);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
72	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  true);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
73	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
74	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BUFFER_SIZE,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BUFFER_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BUFFER_SIZE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
75	[BUG]  [BUGGY]  return  encodeBase64(binaryData.length,  false);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.length,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.length,  false);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
76	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  null);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  null);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
77	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  true);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false,  true);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
78	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
79	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
80	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  i++)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
81	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  null);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  null);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
82	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  0);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  0);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
83	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  arrayOctet);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  arrayOctet);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  arrayOctet);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
84	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  0,  binaryData.length);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
85	[BUG]  [BUGGY]  return  encodeBase64(buff,  false,  null);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(buff,  false,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(buff,  false,  null);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
86	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  buffer);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  buffer);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
87	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  binaryData);  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  binaryData);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
88	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  -1);  [CE]  ';'  expected  [FE]                                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  -1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  -1);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
89	[BUG]  [BUGGY]  return  encodeBase64(buff,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(buff,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(buff,  true);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
90	[BUG]  [BUGGY]  return  encodeBase64(buff,  false,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(buff,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(buff,  false,  binaryData.length);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
91	[BUG]  [BUGGY]  return  encodeBase64(rebinaryData,  false);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(rebinaryData,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(rebinaryData,  false);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
92	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER,  false);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER,  false);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
93	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
94	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
95	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
96	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
97	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  0,  binaryData.length);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
98	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  buffer);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  buffer);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  buffer);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
99	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  false);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  false);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  false);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
100	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(buff,  binaryData);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(buff,  binaryData);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(buff,  binaryData);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
101	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  base64.length);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
102	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  4);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  4);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  4);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
103	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  1);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  1);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  1);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
104	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  null);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  null);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  null);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
105	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
106	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
107	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
108	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
109	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  buffer.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  buffer.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  buffer.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
110	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
111	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  -  1);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  -  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  binaryData.length  -  1);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
112	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  -  2);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  -  2);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  binaryData.length  -  2);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
113	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  +  1);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length  +  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  binaryData.length  +  1);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
114	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT,  false,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT,  false,  binaryData.length);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
115	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  true);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  true);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
116	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData));  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData));	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
117	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1,  false);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1,  false);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
118	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)/  2,  false);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)/  2,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)/  2,  false);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
119	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)&  0xff);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)&  0xff);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)&  0xff);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
120	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)+  1);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
121	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true));  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true));	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
122	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData,  true);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  1);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  1);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  1);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(bufferedData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(bufferedData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(bufferedData,  0,  binaryData,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  2);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  2);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  -  2);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  +  1);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  +  1);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length  +  1);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
127	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
128	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD,  true);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
129	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false,  binaryData.length);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
130	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_PAD,  true);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_PAD,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_PAD,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
131	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_PAD,  true);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_PAD,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_PAD,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
132	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR,  false);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR,  false);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
133	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  null);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  null);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
134	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
135	[BUG]  [BUGGY]  ||  binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  ||  binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	||  binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
136	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
137	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
138	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
139	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false,  binaryData.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false,  binaryData.length);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
140	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
141	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
142	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length);  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
143	[BUG]  [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }  [CE]  ';'  expected  [FE]                                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  true);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
144	[BUG]  [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  [CE]  ';'  expected  [FE]                                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
145	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
146	[BUG]  [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
147	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  true);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
148	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
149	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_NAMES,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_NAMES,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BASE64_FIELD_NAMES,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
150	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_NAMES,  true);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_NAMES,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BIASE64_FIELD_NAMES,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
151	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
152	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
153	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
154	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
155	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.array  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.array  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.array	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
156	[BUG]  [BUGGY]  return  encodeBase64(binaryData.length,  true);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.length,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.length,  true);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
157	[BUG]  [BUGGY]  return  encodeBase64(binaryData);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
158	[BUG]  [BUGGY]  return  encodeBase64(binarData,  false);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binarData,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binarData,  false);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
159	[BUG]  [BUGGY]  return  encodeBase64(bufferedData,  true);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(bufferedData,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(bufferedData,  true);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
160	[BUG]  [BUGGY]  return  encodeBase64(b,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(b,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(b,  true);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
161	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(buff,  true);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(buff,  true);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(buff,  true);	      byte[]    binaryData    =    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	18	None	replace
162	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData.length,  true);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData.length,  true);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData.length,  true);	      byte[]    binaryData    =    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	18	None	replace
163	[BUG]  [BUGGY]  byte[]  BinaryData  =  encodeBase64(binaryData,  false);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  BinaryData  =  encodeBase64(binaryData,  false);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  BinaryData  =  encodeBase64(binaryData,  false);	      byte[]    binaryData    =    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	18	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
165	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(byte,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(byte,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(byte,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(buff,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
167	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  buffer);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  buffer);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
168	[BUG]  [BUGGY]  return  encodeBase64(b,  false,  buffer);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(b,  false,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(b,  false,  buffer);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
169	[BUG]  [BUGGY]  return  encodeBase64(b,  false,  binaryData);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(b,  false,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(b,  false,  binaryData);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
170	[BUG]  [BUGGY]  return  encodeBase64(arrayOctet,  false,  binaryData);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(arrayOctet,  false,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(arrayOctet,  false,  binaryData);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
171	[BUG]  [BUGGY]  return  encodeBase64(arrayOctet,  false,  buffer);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(arrayOctet,  false,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(arrayOctet,  false,  buffer);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
172	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  0,  buffer);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  0,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  0,  buffer);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
173	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  this);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  this);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  this);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
174	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  buffer);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  buffer);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
175	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  this.arrayOctet);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  this.arrayOctet);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  this.arrayOctet);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
176	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  base64);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  base64);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  base64);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
177	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  new  byte[0]);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  new  byte[0]);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  new  byte[0]);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
178	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  buffer);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  buffer);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
179	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  binaryData.length);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  binaryData.length);	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
180	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  true);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
181	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_SIZE,  true);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BASE64_SIZE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
182	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
183	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  null);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  null);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
184	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  0);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  0);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
185	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  true);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
186	[BUG]  [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_TYPE,  true);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.DEFAULT_BASE64_TYPE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.DEFAULT_BASE64_TYPE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
187	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
188	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64,  true);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
189	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  null);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  null);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
190	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
191	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
192	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
193	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arra  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arra  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arra	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
194	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  0);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  0);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
195	[BUG]  [BUGGY]  while(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  while(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	while(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
196	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
197	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_RESIZE_FACTOR);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
198	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER,  true);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
199	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE,  true);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
200	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
201	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
202	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
203	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  BYTE_ENCODE_TABLE);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  BYTE_ENCODE_TABLE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  BYTE_ENCODE_TABLE);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
204	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  4);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  4);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  4);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
205	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  binaryData.length);	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
206	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null,  ';');  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  null,  ';');  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null,  ';');	  return    encodeBase64(binaryData,    false,    null);    	non-compiled	[CE]  ';'  expected	38	None	replace
207	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  base64,  0,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  base64,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  base64,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
208	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  -  1);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  -  1);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  -  1);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
209	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  new  byte[binaryData.length],  0,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  new  byte[binaryData.length],  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  new  byte[binaryData.length],  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	12	None	replace
210	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
211	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  encodeBase64(binaryData));  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  encodeBase64(binaryData));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  encodeBase64(binaryData));	      	non-compiled	[CE]  ';'  expected	9	None	replace
212	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
213	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
214	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
215	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
216	[BUG]  [BUGGY]  while(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  while(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	while(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
217	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
218	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
219	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
220	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
221	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
222	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  null);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  null);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  null);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
223	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  0);  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  0);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
224	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
225	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BYTE_SIZE);  [CE]  ';'  expected  [FE]                              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BYTE_SIZE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.DEFAULT_BYTE_SIZE);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
226	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  buffer.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  buffer.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  buffer.length);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
227	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  BinaryData.BASE64_VALUES);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  BinaryData.BASE64_VALUES);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  BinaryData.BASE64_VALUES);	  return    encodeBase64(binaryData,    false,    b.length);    	non-compiled	[CE]  ';'  expected	36	None	replace
228	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
229	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  0,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  0,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  0,  binaryData.length);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  encodeBase64,  0,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  encodeBase64,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  encodeBase64,  0,  binaryData.length);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  1,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  1,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  1,  binaryData.length);	      System.arraycopy(binaryData,    0,    buffer,    0,    binaryData.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
232	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  0,  true);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  0,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  0,  true);	  return    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	1	None	replace
233	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	19	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
235	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
236	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
237	[BUG]  [BUGGY]  return  encodeBase64(binaryData.deFAULT_BASE64_TYPE,  true);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.deFAULT_BASE64_TYPE,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.deFAULT_BASE64_TYPE,  true);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
238	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  true,  false);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  true,  false);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  true,  false);	      byte[]    binaryData    =    encodeBase64(binaryData,    true);    	non-compiled	[CE]  ';'  expected	18	None	replace
239	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true,  BinaryData.length);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  true,  BinaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true,  BinaryData.length);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
240	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  binaryData.length,  binaryData.length);	  return    encodeBase64(binaryData,    false,    binaryData.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
241	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  binaryData);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  binaryData);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
242	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  this.arrayOctet);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  false,  this.arrayOctet);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  this.arrayOctet);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
243	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
244	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
245	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
246	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  System.identityHashCode(binaryData));  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  System.identityHashCode(binaryData));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  System.identityHashCode(binaryData));	  return    encodeBase64(binaryData,    null);    	non-compiled	[CE]  ';'  expected	35	None	replace
247	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES  |  BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES  |  BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES  |  BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
248	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arra  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arra	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
249	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
250	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
251	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
252	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  buffer[i]  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
253	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0,  buffer.length  =  binaryData.length;  i  <  0;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
254	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.toByteArray(binaryData),  false);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.toByteArray(binaryData),  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.toByteArray(binaryData),  false);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
255	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.toBinaryArray(binaryData),  false);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.toBinaryArray(binaryData),  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.toBinaryArray(binaryData),  false);	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
256	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  false);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData)&  false);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
257	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  true);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	4	None	replace
258	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
259	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  base64);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
260	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)-  1);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)-  1);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)-  1);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
261	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)||  binaryData.length  >  0);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)||  binaryData.length  >  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData)||  binaryData.length  >  0);	  return    encodeBase64(ByteBuffer.toByteBuffer(binaryData),    false);    	non-compiled	[CE]  ';'  expected	2	None	replace
262	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  encodeBase64,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
263	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
264	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  ==  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  ==  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length  ==  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
265	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length);  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length);  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length);  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
266	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
267	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
268	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
269	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
270	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
271	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,    false);    	non-compiled	[CE]  ';'  expected	29	None	replace
272	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
273	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length;  }  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length;  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length;  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
274	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  buffer.length));  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  buffer.length));  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData,  buffer.length));	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
275	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  binaryData);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  binaryData);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
276	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  b);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  b);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  b);	  return    encodeBase64(ByteBuffer.parseByteBuffer(binaryData));    	non-compiled	[CE]  ';'  expected	6	None	replace
277	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
278	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null,  binaryData.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  null,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,    false);    	non-compiled	[CE]  ';'  expected	30	None	replace
279	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length  >  0);  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length  >  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  binaryData.length  >  0);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
280	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.EMPTY_BYTE_SIZE);  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.EMPTY_BYTE_SIZE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  BinaryData.EMPTY_BYTE_SIZE);	  return    encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,    false);    	non-compiled	[CE]  ';'  expected	8	None	replace
281	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  BinaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
282	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  --i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  --i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  --i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }	      if(binaryData!=    null)    {    for(int    i    =    0,    len    =    binaryData.length;    i    <    len;    ++i)    {    buffer[i]    =    encodeBase64(binaryData,    true);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
283	[BUG]  [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
284	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  1,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
285	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
286	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  BinaryData.DEFAULT_BUFFER_SIZE);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
287	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_RESIZE_FACTOR);	  return    encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,    false);    	non-compiled	[CE]  ';'  expected	3	None	replace
288	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length  >  0);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length  >  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  binaryData.length  >  0);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
289	[BUG]  [BUGGY]  return  encodeBase64(binaryData.toByteArray(),  false);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData.toByteArray(),  false);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData.toByteArray(),  false);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,    false);    	non-compiled	[CE]  ';'  expected	28	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
291	[BUG]  [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
292	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
293	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  new  byte[BinaryData.length];  System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
294	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  buffer.toByteArray();  }  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  buffer.toByteArray();  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  return  buffer.toByteArray();  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
295	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
296	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  encodeBase64(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  encodeBase64(binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  encodeBase64(binaryData,  0,  binaryData.length);  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
297	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
298	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  new  byte[0];  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  new  byte[0];  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(buff,  false);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  return  new  byte[0];  }	  return    encodeBase64(buff,    false);    	non-compiled	[CE]  ';'  expected	5	None	replace
299	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
300	[BUG]  [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  for(int  i  =  0;  i  <  binaryData.length;  ++i)  {  buffer[i]  =  encodeBase64(binaryData[i]);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
301	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  return  encodeBase64(binaryData);  }  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  return  encodeBase64(binaryData);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
302	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length  <  =  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
303	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  2)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length  <  2)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length  <  2)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
304	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [CE]  ';'  expected  [FE]                          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	19	None	replace
305	[BUG]  [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64Charset);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  byte[]  binaryData  =  encodeBase64(binaryData,  base64Charset);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	byte[]  binaryData  =  encodeBase64(binaryData,  base64Charset);	      byte[]    binaryData    =    encodeBase64(binaryData);    	non-compiled	[CE]  ';'  expected	10	None	replace
306	[BUG]  [BUGGY]  return  encodeBase64(buff,  false,  binaryData);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(buff,  false,  binaryData);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(buff,  false,  binaryData);	  return    encodeBase64(binaryData,    false,    buffer);    	non-compiled	[CE]  ';'  expected	37	None	replace
307	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  buffer);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  buffer);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  buffer);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
308	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  '.');  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  '.');  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  '.');	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
309	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null,  buffer.length);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(binaryData,  null,  null,  buffer.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null,  buffer.length);	  return    encodeBase64(binaryData,    null,    null);    	non-compiled	[CE]  ';'  expected	34	None	replace
310	[BUG]  [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null  ||  binaryData.length!=  0)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
311	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
312	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length  >  0);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length  >  0);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  binaryData.length  >  0);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
313	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  Boolean.TRUE);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  Boolean.TRUE);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  Boolean.TRUE);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,    false);    	non-compiled	[CE]  ';'  expected	31	None	replace
314	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  binaryData.length);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  binaryData.length);  [BUGGY]    }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  binaryData.length);	  return    encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
315	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  new  byte[binaryData.length]);  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
316	[BUG]  [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	Arrays.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);	      if(binaryData!=    null)    {    System.arraycopy(binaryData,    0,    buffer,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
317	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
318	[BUG]  [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
319	[BUG]  [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big    [CONTEXT]    public  static  byte[]  encodeBase64(byte[]  binaryData)  {    [BUGGY]  if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length  [BUGGY]    return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length	      if(binaryData    ==    null)    {    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    System.arraycopy(binaryData,    0,    binaryData,    0,    binaryData.length);    }    else    {    System.arraycopy(binaryData,    0,    binaryData.length);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
