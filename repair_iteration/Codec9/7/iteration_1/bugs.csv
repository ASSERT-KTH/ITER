bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  true);  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  true);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  true);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
2	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  false);  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.toByteBuffer(binaryData),  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
3	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BUFFER_SIZE,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
4	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  false);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData),  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
5	[BUG]  [BUGGY]  return  encodeBase64(buff,  false);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(buff,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(buff,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
6	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData));  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.parseByteBuffer(binaryData));	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
7	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  0);  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  false,  0);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  0);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
8	[BUG]  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(ByteBuffer.DEFAULT_BYTE_SIZE,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
9	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	  	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
10	[BUG]  [BUGGY]    byte[]  binaryData  =  encodeBase64(binaryData);  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    byte[]  binaryData  =  encodeBase64(binaryData);  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    byte[]  binaryData  =  encodeBase64(binaryData);		non-compiled	[CE]  ';'  expected	14	None	add
11	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
12	[BUG]  [BUGGY]    System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);		non-compiled	[CE]  ';'  expected	14	None	add
13	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
14	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
15	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
16	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
17	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
18	[BUG]  [BUGGY]    byte[]  binaryData  =  encodeBase64(binaryData,  true);  [CE]  ';'  expected  [FE]                    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    byte[]  binaryData  =  encodeBase64(binaryData,  true);  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    byte[]  binaryData  =  encodeBase64(binaryData,  true);		non-compiled	[CE]  ';'  expected	14	None	add
19	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
20	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
21	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
22	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
23	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
24	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
25	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  buffer,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
26	[BUG]  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData  ==  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
27	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
28	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false);  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_TYPE,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
29	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false);  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_SIZE,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
30	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_NAMES,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
31	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_PREFIX,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
32	[BUG]  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(BinaryData.DEFAULT_BASE64_FIELD_PAD,  false);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
33	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length);  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  false,  binaryData.length);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  binaryData.length);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
34	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null,  null);  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  null,  null);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null,  null);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
35	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  null);  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  null);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  null);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
36	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  b.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  false,  b.length);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  b.length);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
37	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  buffer);  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  false,  buffer);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  buffer);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
38	[BUG]  [BUGGY]  return  encodeBase64(binaryData,  false,  null);  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]  return  encodeBase64(binaryData,  false,  null);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	return  encodeBase64(binaryData,  false,  null);	return  encodeBase64(binaryData,  false);  	non-compiled	[CE]  ';'  expected	13	None	replace
39	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
40	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
41	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
42	[BUG]  [BUGGY]    System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    System.arraycopy(binaryData,  0,  buffer,  0,  binaryData.length);		non-compiled	[CE]  ';'  expected	14	None	add
43	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
44	[BUG]  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  System.arraycopy(binaryData,  0,  binaryData,  0,  binaryData.length);  System.arraycopy(binaryData,  0,  binaryData.length);  }  else  {  System.arraycopy(binaryData,  0,  binaryData.length);  }		non-compiled	[CE]  ';'  expected	14	None	add
45	[BUG]  [BUGGY]    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData,  true);  }		non-compiled	[CE]  ';'  expected	14	None	add
46	[BUG]  [BUGGY]    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [CE]  ';'  expected  [FE]                  java.lang.IllegalArgumentException:  Input  array  too  big  [CONTEXT]  public  static  byte[]  encodeBase64(byte[]  binaryData)  {  [BUGGY]    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }  [BUGGY]  return  encodeBase64(binaryData,  false);  }  [CLASS]  Base64  [METHOD]  encodeBase64  [RETURN_TYPE]  byte[]  byte[]  binaryData  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  binaryData  buffer  encodeTable  in  lineSeparator  boolean  eof  urlSafe  byte  PAD  b  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  modulus  pos  readPos  result  x  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.2886751345948129	667	667	1	replace	    if(binaryData!=  null)  {  for(int  i  =  0,  len  =  binaryData.length;  i  <  len;  ++i)  {  buffer[i]  =  encodeBase64(binaryData);  }		non-compiled	[CE]  ';'  expected	14	None	add
