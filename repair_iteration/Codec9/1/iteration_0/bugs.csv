bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException("Input array too big, the output array would be bigger (" + len +  ") than the specified maxium size of " + [FE] java.lang.IllegalArgumentException: Input array too big [CONTEXT] public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) { if (binaryData == null || binaryData.length == 0) { return binaryData; } long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR); if (len > maxResultSize) { [BUGGY] throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +    len +        ") than the specified maxium size of " + [BUGGY] len + ") than the specified maxium size of " + maxResultSize); } Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe); return b64.encode(binaryData); } [CLASS] Base64 [METHOD] encodeBase64 [RETURN_TYPE] byte[]  byte[] binaryData boolean isChunked boolean urlSafe int maxResultSize [VARIABLES] byte[] CHUNK_SEPARATOR DECODE_TABLE STANDARD_ENCODE_TABLE URL_SAFE_ENCODE_TABLE arrayOctet b binaryData buffer encodeTable in lineSeparator pArray result boolean eof isChunked urlSafe Base64 b64 byte PAD b octet int DEFAULT_BUFFER_RESIZE_FACTOR DEFAULT_BUFFER_SIZE MASK_6BITS MASK_8BITS MIME_CHUNK_SIZE PEM_CHUNK_SIZE b bAvail bPos currentLinePos decodeSize encodeSize i inAvail inPos len lineLength maxResultSize modulus pos readPos result x long len  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	829	831	1	replace	
2	[BUG] [BUGGY] [FE] java.lang.IllegalArgumentException: Input array too big [CONTEXT] public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) { if (binaryData == null || binaryData.length == 0) { return binaryData; } long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR); if (len > maxResultSize) { [BUGGY] [BUGGY] throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +    len +        ") than the specified maxium size of " + len + ") than the specified maxium size of " + maxResultSize); } Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe); return b64.encode(binaryData); } [CLASS] Base64 [METHOD] encodeBase64 [RETURN_TYPE] byte[]  byte[] binaryData boolean isChunked boolean urlSafe int maxResultSize [VARIABLES] byte[] CHUNK_SEPARATOR DECODE_TABLE STANDARD_ENCODE_TABLE URL_SAFE_ENCODE_TABLE arrayOctet b binaryData buffer encodeTable in lineSeparator pArray result boolean eof isChunked urlSafe Base64 b64 byte PAD b octet int DEFAULT_BUFFER_RESIZE_FACTOR DEFAULT_BUFFER_SIZE MASK_6BITS MASK_8BITS MIME_CHUNK_SIZE PEM_CHUNK_SIZE b bAvail bPos currentLinePos decodeSize encodeSize i inAvail inPos len lineLength maxResultSize modulus pos readPos result x long len  	projects/Codec9/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	829	831	1	add	
