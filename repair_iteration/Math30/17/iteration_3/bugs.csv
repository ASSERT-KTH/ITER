bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1  *  (n2  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	75	1	replace
2	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n2)/  2.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	75	1	replace
3	[BUG]  [BUGGY]  final  double  n2  =(n1  *  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =(n1  *  n2)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =(n1  *  n2)/  2.0;	  final    double    n2    =    (0    *    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
4	[BUG]  [BUGGY]  final  double  n2  =  (0  *  n2prod)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (0  *  n2prod)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (0  *  n2prod)/  2.0;	  final    double    n2    =    (0    *    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
5	[BUG]  [BUGGY]  final  double  n2  =  (0  *  n1)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (0  *  n1)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (0  *  n1)/  2.0;	  final    double    n2    =    (0    *    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
6	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	add
7	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n2  +  n1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n2prod  *  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	add
8	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	add
9	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2)/2    2.0;    	non-compiled	[CE]  ';'  expected	25	None	replace
10	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2)/2  2.0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2)/2  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n2)/2  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2)/2    2.0;    	non-compiled	[CE]  ';'  expected	25	None	replace
11	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/2  2.0;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/2  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n2  +  n2)/2  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2)/2    2.0;    	non-compiled	[CE]  ';'  expected	25	None	replace
12	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  n2prod  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  n2prod  +  2;	  final    double    n2    =    n1    *    n2    +    2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	58	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	23	2	replace
14	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n2  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	23	2	replace
15	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);  [CE]  cannot  find  symbol  VarU  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  VarU	9	None	replace
16	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [CE]  cannot  find  symbol  VarU  [FE]                          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  VarU	9	None	replace
17	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);  [CE]  cannot  find  symbol  VarU  [FE]                            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  VarU	9	None	replace
18	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2)+  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2)+  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
19	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)+  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)+  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
20	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2)+  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2)+  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
21	[BUG]  [BUGGY]  final  double  n1  =  n2prod  *  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n2prod  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n2prod  *  n1;	  final    double    n1    =    n1    *    n2prod;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
22	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
23	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1,  n2);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1,  n2);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
24	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2,  n1);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
25	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	27	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  /  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	27	2	replace
27	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  +  n1)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  /  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	27	2	replace
28	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
29	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
30	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	78	None	replace
31	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2prod  +  1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	78	None	replace
32	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  VarU  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  VarU	6	None	replace
33	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	6	None	replace
34	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
35	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  *  (n1  +  n2)/  2.0;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    final  double  VarU  =  (n1  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  ')'  expected	69	None	add
36	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1.  *  (n1  +  n2)/  2.0;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1.  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1.  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	69	None	add
37	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2  =  n1  *  n2prod;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  n2prod;	  final    double    n2    =    n1    *    n2prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
38	[BUG]  [BUGGY]  final  double  n1prod  =  n1  *  n2;  [CE]  cannot  find  symbol  VarU  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n1prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  VarU	37	None	replace
39	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [CE]  cannot  find  symbol  VarU  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n1prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  VarU	37	None	replace
40	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n1prod  =  n1  *  n2;  [CE]  cannot  find  symbol  VarU  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n1prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  int  n1prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n1prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  VarU	37	None	replace
41	[BUG]  [BUGGY]  final  double  n2  =(n1  +  n2)/  2.0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =(n1  +  n2)/  2.0);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =(n1  +  n2)/  2.0);	  final    double    n2    =    (n1    +    n2)/    2.0L;    	non-compiled	[CE]  ';'  expected	48	None	replace
42	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue();  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin.doubleValue();	  final    double    n2    =    n1    *    Umin;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
43	[BUG]  [BUGGY]  final  double  n2  =  n2  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  *  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  Umin;	  final    double    n2    =    n1    *    Umin;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
44	[BUG]  [BUGGY]  final  double  n1  =  n2  *  Umin;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n2  *  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n2  *  Umin;	  final    double    n1    =    n1    *    Umin;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	replace
45	[BUG]  [BUGGY]  final  double  n1  =  n1  *  Umin  +  n2;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n1  *  Umin  +  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n1  *  Umin  +  n2;	  final    double    n1    =    n1    *    Umin;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	replace
46	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	add
47	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  (n1  *  (n2  +  n1)/  2.0;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  (n1  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    final  double  VarU  =  (n1  *  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  ')'  expected	10	None	add
48	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1.  *  (n2  +  n1)/  2.0;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1.  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1.  *  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	10	None	add
49	[BUG]  [BUGGY]  final  double  n2Prod  =  n1  +  n2Prod;  [CE]  cannot  find  symbol  VarU  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2Prod  =  n1  +  n2Prod;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2Prod  =  n1  +  n2Prod;	  final    double    n2    =    n1    +    n2Prod;    	non-compiled	[CE]  cannot  find  symbol  VarU	44	None	replace
50	[BUG]  [BUGGY]  final  double  n2  =  n2prod  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2prod  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2prod  *  n1;	  final    double    n2    =    n2    *    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
51	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  EU;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  EU;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  EU;	  final    int    n2prod    =    n1    *    n2;    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
52	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  +  n2prod  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2prod  +  1;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
53	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2Prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  +  n2Prod  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2Prod  +  1;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
54	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  2;  [CE]  cannot  find  symbol  VarU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  2;	  final    double    n2prod    =    n1    *    n2    +    2;    	non-compiled	[CE]  cannot  find  symbol  VarU	41	None	replace
55	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1)*  n2;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1)*  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n1)*  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1)    *    n2;    	non-compiled	[CE]  ';'  expected	81	None	replace
56	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1)*  n2;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1)*  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1)*  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1)    *    n2;    	non-compiled	[CE]  ';'  expected	81	None	replace
57	[BUG]  [BUGGY]  final  int  n2  =  n1  *  (n2  +  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2  =  n1  *  (n2  +  n1);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  (n2  +  n1);	  final    int    n2    =    n1    *    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
58	[BUG]  [BUGGY]  final  double  n2  =  (2  *  n2prod  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (2  *  n2prod  +  n2)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (2  *  n2prod  +  n2)/  2.0;	  final    double    n2    =    (2    *    n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	47	None	replace
59	[BUG]  [BUGGY]  final  double  n2  =  2  *  n1  +  n2)/  2.0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  2  *  n1  +  n2)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  2  *  n1  +  n2)/  2.0;	  final    double    n2    =    (2    *    n1    +    n2)/    2.0;    	non-compiled	[CE]  ';'  expected	47	None	replace
60	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	74	None	replace
61	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n2  +  n1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	74	None	replace
62	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n2  +  n2)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n2  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n2  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	74	None	replace
63	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	67	None	add
64	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  *  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n2  *  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	67	None	add
65	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n2  *  n1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    final  double  VarU  =  n2prod  *  (n2  *  n1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	67	None	add
66	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n2prod  +  1)/  2.0;	  final    double    VarU    =    n1prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	13	None	replace
67	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n2prod  +  1  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n2prod  +  1  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n2prod  +  1  +  1)/  2.0;	  final    double    VarU    =    n1prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	13	None	replace
68	[BUG]  [BUGGY]  final  double  n2  =  n1  *  EU  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  EU  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  EU  +  2;	  final    double    n2    =    n1    *    EU    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	71	None	replace
69	[BUG]  [BUGGY]  final  double  n2  =  n2  *  EU  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  *  EU  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  EU  +  1;	  final    double    n2    =    n1    *    EU    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	71	None	replace
70	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2prod  +  n1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2prod  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2prod  +  n1)/  2.0;	  final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	11	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (n1  +  n1)/  2.0;	  final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
72	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n1)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  +  n1)/  2.0;	  final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
73	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n2  +  1;  [CE]  cannot  find  symbol  VarU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n2  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2  *  n2  +  1;	  final    double    n2prod    =    n2    *    n1    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	64	None	replace
74	[BUG]  [BUGGY]  final  int  n2prod  =  n2  *  n1  +  1;  [CE]  cannot  find  symbol  VarU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n2  *  n1  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n2  *  n1  +  1;	  final    double    n2prod    =    n2    *    n1    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	64	None	replace
75	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	add
76	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	add
77	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1.  +  n2)/  2.0;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1.  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    final  double  VarU  =  n1n2prod  /  (n1.  +  n2)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	17	None	add
78	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2,  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2,  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2,  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2,    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
79	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2,  1;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2,  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2,  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2,    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
80	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2,  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2,  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2,  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2,    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
81	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n2    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	60	None	replace
82	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2)/  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (n1  +  n2)/  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (n1  +  n2)/  2;	  final    double    n2    =    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
83	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (n1  +  n2)+  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (n1  +  n2)+  1;	  final    double    n2    =    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
84	[BUG]  [BUGGY]  final  double  n2  =  n2  *  EU;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  *  EU;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  EU;	  final    double    n2    =    n1    *    EU;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
85	[BUG]  [BUGGY]  final  double  n2  =  n0  *  EU;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n0  *  EU;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n0  *  EU;	  final    double    n2    =    n1    *    EU;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	76	2	replace
87	[BUG]  [BUGGY]  final  double  VarU  =  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	76	2	replace
88	[BUG]  [BUGGY]  final  double  VarU  =  n1  +  n2prod  /  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  +  n2prod  /  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  +  n2prod  /  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	76	None	replace
89	[BUG]  [BUGGY]  final  double  VarU  =  n1  +  n2)/  2.0;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  ';'  expected	76	None	replace
90	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  Umin  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin  +  2;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
91	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  1,  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  Umin  +  1,  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin  +  1,  n2;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
92	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  3;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  Umin  +  3;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin  +  3;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
93	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1.    +    n2)/    2.0;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
94	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2,;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2,;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2,;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2,;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
95	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  +  n1prod;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  +  n1prod;	  final    double    n2    =    n1    +    n2prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	43	None	replace
96	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  /  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	18	None	replace
97	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(Z);  [CE]  cannot  find  symbol  Z  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(Z);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(Z);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(z);    	non-compiled	[CE]  cannot  find  symbol  Z	7	None	replace
98	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1n2prod);  [CE]  cannot  find  symbol  VarU  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1n2prod);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1n2prod);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(z);    	non-compiled	[CE]  cannot  find  symbol  VarU	7	None	replace
99	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [CE]  cannot  find  symbol  VarU  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(z);    	non-compiled	[CE]  cannot  find  symbol  VarU	7	None	replace
100	[BUG]  [BUGGY]  final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	12	None	replace
101	[BUG]  [BUGGY]  final  double  n2  =  n1  *  (n2  +  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  (n2  +  n2);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  (n2  +  n2);	  final    double    n2    =    n1    *    (n2    +    n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	32	None	replace
102	[BUG]  [BUGGY]  final  double  n2  =  n2  *  (n1  +  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  *  (n1  +  n2);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  (n1  +  n2);	  final    double    n2    =    n1    *    (n2    +    n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	32	None	replace
103	[BUG]  [BUGGY]  final  int  n2  =  n1  *  EU;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2  =  n1  *  EU;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  EU;	  final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
104	[BUG]  [BUGGY]  final  double  n2prod  =  n0  *  n2;  [CE]  cannot  find  symbol  n0  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n0	80	None	replace
105	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
106	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (n1  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
108	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1  *  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
110	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n1)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1  *  (n2  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
112	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n2)/  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
113	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  *  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  *  (n1  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	68	None	replace
114	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	24	None	replace
115	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2);	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2);    	non-compiled	[CE]  ';'  expected	35	None	replace
116	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2);    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	35	None	replace
117	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2Prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  n2Prod  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  n2Prod  +  1;	  final    double    n2    =    n1    *    n2prod    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	39	None	replace
118	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	add
119	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	add
120	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n2prod  /  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	add
121	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	add
122	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n2  *  (n1  +  n2)/  2.0;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n2  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    final  double  VarU  =  (n2  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  ')'  expected	65	None	add
123	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  Final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  Final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    Final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  not  a  statement	65	None	add
124	[BUG]  [BUGGY]  final  double  n1  =  n1  *  n2prod  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n1  *  n2prod  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n1  *  n2prod  +  1;	  final    double    n1    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
125	[BUG]  [BUGGY]  final  double  n1  =  n2  *  n1  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n2  *  n1  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n2  *  n1  +  1;	  final    double    n1    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
126	[BUG]  [BUGGY]  final  double  n2  =  n2prod  +  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2prod  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2prod  +  n1;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
127	[BUG]  [BUGGY]  final  double  n1  =  n2  +  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n1  =  n2  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n2  +  n1;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
128	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2.  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
129	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
130	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2.  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
131	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	22	None	replace
132	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n1n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
133	[BUG]  [BUGGY]  final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  +  n1prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	19	None	replace
134	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n2;  [CE]  cannot  find  symbol  VarU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n2  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2  *  n2;	  final    double    n2prod    =    n2    *    n1;    	non-compiled	[CE]  cannot  find  symbol  VarU	45	None	replace
135	[BUG]  [BUGGY]  final  int  n2prod  =  n2  *  n1;  [CE]  cannot  find  symbol  VarU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n2  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n2  *  n1;	  final    double    n2prod    =    n2    *    n1;    	non-compiled	[CE]  cannot  find  symbol  VarU	45	None	replace
136	[BUG]  [BUGGY]  final  double  n2prod  =  n1.  *  n2  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1.  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1.  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1.    *    n2    +    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
137	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1.  *  n2  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1.  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1.  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1.    *    n2    +    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
138	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2.    +    1)/    2.0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
139	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2.  +  1)/  2.0;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2.  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n2.  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final    double    VarU    =    n1n2prod    *    (n1    +    n2.    +    1)/    2.0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
140	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
141	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
142	[BUG]  [BUGGY]  final  double  z2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  VarU  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  VarU	52	None	replace
143	[BUG]  [BUGGY]  final  int  n1  =  n2  *  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n1  =  n2  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n1  =  n2  *  n1;	  final    double    n1    =    n2    *    n1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
144	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
145	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
146	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
147	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
148	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
149	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2.;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2.;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
150	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2.;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
151	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	add
152	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  (n2  *  (n1  +  n2  +  1)/  2.0;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  (n2  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  (n2  *  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  ')'  expected	59	None	add
153	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	add
154	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2)/  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2)/  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2)/  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
155	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1  *  (n2)  +  n1)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1  *  (n2)  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1  *  (n2)  +  n1)/  2.0;	  	non-compiled	[CE]  ';'  expected	10	None	add
156	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n1prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n1prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n1prod  +  1)/  2.0;	  final    double    VarU    =    n1prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	13	None	replace
157	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2  +  n1prod  +  1)/  2.0;	  final    double    VarU    =    n1prod    *    (n1    +    n2prod    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	13	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (2  *  n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (2  *  n1  +  n2)/  2.0;	  final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	66	1	replace
159	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (2  *  n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (2  *  n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (2  *  n1  +  n2)/  2.0;	  final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	66	1	replace
160	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n1prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n1prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
161	[BUG]  [BUGGY]  final  double  n2  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (EU  -  EU)/  FastMath.sqrt(VarU);	  final    double    n2    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
162	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    final  double  VarU  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
163	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  +  n2  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2  +  2;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
164	[BUG]  [BUGGY]  final  double  n2  =  n1  *  (n2  +  n1)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  (n2  +  n1)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  (n2  +  n1)/  2.0;	  final    double    n2    =    n1    *    (n2    +    n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	32	None	replace
165	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2  =  n1  *  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  Umin;	  final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
166	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  n2  +  1;	  final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
167	[BUG]  [BUGGY]  final  double  n2  =  (2  *  n2  +  n1)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (2  *  n2  +  n1)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (2  *  n2  +  n1)/  2.0;	  final    double    n2    =    (2    *    n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	47	None	replace
168	[BUG]  [BUGGY]  final  double  n2  =  (1  *  n1  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (1  *  n1  +  n2)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (1  *  n1  +  n2)/  2.0;	  final    double    n2    =    (2    *    n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	47	None	replace
169	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  4;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  Umin  +  4;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin  +  4;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
170	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2)*  n2;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2)*  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n2)*  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1)    *    n2;    	non-compiled	[CE]  ';'  expected	81	None	replace
171	[BUG]  [BUGGY]  final  double  n2  =  (0  *  n1  /  2.0;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (0  *  n1  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (0  *  n1  /  2.0;	  final    double    n2    =    (0    *    n2)/    2.0;    	non-compiled	[CE]  ')'  expected	63	None	replace
172	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2,  2;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1  *  n2,  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2,  2;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2,    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  +  n1  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	19	1	replace
174	[BUG]  [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  +  n1  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	19	1	replace
175	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  int  n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	24	2	replace
177	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final    double    VarU    =    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	24	2	replace
178	[BUG]  [BUGGY]  Final  double  n2prod  =  n1  *  n2  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  Final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	Final  double  n2prod  =  n1  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    Final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
179	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	add
180	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1  +  2;  [CE]  cannot  find  symbol  VarU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n2  *  n1  +  2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2  *  n1  +  2;	  final    double    n2prod    =    n2    *    n1    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	64	None	replace
181	[BUG]  [BUGGY]  final  double  n2  =  (1  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (1  +  n2)/  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (1  +  n2)/  2.0;	  final    double    n2    =    (n1    +    n2)/    2.0L;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
182	[BUG]  [BUGGY]  final  double  n2  =  n2  +  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  +  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  +  Umin;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
183	[BUG]  [BUGGY]  final  double  n2prod  =  n2.  *  n1  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n2.  *  n1  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2.  *  n1  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1.    *    n2    +    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
184	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2.  +  1)/  2.0;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  /  (n1  +  n2.  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  /  (n1  +  n2.  +  1)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	26	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  /  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	27	2	replace
186	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n1)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  /  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	27	2	replace
187	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    final  double  VarU  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	add
188	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	14	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  /  (n2  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	18	2	replace
190	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n2  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  /  (n2  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	18	2	replace
191	[BUG]  [BUGGY]  final  double  n2  =  (2  *  n1  +  n2)/  2.0L;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  (2  *  n1  +  n2)/  2.0L;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (2  *  n1  +  n2)/  2.0L;	  final    double    n2    =    (n1    +    n2)/    2.0L;    	non-compiled	[CE]  ';'  expected	48	None	replace
192	[BUG]  [BUGGY]  final  double  n2prod  =  n0  *  n2,;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n0  *  n2,;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n0  *  n2,;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2,;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
193	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  +  n1  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	19	1	replace
195	[BUG]  [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n2  +  n1)/  2.0;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  +  n1  *  (n2  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  +  n1  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	19	1	replace
196	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1prod  /  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1prod  /  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	add
197	[BUG]  [BUGGY]  final  double  n2prod  =  n1.length  *  n2  +  1;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n1.length  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1.length  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1.    *    n2    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
198	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  int  n2prod  =  n1  *  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2.;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2.;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
199	[BUG]  [BUGGY]  final  double  n2  =  n0  *  EU  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n0  *  EU  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n0  *  EU  +  1;	  final    double    n2    =    n1    *    EU    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	71	None	replace
200	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1)  +  n2)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1)  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1  *  (n1)  +  n2)/  2.0;	  	non-compiled	[CE]  ';'  expected	69	None	add
201	[BUG]  [BUGGY]  final  double  n2  =  n2  *  n1  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  *  n1  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  n1  +  1;	  final    double    n2    =    n2    *    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
202	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [CE]  cannot  find  symbol  UE  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).cumulativeProbability(z);    	non-compiled	[CE]  cannot  find  symbol  UE	7	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (n1  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
204	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n1)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  *  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n2    *    n1)/    2.0;    	compilable	  [FE]  AssertionError  	68	2	replace
205	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2)  +  n1)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n2)  +  n1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n2    +    n1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n2)  +  n1)/  2.0;	  	non-compiled	[CE]  ';'  expected	15	None	add
206	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2  *  (n1)  +  n2)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2  *  (n1)  +  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n2    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n2  *  (n1)  +  n2)/  2.0;	  	non-compiled	[CE]  ';'  expected	65	None	add
207	[BUG]  [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n1    +    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	12	None	replace
208	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1Prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n2  +  n1Prod;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  +  n1Prod;	  final    double    n2    =    n1    +    n2Prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	44	None	replace
209	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  /  (n1  *  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  /  (n1  *  n2)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  /  (n1  *  n2)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	18	None	replace
210	[BUG]  [BUGGY]  final  double  n2prod  =  n0  *  n2  +  1;  [CE]  cannot  find  symbol  n0  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2prod  =  n0  *  n2  +  1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n0  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n0	28	None	replace
211	[BUG]  [BUGGY]  final  double  n2  =  n1  *  (n2  +  1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  n2  =  n1  *  (n2  +  1);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  (n2  +  1);	  final    double    n2    =    n1    *    (n2    +    n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	32	None	replace
212	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;      [BUGGY]  final  double  VarU  =  n2prod  /  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]        final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  /  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    /    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	27	None	replace
