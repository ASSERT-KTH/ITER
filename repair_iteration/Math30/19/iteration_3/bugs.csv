bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  4;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  VarU)/  4;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  4;	  final    double    z    =    (VarU    -    VarU)/    2;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	74	None	replace
2	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  2  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  VarU)/  2  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  2  +  1;	  final    double    z    =    (VarU    -    VarU)/    2;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	74	None	replace
3	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.floatValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.floatValue()  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.floatValue()  +  1;	  final    VarU    =    z    *    VarU.floatValue();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
5	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
6	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);	  	non-compiled	[CE]  ';'  expected	55	None	add
7	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  normalNormal  =  new  NormalDistribution(n1,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  NormalDistribution  normalNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    final  NormalDistribution  normalNormal  =  new  NormalDistribution(n1,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
8	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
9	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
10	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
11	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
12	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	78	None	add
13	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	78	None	add
14	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n3);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n3);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	78	None	add
15	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	78	None	add
16	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.class);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
17	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1n2prod);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1n2prod);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1n2prod);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
18	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
19	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.min);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.min);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.min);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
20	[BUG]  [BUGGY]  final  double  z  =(VarU  *  varU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  varU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  varU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
21	[BUG]  [BUGGY]  final  double  z  =(n1  *  VarU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(n1  *  VarU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(n1  *  VarU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
22	[BUG]  [BUGGY]  final  double  z  =(vU  *  VarU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(vU  *  VarU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(vU  *  VarU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
23	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	replace
24	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
25	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
26	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]          NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0.0,  0.0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0.0,  0.0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
27	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0.0,  0.0);  [FE]  NotStrictlyPositiveException  [FE]          NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0.0,  0.0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0.0,  0.0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
28	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  +  1);	  final    VarU    =    z    *    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
29	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  /  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  /  2.0);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.multiply(VarU.doubleValue()  /  2.0);	  final    VarU    =    z    *    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
30	[BUG]  [BUGGY]  final  VarU  =  VarU.multiply(z.doubleValue());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU.multiply(z.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU.multiply(z.doubleValue());	  final    VarU    =    z    *    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
31	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
32	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
33	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	add
34	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2prod,  n2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2prod,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2prod,  n2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	add
35	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);	  	non-compiled	[CE]  ';'  expected	53	None	add
36	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	compilable	  [FE]  AssertionError  	31	2	replace
38	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	compilable	  [FE]  AssertionError  	31	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	compilable	  [FE]  AssertionError  	31	2	replace
40	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  4);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	compilable	  [FE]  AssertionError  	31	2	replace
41	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  /  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.doubleValue()  /  1;	  final    VarU    =    z    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
42	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  +  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  +  2;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.doubleValue()  +  2;	  final    VarU    =    z    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
43	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    NotStrictlyPositiveException    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    0);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
44	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      NotStrictlyPositiveException    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    0);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
45	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [CE]  ';'  expected  [FE]        NotStrictlyPositiveException    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    0);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  	non-compiled	[CE]  ';'  expected	69	None	add
46	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          NotStrictlyPositiveException    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    0);    final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
47	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  40.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  VarU)/  40.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  40.0;	  final    double    z    =    (VarU    -    VarU)/    20.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  z);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  z);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
49	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  z);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  z);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  z);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
51	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
53	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
54	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU.MAX_VALUE  /  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  -  VarU.MAX_VALUE  /  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU.MAX_VALUE  /  2.0;	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
55	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0f;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0f;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU  /  2.0f;	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
56	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0L;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0L;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU  /  2.0L;	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  ';'  expected	68	None	replace
57	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
58	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
59	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2prod)/  FastMath.sqrt(VarU,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2prod)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2prod)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
60	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toLowerCase());	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU.toUpperCase());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
61	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue()  +  1);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	28	None	replace
62	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  3);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  3);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  3);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    4);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	replace
63	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    4);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	replace
64	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1,  n2);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,int,int)	79	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    	compilable	  [FE]  AssertionError  	79	2	replace
66	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2,  n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    	compilable	  [FE]  AssertionError  	79	2	replace
67	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  1);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
68	[BUG]  [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
69	[BUG]  [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  2);  [CE]  cannot  find  symbol  standardNormal  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  normalNormal  =  new  NormalDistribution(1,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	non-compiled	[CE]  cannot  find  symbol  standardNormal	67	None	replace
70	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2prod));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.valueOf(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
71	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.valueOf(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
72	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.valueOf(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
73	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]            NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
74	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  1);  [FE]  NotStrictlyPositiveException  [FE]            NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
75	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]              NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
76	[BUG]  [BUGGY]  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [FE]  NotStrictlyPositiveException  [FE]              NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
77	[BUG]  [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0,  0);  [CE]  cannot  find  symbol  standardNormal  [FE]                NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  standardNormal	45	None	replace
78	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue()  +  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue()  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue()  +  1);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
79	[BUG]  [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0f;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0f;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  VarU)/  2.0f;	  final    double    z    =(VarU    *    VarU)/    2.0f;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
80	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  3.0f;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  3.0f;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  3.0f;	  final    double    z    =(VarU    *    VarU)/    2.0f;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
81	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toLowerCase());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.toLowerCase());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
82	[BUG]  [BUGGY]  final  VarU  =  VarU  /  z.doubleValue();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU  /  z.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  /  z.doubleValue();	  final    VarU    =    VarU    *    z.doubleValue();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
83	[BUG]  [BUGGY]  final  VarU  =  VarU  *  z.doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU  *  z.doubleValue()  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  *  z.doubleValue()  +  1;	  final    VarU    =    VarU    *    z.doubleValue();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
84	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
85	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
86	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
87	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  1);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	20	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    	compilable	  [FE]  AssertionError  	36	2	replace
89	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    	compilable	  [FE]  AssertionError  	36	2	replace
90	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.class);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.class);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    	compilable	  [FE]  AssertionError  	54	2	replace
92	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1,  n2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    	compilable	  [FE]  AssertionError  	54	2	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    	compilable	  [FE]  AssertionError  	54	2	replace
94	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    	compilable	  [FE]  AssertionError  	54	2	replace
95	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(4,    4);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	add
96	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  3);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(4,    4);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  3);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	add
97	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  5);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  5);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(4,    4);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  5);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	add
98	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(4,    4);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);	  	non-compiled	[CE]  ';'  expected	37	None	add
99	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(5,  4);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(5,  4);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(4,    4);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(5,  4);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	add
100	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1,  n2));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1,  n2));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1,  n2));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n2));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
101	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.parseDouble(z);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.parseDouble(z);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.parseDouble(z);	  final    VarU    =    z    *    VarU.intValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
102	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	35	None	add
103	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);	  	non-compiled	[CE]  ';'  expected	35	None	add
104	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	35	None	add
105	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.doubleValue());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
106	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.floatValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.floatValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.floatValue());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
107	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
108	[BUG]  [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
109	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0f  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0f  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0f  +  1;	  final    double    z    =(VarU    *    VarU)/    2.0    +    1;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
110	[BUG]  [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  VarU)/  2.0  +  1;	  final    double    z    =(VarU    *    VarU)/    2.0    +    1;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
111	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
112	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
113	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
114	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1).doubleValue();  [CE]  no  suitable  constructor  found  for  NormalDistribution(int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1).doubleValue();  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1).doubleValue();	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int)	52	None	replace
115	[BUG]  [BUGGY]  final  double  z  =  (n1n2prod  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1n2prod  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1n2prod  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
116	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
117	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.doubleValue()));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.doubleValue()));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.doubleValue()));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(varU));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
118	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(varU));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
119	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
120	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2,  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
121	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  null);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,<null>)  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  null);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  null);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,<null>)	62	None	replace
122	[BUG]  [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0);  [CE]  cannot  find  symbol  standardNormal  [FE]          NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	non-compiled	[CE]  cannot  find  symbol  standardNormal	62	None	replace
123	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  12.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  12.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  12.0;	  final    double    z    =(VarU    *    VarU)/    3.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
124	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    1);    	compilable	  [FE]  AssertionError  	23	2	replace
126	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    1);    	compilable	  [FE]  AssertionError  	23	2	replace
127	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.doubleValue(),    VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	27	None	replace
128	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.doubleValue(),    VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	27	None	replace
129	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
130	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
131	[BUG]  [BUGGY]  final  VarU  =  VarU  *  z.intValue();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU  *  z.intValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  *  z.intValue();	  final    VarU    =    z    *    VarU.intValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
132	[BUG]  [BUGGY]  final  VarU  =  VarU  *  z.longValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU  *  z.longValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  *  z.longValue();	  final    VarU    =    z    *    VarU.intValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
133	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    0);    final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
134	[BUG]  [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  2);  [CE]  cannot  find  symbol  standardNormal  [FE]        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    	non-compiled	[CE]  cannot  find  symbol  standardNormal	71	None	replace
135	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]            NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
136	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0,  0);  [FE]  NotStrictlyPositiveException  [FE]            NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	45	2	replace
137	[BUG]  [BUGGY]  final  double  z  =(variable  *  VarU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(variable  *  VarU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(variable  *  VarU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
138	[BUG]  [BUGGY]  final  double  z  =(variables  *  VarU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(variables  *  VarU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(variables  *  VarU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
139	[BUG]  [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  cannot  find  symbol  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
140	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0d;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0d;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0d;	  final    double    z    =(VarU    *    VarU)/    2.0f;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
141	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0l;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0l;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0l;	  final    double    z    =(VarU    *    VarU)/    2.0f;    	non-compiled	[CE]  ';'  expected	19	None	replace
142	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2  +  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2  +  1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
143	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n0);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n0);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n0);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
144	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
145	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
146	[BUG]  [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
147	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU  /  2.0  +  1;	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
148	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int)	52	None	replace
149	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  3;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  VarU)/  3;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  3;	  final    double    z    =    (VarU    -    VarU)/    2;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	74	None	replace
150	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(Zone.getDefault()));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
151	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2,    n2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);	  	non-compiled	[CE]  ';'  expected	78	None	add
152	[BUG]  [BUGGY]  final  VarU  =  VarU  *  z.floatValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU  *  z.floatValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  *  z.floatValue();	  final    VarU    =    z    *    VarU.floatValue();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
153	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
154	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
155	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(varU));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
156	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.multiply(z)));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.multiply(z)));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(VarU.multiply(z)));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(varU));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
157	[BUG]  [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  3);  [CE]  cannot  find  symbol  standardNormal  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  normalNormal  =  new  NormalDistribution(0,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	non-compiled	[CE]  cannot  find  symbol  standardNormal	31	None	replace
158	[BUG]  [BUGGY]  final  VarU  =  VarU.multiply(VarU.doubleValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  VarU.multiply(VarU.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU.multiply(VarU.doubleValue());	  final    VarU    =    z    *    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
159	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    final  normalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
160	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU).doubleValue();    	non-compiled	[CE]  ';'  expected	40	None	replace
161	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    final  normalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
162	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
163	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n2));	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    1);    	compilable	  [FE]  AssertionError  	23	2	replace
165	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    1);    	compilable	  [FE]  AssertionError  	23	2	replace
166	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU),  VarU.doubleValue();	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU).doubleValue();    	non-compiled	[CE]  ';'  expected	39	None	replace
167	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(3,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(3,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    	compilable	  [FE]  AssertionError  	15	2	replace
169	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(3,  2);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(3,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(3,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(2,    2);    	compilable	  [FE]  AssertionError  	15	2	replace
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(z,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(z,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
171	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(z,  n2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(z,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(z,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1,    n2);    	compilable	  [FE]  AssertionError  	56	2	replace
172	[BUG]  [BUGGY]  static  final  double  z  =(VarU  *  VarU)/  2.0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  double  z  =(VarU  *  VarU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  double  z  =(VarU  *  VarU)/  2.0;	  final    double    z    =(VarU    *    VarU)/    2.0L;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
173	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.parse(varU);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.parse(varU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.parse(varU);	  final    VarU    =    z    *    VarU.floatValue();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
174	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n3);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n3);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n3);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
175	[BUG]  [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  illegal  start  of  expression  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
176	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2),  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2),  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2),  n1);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n2));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
177	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(10.0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(10.0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
178	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(10.0,  0);  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(10.0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(10.0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    	compilable	  [FE]  NotStrictlyPositiveException  	43	2	replace
179	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  3);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  3);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  3);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
180	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	80	None	replace
181	[BUG]  [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    normalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
182	[BUG]  [BUGGY]  final  VarU  =  (z  *  VarU.doubleValue())/  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  (z  *  VarU.doubleValue())/  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  (z  *  VarU.doubleValue())/  1;	  final    VarU    =    z    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
183	[BUG]  [BUGGY]  final  VarU  =  new  VarU(z  *  VarU.doubleValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  new  VarU(z  *  VarU.doubleValue());  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  new  VarU(z  *  VarU.doubleValue());	  final    VarU    =    z    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue(),  0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue(),  0);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.multiply(VarU.doubleValue(),  0);	  final    VarU    =    z    *    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
185	[BUG]  [BUGGY]  final  double  z  =(varU  *  EU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(varU  *  EU)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  EU)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
186	[BUG]  [BUGGY]  final  double  z  =(varU  *  VAR)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(varU  *  VAR)/  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  VAR)/  2.0;	  final    double    z    =(varU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
187	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.standard();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.standard();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.standard();	  final    VarU    =    z    *    VarU.intValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
188	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.parse(n1  +  n2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  VarU  =  z  *  VarU.parse(n1  +  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.parse(n1  +  n2);	  final    VarU    =    z    *    VarU.intValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
189	[BUG]  [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [CE]  illegal  start  of  expression  [FE]            NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
190	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1,  0,  0);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,int,int)  [FE]              NotStrictlyPositiveException      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1,  0,  0);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1,  0,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int,int,int,int)	45	None	replace
191	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU.doubleValue();  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  -  VarU.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU.doubleValue();	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
192	[BUG]  [BUGGY]  final  double  z  =  VarU  /  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  VarU  /  2.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  /  2.0;	  final    double    z    =    VarU    -    VarU    /    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
193	[BUG]  [BUGGY]  final  double  z  =(varU  *  VarU)/  3.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(varU  *  VarU)/  3.0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  VarU)/  3.0;	  final    double    z    =(VarU    *    VarU)/    3.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
194	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod),  n2);	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
195	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2prod));  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2prod));	  final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(n1n2prod));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
196	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0d  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0d  +  1;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0d  +  1;	  final    double    z    =(VarU    *    VarU)/    2.0    +    1;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
197	[BUG]  [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	static  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    3);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
198	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  normalNormal  =  new  NormalDistribution(n1n2prod,  n2);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);      [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  final  normalNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]        return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(n1n2prod,    n2);    final  normalNormal  =  new  NormalDistribution(n1n2prod,  n2);	  	non-compiled	[CE]  <identifier>  expected	53	None	add
