bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  int  n1  =  Integer.parseInt(Umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n1  =  Integer.parseInt(Umin);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n1  =  Integer.parseInt(Umin);		non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
2	[BUG]  [BUGGY]    final  int  n1  =  Integer.parseInt(umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n1  =  Integer.parseInt(umin);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n1  =  Integer.parseInt(umin);		non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
3	[BUG]  [BUGGY]    final  int  n1  =  Integer.parseInt(int);  [CE]  '.class'  expected  [FE]        AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n1  =  Integer.parseInt(int);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n1  =  Integer.parseInt(int);		non-compiled	[CE]  '.class'  expected	30	None	add
4	[BUG]  [BUGGY]    final  int  n1  =  Integer.toHexString(n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n1  =  Integer.toHexString(n1);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n1  =  Integer.toHexString(n1);		non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
5	[BUG]  [BUGGY]    final  int  n2  =  getNumber();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  getNumber();  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  getNumber();		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
6	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  [CE]  cannot  find  symbol  n1n2prod  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n2prod  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  n2;	final  int  n1n2prod  =  n1  *  n2;  	non-compiled	[CE]  cannot  find  symbol  n1n2prod	29	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	final  int  n1n2prod  =  n1  *  n2  +  1;	final  int  n1n2prod  =  n1  *  n2;  	compilable	  [FE]  AssertionError  	29	2	replace
8	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1n2prod  =  n1  *  n2  +  1;	final  int  n1n2prod  =  n1  *  n2;  	compilable	  [FE]  AssertionError  	29	2	replace
9	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin;  [CE]  possible  loss  of  precision  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n2prod  =  n1  *  Umin;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  Umin;	final  int  n1n2prod  =  n1  *  n2;  	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
10	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2;  [CE]  cannot  find  symbol  n1n2prod  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n2prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2;	final  int  n1n2prod  =  n1  *  n2;  	non-compiled	[CE]  cannot  find  symbol  n1n2prod	29	None	replace
11	[BUG]  [BUGGY]    final  double  n2  =  Umin.parseDouble(n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  double  n2  =  Umin.parseDouble(n1,  n2);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  double  n2  =  Umin.parseDouble(n1,  n2);		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
12	[BUG]  [BUGGY]    final  double  n2  =  Umin.parseDouble(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  double  n2  =  Umin.parseDouble(n1);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  double  n2  =  Umin.parseDouble(n1);		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
13	[BUG]  [BUGGY]    final  int  n2  =  (n1  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  (n1  +  n2)/  2.0;  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  (n1  +  n2)/  2.0;		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
14	[BUG]  [BUGGY]    final  int  n2  =  (n1  +  n2)/  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  (n1  +  n2)/  Umin.doubleValue();  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  (n1  +  n2)/  Umin.doubleValue();		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
15	[BUG]  [BUGGY]    final  int  n2  =  (n1  *  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  (n1  *  n2);  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  (n1  *  n2);		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
16	[BUG]  [BUGGY]    final  double  n2  =  n1  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  double  n2  =  n1  *  Umin.doubleValue();  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  double  n2  =  n1  *  Umin.doubleValue();		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
17	[BUG]  [BUGGY]    final  double  n2  =  n1  *  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  double  n2  =  n1  *  n2;  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  double  n2  =  n1  *  n2;		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
18	[BUG]  [BUGGY]    final  int  n2  =  n1  *  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  n1  *  n2;  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  n1  *  n2;		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
19	[BUG]  [BUGGY]    final  int  n2  =  n1  *  Umin.getNumber();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]    final  int  n2  =  n1  *  Umin.getNumber();  [BUGGY]  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	    final  int  n2  =  n1  *  Umin.getNumber();		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
20	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]    AssertionError  [CONTEXT]  private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  n2  +  1;	final  int  n1n2prod  =  n1  *  n2;  	non-compiled	[CE]  cannot  find  symbol  n1n2prod	29	None	replace
