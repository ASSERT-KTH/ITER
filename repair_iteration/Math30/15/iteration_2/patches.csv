bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  n1  =  n1  +  n2;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n1  +  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n1  +  n2;	  final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
2	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  +  n2);  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  n2);	  final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  ';'  expected	22	None	replace
3	[BUG]  [BUGGY]  final  double  n1  =  n2  +  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n2  +  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n2  +  n1;	  final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
4	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  *  Umin  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    Umin    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	54	None	replace
5	[BUG]  [BUGGY]  final  long  n2prod  =  n1  *  Umin  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  long  n2prod  =  n1  *  Umin  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  long  n2prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    Umin    +    1;    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
6	[BUG]  [BUGGY]  final  double  n1prod  =  n1  *  Umin  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1prod  =  n1  *  Umin  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    Umin    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	54	None	replace
7	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n2,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n2,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n2,  n1);	  final    int    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
8	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n2,  n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n2,  n1,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n2,  n1,  n2);	  final    int    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
9	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(n1);	  final    int    n1    =    Integer.parseInt(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
10	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(summary);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(summary);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(summary);	  final    int    n1    =    Integer.parseInt(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	72	None	replace
11	[BUG]  [BUGGY]  final  double  n2  =  n1  +  Umin.MAX_VALUE;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  +  Umin.MAX_VALUE;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  Umin.MAX_VALUE;	  final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	61	None	replace
12	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  Umin;  [CE]  cannot  find  symbol  n1n2prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n2  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n2  *  Umin;	  final    double    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	35	None	replace
13	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2  *  Umin;  [CE]  cannot  find  symbol  n1n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  +  n2  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  n2  *  Umin;	  final    double    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	35	None	replace
14	[BUG]  [BUGGY]  final  double  n2  =  getNumber()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  getNumber()  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  getNumber()  +  1;	  final    double    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
15	[BUG]  [BUGGY]  final  double  n2  =  getNumber()  -  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  getNumber()  -  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  getNumber()  -  1;	  final    double    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
16	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n1);	  final    int    n1    =    Integer.parseInt(Umin.MIN_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
17	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE,  n2);	  final    int    n1    =    Integer.parseInt(Umin.MIN_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
18	[BUG]  [BUGGY]  final  int  n2  =  n2  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n2  *  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n2  *  Umin.doubleValue();	  final    double    n2    =    n2    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	replace
19	[BUG]  [BUGGY]  final  double  n2  =  n1.doubleValue()  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1.doubleValue()  *  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1.doubleValue()  *  Umin.doubleValue();	  final    double    n2    =    n2    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	replace
20	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(umin);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
21	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(n2);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
22	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(Umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(Umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(Umin);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
23	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(Number.MAX_VALUE);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(Number.MAX_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(Number.MAX_VALUE);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
24	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2.0;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin)/  2.0;	  final    int    n2    =    (n1    *    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
25	[BUG]  [BUGGY]  final  double  n2  =  (n1  *  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  (n1  *  n2)/  2.0;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  *  n2)/  2.0;	  final    int    n2    =    (n1    *    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
26	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.class,  n1);	  final    int    n1    =    Integer.parseInt(Umin.class);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
27	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.class,  n2);	  final    int    n1    =    Integer.parseInt(Umin.class);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
28	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.class);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.class);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.class);	  final    int    n1    =    Integer.parseInt(Umin.class);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
29	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)/  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  n2)/  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)/  1;	  final    int    n2    =    (n1    *    n2)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
30	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  Umin)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin)+  1;	  final    int    n2    =    (n1    *    n2)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
31	[BUG]  [BUGGY]  final  int  n2  =  getNumber()  *  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  getNumber()  *  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  getNumber()  *  1;	  final    int    n2    =    getNumber()    -    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	38	None	replace
32	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.MAX_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.MAX_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin.MAX_VALUE);	  final    int    n1    =    Integer.toHexString(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
33	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.class);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.class);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin.class);	  final    int    n1    =    Integer.toHexString(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
34	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.MIN_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.MIN_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin.MIN_VALUE);	  final    int    n1    =    Integer.toHexString(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
35	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.intValue());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.intValue());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin.intValue());	  final    int    n1    =    Integer.toHexString(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
36	[BUG]  [BUGGY]  final  int  n2prod  =  n1.prod  +  n2.prod;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1.prod  +  n2.prod;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1.prod  +  n2.prod;	  final    int    n2prod    =    n1    +    n2.prod;    	non-compiled	[CE]  int  cannot  be  dereferenced	71	None	replace
37	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2.prod;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  +  n2.prod;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  n2.prod;	  final    int    n2prod    =    n1    +    n2.prod;    	non-compiled	[CE]  int  cannot  be  dereferenced	71	None	replace
38	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin  +  1;	  final    int    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
39	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  +  n2  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  +  n2  +  1;	  final    int    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
40	[BUG]  [BUGGY]  final  double  n1  =  n1  *  n2;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n1  *  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n1  *  n2;	  final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
41	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1;  [CE]  cannot  find  symbol  n1n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n2  *  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n2  *  n1;	  final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	15	None	replace
42	[BUG]  [BUGGY]  final  int  n2prod  =  n1,  n2prod  *  n2  +  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1,  n2prod  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1,  n2prod  *  n2  +  1;	  final    int    n2prod    =    n1.length    *    n2    +    1;    	non-compiled	[CE]  ';'  expected	74	None	replace
43	[BUG]  [BUGGY]  final  int  n2prod  =  n2.length  *  n1.length  +  1;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n2.length  *  n1.length  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n2.length  *  n1.length  +  1;	  final    int    n2prod    =    n1.length    *    n2    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	74	None	replace
44	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(umin,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(umin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(umin,  n2);	  final    int    n1    =    Integer.toHexString(umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
45	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(umin,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(umin,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(umin,  n1);	  final    int    n1    =    Integer.toHexString(umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	33	None	replace
46	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  *  n2)+  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1n2prod  =  n1  *  n2)+  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	45	None	replace
47	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  *  n2)+  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  n2)+  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	45	None	replace
48	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n1);	  final    int    n1    =    Integer.parseInt(Umin.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
49	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE,  n2);	  final    int    n1    =    Integer.parseInt(Umin.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
50	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.MAX_VALUE);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.MAX_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.MAX_VALUE);	  final    int    n1    =    Integer.parseInt(Umin.MAX_VALUE);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
51	[BUG]  [BUGGY]  final  double  n2prod  =  n1,  n2  *  Umin;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1,  n2  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1,  n2  *  Umin;	  final    float    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  ';'  expected	65	None	replace
52	[BUG]  [BUGGY]  final  double  n1  =  n1  *  n2  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n1  *  n2  +  1;	  final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	replace
53	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  n2  +  1;	  final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	55	None	replace
54	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.toString());  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.toString());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.toString());	  final    int    n1    =    Integer.parseInt(Umin.toString());    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	76	None	replace
55	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString()  +  1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString()  +  1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.toString()  +  1);	  final    int    n1    =    Integer.parseInt(Umin.toString());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	76	None	replace
56	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toNumber());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toNumber());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.toNumber());	  final    int    n1    =    Integer.parseInt(Umin.toString());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	76	None	replace
57	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin)/  2  +  1;	  final    int    n2    =    (n1    *    Umin)/    2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
58	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();	  final    double    n2    =    n1    *    Umin.doubleValue()    +    n2.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
59	[BUG]  [BUGGY]  final  double  n2  =  n1.doubleValue()  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1.doubleValue()  +  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1.doubleValue()  +  n2.doubleValue();	  final    double    n2    =    n1    *    Umin.doubleValue()    +    n2.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
60	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  +  n1.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  +  n1.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin.doubleValue()  +  n1.doubleValue();	  final    double    n2    =    n1    *    Umin.doubleValue()    +    n2.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
61	[BUG]  [BUGGY]  final  int  n1  =  n1  *  n2;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  n1  *  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n1  *  n2;	  final    int    n1    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
62	[BUG]  [BUGGY]  final  int  n1  =  n2  *  n1  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  n2  *  n1  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n2  *  n1  +  1;	  final    int    n1    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
63	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(n2);	  final    int    n1    =    Integer.parseInt(n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	68	None	replace
64	[BUG]  [BUGGY]  final  int  n2  =  n1  +  Umin.MAX_VALUE;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  +  Umin.MAX_VALUE;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  +  Umin.MAX_VALUE;	  final    int    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	43	None	replace
65	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  /  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  /  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getNumber()  /  1;	  final    int    n2    =    n1    *    Umin.getNumber()    -    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	28	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	final  int  n1n2prod  =  n1  +  n2;	  final    int    n1n2prod    =    n1    +    n2    +    1;    	compilable	  [FE]  AssertionError  	70	1	replace
67	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1n2prod  =  n1  +  n2;	  final    int    n1n2prod    =    n1    +    n2    +    1;    	compilable	  [FE]  AssertionError  	70	1	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	final  double  n1n2prod  =  n1  +  n2  +  1;	  final    int    n1n2prod    =    n1    +    n2    +    1;    	compilable	  [FE]  AssertionError  	70	1	replace
69	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  +  n2  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1n2prod  =  n1  +  n2  +  1;	  final    int    n1n2prod    =    n1    +    n2    +    1;    	compilable	  [FE]  AssertionError  	70	1	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	int  n1n2prod  =  n1  *  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	44	2	replace
71	[BUG]  [BUGGY]  int  n1n2prod  =  n1  *  n2  +  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	int  n1n2prod  =  n1  *  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	44	2	replace
72	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2;	  final    int    n2    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	42	None	replace
73	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.MAX_VALUE  +  1;	  final    int    n2    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	42	None	replace
74	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.MIN_VALUE;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.MIN_VALUE;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.MIN_VALUE;	  final    int    n2    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	42	None	replace
75	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(sumin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(sumin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(sumin);	  final    int    n1    =    Integer.parseInt(sumin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	66	None	replace
76	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n2);	  final    int    n2    =    Umin.parseDouble(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	26	None	replace
77	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Token.NUMBER  +  1;	  final    int    n2    =    n1    *    Token.NUMBER;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
78	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.NUMBER;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.NUMBER;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.NUMBER;	  final    int    n2    =    n1    *    Token.NUMBER;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
79	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER,  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER,  n2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Token.NUMBER,  n2;	  final    int    n2    =    n1    *    Token.NUMBER;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
80	[BUG]  [BUGGY]  final  double  n1  =  Integer.toHexString(n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.toHexString(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.toHexString(n2);	  final    double    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
81	[BUG]  [BUGGY]  final  double  n2  =  Integer.toHexString(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Integer.toHexString(n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Integer.toHexString(n1);	  final    double    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
82	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  Umin.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  +  Umin.MAX_VALUE;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    +    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	62	None	replace
83	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  Umin.MIN_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  +  Umin.MIN_VALUE;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  Umin.MIN_VALUE;	  final    int    n2prod    =    n1    +    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	62	None	replace
84	[BUG]  [BUGGY]  final  int  n2prod  =  n1,  n2  +  Umin.MAX_VALUE;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1,  n2  +  Umin.MAX_VALUE;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1,  n2  +  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    +    Umin.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	62	None	replace
85	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    double    n1n2prod    =    n1    *    n2    +    1;    final  double  n1n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
86	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2)  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2)  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    double    n1n2prod    =    n1    *    n2    +    1;    final  double  n1n2prod  =  n1  *  n2)  +  1;	  	non-compiled	[CE]  ';'  expected	30	None	add
87	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    double    n1n2prod    =    n1    *    n2    +    1;    final  double  n1n2prod  =  n1  *  n2.  +  1;	  	non-compiled	[CE]  <identifier>  expected	30	None	add
88	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    double    n1n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
89	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(umin,  n1);	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
90	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(umin,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(umin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(umin,  n2);	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
91	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(umin,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(umin,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(umin,  n1);	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
92	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(number);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(number);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(number);	  final    int    n1    =    Integer.parseInt(number);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	67	None	replace
93	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1,  n2,  n1);	  final    double    n2    =    Umin.parseDouble(n2,    n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
94	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    +    n2    +    1;    final  int  n1n2prod  =  n1  +  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
95	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2)  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2)  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    +    n2    +    1;    final  int  n1n2prod  =  n1  +  n2)  +  1;	  	non-compiled	[CE]  ';'  expected	69	None	add
96	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n2prod  =  n1  +  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n2prod  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    +    n2    +    1;    final  int  n2prod  =  n1  +  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	69	None	add
97	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2.  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  final  int  n1n2prod  =  n1  +  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    +    n2    +    1;    final  int  n1n2prod  =  n1  +  n2.  +  1;	  	non-compiled	[CE]  <identifier>  expected	69	None	add
98	[BUG]  [BUGGY]  final  int  n2prod  =  n2  +  n1;  [CE]  cannot  find  symbol  n1n2prod  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n2  +  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n2  +  n1;	  final    int    n2prod    =    n1    +    n2);    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	24	None	replace
99	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.intValue());  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.intValue());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.intValue());	  final    int    n1    =    Integer.parseInt(Umin.intValue());    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	replace
100	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue(),  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue(),  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.intValue(),  n2);	  final    int    n1    =    Integer.parseInt(Umin.intValue());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	replace
101	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1n2prod  =  n1  *  n2.  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
102	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  n2.  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
103	[BUG]  [BUGGY]  int  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  int  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	int  n1n2prod  =  n1  *  n2.  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
104	[BUG]  [BUGGY]  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	n1n2prod  =  n1  *  n2.  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
105	[BUG]  [BUGGY]  final  int  n1  =  n1  +  n2  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  n1  +  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n1  +  n2  +  1;	  final    int    n2prod    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
106	[BUG]  [BUGGY]  final  double  n2  =  (n1  *  n2)/  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  (n1  *  n2)/  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  *  n2)/  Umin.doubleValue();	  final    double    n2    =    (n1    +    n2)/    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
107	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  +  2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getNumber()  +  2;	  final    int    n2    =    n1    *    Umin.getNumber()    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	27	None	replace
108	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin  +  1;	  final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	78	None	replace
109	[BUG]  [BUGGY]  final  int  n2  =  n0  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n0  *  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n0  *  Umin.doubleValue();	  final    double    n2    =    n0    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
110	[BUG]  [BUGGY]  final  double  n2  =  n2,  n1  *  Umin.doubleValue();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n2,  n1  *  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n2,  n1  *  Umin.doubleValue();	  final    double    n2    =    n1,    n2    *    Umin.doubleValue();    	non-compiled	[CE]  ';'  expected	10	None	replace
111	[BUG]  [BUGGY]  final  int  n2  =  n1,  n2  *  Umin.doubleValue();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1,  n2  *  Umin.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1,  n2  *  Umin.doubleValue();	  final    double    n2    =    n1,    n2    *    Umin.doubleValue();    	non-compiled	[CE]  ';'  expected	10	None	replace
112	[BUG]  [BUGGY]  final  double  n2  =  n1,  n2  *  n2.doubleValue();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1,  n2  *  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1,  n2  *  n2.doubleValue();	  final    double    n2    =    n1,    n2    *    Umin.doubleValue();    	non-compiled	[CE]  ';'  expected	10	None	replace
113	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getLength()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getLength()  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getLength()  +  1;	  final    int    n2    =    n1    *    Umin.getLength();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	29	None	replace
114	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getLength()  -  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getLength()  -  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getLength()  -  1;	  final    int    n2    =    n1    *    Umin.getLength();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	29	None	replace
115	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n1,  n1);	  final    double    n2    =    Umin.parseDouble(n1,    n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	79	None	replace
116	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(umin);	  final    double    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
117	[BUG]  [BUGGY]  final  int  n1  =  n2  +  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  n2  +  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n2  +  n1;	  final    int    n1    =    n1    +    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	23	None	replace
118	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.doubleValue());  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.doubleValue());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.doubleValue());	  final    int    n1    =    Integer.parseInt(Umin.doubleValue());    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
119	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.doubleValue(),  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.doubleValue(),  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.doubleValue(),  n2);	  final    int    n1    =    Integer.parseInt(Umin.doubleValue());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
120	[BUG]  [BUGGY]  final  double  n1prod  =  n2  *  Umin;  [CE]  cannot  find  symbol  n1n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1prod  =  n2  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n2  *  Umin;	  final    double    n1prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	37	None	replace
121	[BUG]  [BUGGY]  final  double  n1  =  n1  *  Umin;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n1  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n1  *  Umin;	  final    double    n1prod    =    n1    *    Umin;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	replace
122	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.MIN_VALUE);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin.MIN_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin.MIN_VALUE);	  final    int    n2    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	58	None	replace
123	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)/  Umin.doubleValue()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  n2)/  Umin.doubleValue()  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)/  Umin.doubleValue()  +  1;	  final    int    n2    =    (n1    *    n2)/    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
124	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n2)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n2)+  1;	  final    double    n2    =    Umin.parseDouble(n1)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	56	None	replace
125	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)/  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)/  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1)/  1;	  final    double    n2    =    Umin.parseDouble(n1)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	56	None	replace
126	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1,  n2)+  1;	  final    double    n2    =    Umin.parseDouble(n1)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	56	None	replace
127	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n1)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n1)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n1)+  1;	  final    double    n2    =    Umin.parseDouble(n1)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	56	None	replace
128	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(User,  n2);	  final    int    n1    =    Integer.toHexString(User,    n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	64	None	replace
129	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(User,  n1,  n2);	  final    int    n1    =    Integer.toHexString(User,    n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	64	None	replace
130	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1)+  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(User,  n1)+  1;	  final    int    n1    =    Integer.toHexString(User,    n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	64	None	replace
131	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Number.MAX_VALUE,  n1);	  final    int    n1    =    Integer.parseInt(Number.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
132	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Number.MAX_VALUE);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Number.MAX_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Number.MAX_VALUE);	  final    int    n1    =    Integer.parseInt(Number.MAX_VALUE);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
133	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  n2;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  n2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  n2;	  final    int    n2prod    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
134	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  *  Umin.MAX_VALUE;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
135	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  Umin.MAX_VALUE  +  1;	  final    int    n2prod    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
136	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin)-  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  Umin)-  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin)-  1;	  final    int    n2    =    (n1    *    n2)-    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
137	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)/  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  n2)/  2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)/  2;	  final    int    n2    =    (n1    *    n2)-    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
138	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.MAX_VALUE  +  n2.doubleValue();	  final    int    n2    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	42	None	replace
139	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.length;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.length;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.length;	  final    int    n2    =    n1    *    Umin;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	replace
140	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  Umin.MAX_VALUE  *  Umin.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  +  Umin.MAX_VALUE  *  Umin.MAX_VALUE;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  Umin.MAX_VALUE  *  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    +    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	62	None	replace
141	[BUG]  [BUGGY]  final  int  n2prod  =  Umin.MAX_VALUE  +  n1;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  Umin.MAX_VALUE  +  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  Umin.MAX_VALUE  +  n1;	  final    int    n2prod    =    n1    +    Umin.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	62	None	replace
142	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getNumberOfLinks();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getNumberOfLinks();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getNumberOfLinks();	  final    int    n2    =    n1    *    Umin.getLength();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	29	None	replace
143	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [CE]  cannot  find  symbol  n1n2prod  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  n2  +  2;	  final    double    n1n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	31	None	replace
144	[BUG]  [BUGGY]  final  int  n2  =  n1  +  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  +  Umin;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  +  Umin;	  final    int    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	43	None	replace
145	[BUG]  [BUGGY]  int  n2prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  int  n2prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	int  n2prod  =  n1  *  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	47	None	replace
146	[BUG]  [BUGGY]  final  float  n2prod  =  n1  *  Umin  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  float  n2prod  =  n1  *  Umin  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  float  n2prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    Umin    +    1;    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
147	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1  *  Umin.doubleValue();  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  Umin.doubleValue();	  final    double    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
148	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2.prod  +  1;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  +  n2.prod  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2.prod  +  1;	  final    int    n2prod    =    n1    +    n2    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
149	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2  +  2;  [CE]  cannot  find  symbol  n1n2prod  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1  +  n2  +  2;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2  +  2;	  final    int    n2prod    =    n1    +    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	12	None	replace
150	[BUG]  [BUGGY]  final  double  n2  =  n1  +  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  +  Umin;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  Umin;	  final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	61	None	replace
151	[BUG]  [BUGGY]  final  double  n2  =  n1  +  Umin.getNumber();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  +  Umin.getNumber();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  Umin.getNumber();	  final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	61	None	replace
152	[BUG]  [BUGGY]  final  double  n1  =  n2  *  Umin;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  n2  *  Umin;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  n2  *  Umin;	  final    double    n1prod    =    n1    *    Umin;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	37	None	replace
153	[BUG]  [BUGGY]  final  double  n1prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1prod  =  n1  *  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n1  *  n2  +  1;	  final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	55	None	replace
154	[BUG]  [BUGGY]  final  double  n2  =  n1,  n2  *  Umin.doubleToLongBits(n2);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1,  n2  *  Umin.doubleToLongBits(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1,  n2  *  Umin.doubleToLongBits(n2);	  final    double    n2    =    n1,    n2    *    Umin.doubleValue();    	non-compiled	[CE]  ';'  expected	10	None	replace
155	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(sumin,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(sumin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(sumin,  n2);	  final    int    n1    =    Integer.parseInt(sumin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	66	None	replace
156	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE)+  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Number.MAX_VALUE)+  1;	  final    int    n1    =    Integer.parseInt(Number.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
157	[BUG]  [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue()  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue()  +  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n0  *  Umin.doubleValue()  +  n2.doubleValue();	  final    double    n2    =    n1    *    Umin.doubleValue()    +    n2.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
158	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(User,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(User,  n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(User,  n1);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
159	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(Number.class);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.toHexString(Number.class);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(Number.class);	  final    int    n2    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	34	None	replace
160	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString(n1));  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString(n1));  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.toString(n1));	  final    int    n1    =    Integer.parseInt(Umin.toString());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	76	None	replace
161	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString(n2));  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString(n2));  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.toString(n2));	  final    int    n1    =    Integer.parseInt(Umin.toString());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	76	None	replace
162	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE)+  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE)+  1;	  final    int    n1    =    Integer.parseInt(Umin.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
163	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n2)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n1,  n2)+  1;	  final    int    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
164	[BUG]  [BUGGY]  final  double  n1prod  =  n2  *  n1;  [CE]  cannot  find  symbol  n1n2prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1prod  =  n2  *  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n2  *  n1;	  final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	15	None	replace
165	[BUG]  [BUGGY]  final  double  n1prod  =  n2  +  n1;  [CE]  cannot  find  symbol  n1n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1prod  =  n2  +  n1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n2  +  n1;	  final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	22	None	replace
166	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  Integer.parseInt(Umin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin,  n2);	  final    int    n2    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	58	None	replace
167	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin,  n2);	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
168	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n2)-  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n2)-  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(umin,  n2)-  1;	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
169	[BUG]  [BUGGY]  final  double  n1  =  Integer.toHexString(umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.toHexString(umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.toHexString(umin);	  final    double    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	replace
170	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue()  +  1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue()  +  1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.intValue()  +  1);	  final    int    n1    =    Integer.parseInt(Umin.intValue());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	59	None	replace
171	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER  +  2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Token.NUMBER  +  2;	  final    int    n2    =    n1    *    Token.NUMBER;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
172	[BUG]  [BUGGY]  final  int  n2  =  getNumber().doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  getNumber().doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  getNumber().doubleValue();	  final    int    n2    =    getNumber()    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	39	None	replace
173	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1n2prod  =  n1  *  n2.  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    final    int    n1n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
174	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  n2  +  2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  n2  +  2;	  final    int    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
175	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(Umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(Umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(Umin);	  final    double    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
176	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(n2);	  final    double    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
177	[BUG]  [BUGGY]  final  int  n2prod  =  n1,  n2.prod;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1,  n2.prod;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1,  n2.prod;	  final    int    n2prod    =    n1    +    n2.prod;    	non-compiled	[CE]  ';'  expected	71	None	replace
178	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)%  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  (n1  *  n2)%  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)%  1;	  final    int    n2    =    (n1    *    n2)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
179	[BUG]  [BUGGY]  final  int  n2prod  =  n2.length  *  n1  +  1;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n2.length  *  n1  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n2.length  *  n1  +  1;	  final    int    n2prod    =    n1.length    *    n2    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	74	None	replace
180	[BUG]  [BUGGY]  final  double  n2  =  Integer.parseInt(umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Integer.parseInt(umin);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Integer.parseInt(umin);	  final    int    n2    =    Integer.parseInt(umin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	49	None	replace
181	[BUG]  [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue()  +  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n0  *  Umin.doubleValue()  +  1;	  final    double    n2    =    n0    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
182	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n2,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1,  n2,  n2);	  final    double    n2    =    Umin.parseDouble(n2,    n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
183	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(Number.MAX_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(Number.MAX_VALUE);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(Number.MAX_VALUE);	  final    int    n1    =    Integer.parseInt(Number.MAX_VALUE);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	50	None	replace
184	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(n1);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(n1);	  final    double    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	replace
185	[BUG]  [BUGGY]  final  int  n2prod  =  n1,  n2prod  *  n1  +  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2prod  =  n1,  n2prod  *  n1  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1,  n2prod  *  n1  +  1;	  final    int    n2prod    =    n1.length    *    n2    +    1;    	non-compiled	[CE]  ';'  expected	74	None	replace
186	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2  +  1L;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  n2  +  1L;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  n2  +  1L;	  final    int    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	replace
187	[BUG]  [BUGGY]  final  double  n2prod  =  n1,  n2  +  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2prod  =  n1,  n2  +  1;  [BUGGY]        final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1,  n2  +  1;	  final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  ';'  expected	55	None	replace
188	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(Umin.doubleValue());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(Umin.doubleValue());  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(Umin.doubleValue());	  final    int    n1    =    Integer.parseInt(Umin.doubleValue());    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	51	None	replace
189	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  /  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  /  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin.doubleValue()  /  n2.doubleValue();	  final    double    n2    =    n1    *    Umin.doubleValue()    +    n2.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	53	None	replace
190	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  +  n2.doubleValue();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  n2.doubleValue();	  final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	61	None	replace
191	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  +  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  n2);	  final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  ';'  expected	61	None	replace
192	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)+  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)+  n2;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1)+  n2;	  final    double    n2    =    Umin.parseDouble(n1)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	56	None	replace
193	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.intValue);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n1  =  Integer.toHexString(Umin.intValue);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin.intValue);	  final    int    n1    =    Integer.toHexString(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	63	None	replace
194	[BUG]  [BUGGY]  final  double  n2  =  getNumber()  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  getNumber()  *  n1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  getNumber()  *  n1;	  final    double    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	40	None	replace
195	[BUG]  [BUGGY]  final  double  n2  =  (n1  *  n2)-  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  (n1  *  n2)-  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  *  n2)-  1;	  final    int    n2    =    (n1    *    n2)-    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	replace
196	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(umin,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(umin,  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(umin,  n2);	  final    int    n1    =    Integer.parseInt(umin,    n2);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
197	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  +  n2);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  +  n2);	  final    int    n2    =    n1    +    n2;    	non-compiled	[CE]  ';'  expected	43	None	replace
198	[BUG]  [BUGGY]  final  double  n2  =  (n1  *  n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  (n1  *  n2)+  1;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  *  n2)+  1;	  final    int    n2    =    (n1    *    n2)+    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
199	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(number);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n1  =  Integer.parseInt(number);  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(number);	  final    int    n1    =    Integer.parseInt(number);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	67	None	replace
200	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getUpperBound();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  int  n2  =  n1  *  Umin.getUpperBound();  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getUpperBound();	  final    int    n2    =    n1    *    Umin.getLength();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	29	None	replace
201	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.MAX_VALUE;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {      [BUGGY]  final  double  n2  =  n1  *  Umin.MAX_VALUE;  [BUGGY]      final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin.MAX_VALUE;	  final    int    n2    =    n1    *    Umin.MAX_VALUE;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	42	None	replace
