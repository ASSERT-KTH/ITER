bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
2	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
4	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
5	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]        AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	non-compiled	[CE]  cannot  find  symbol  UE	35	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
7	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  z  [FE]            AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	  	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	non-compiled	[CE]  cannot  find  symbol  z	35	None	replace
9	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2  +  1)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2  +  1)/  2.0;  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2  +  1)/  2.0;		non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
10	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU);  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU);		non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
11	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  2.0;  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  2.0;		non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
12	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(varU);  [CE]  cannot  find  symbol  varU  [FE]          AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(varU);  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(varU);		non-compiled	[CE]  cannot  find  symbol  varU	36	None	add
13	[BUG]  [BUGGY]    final  double  z  =(n1  +  n2)/  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =(n1  +  n2)/  VarU.doubleValue();  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =(n1  +  n2)/  VarU.doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
14	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.roundFloor(VarU);  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  VarU.roundFloor(VarU);		non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
15	[BUG]  [BUGGY]    final  double  z  =(n1  +  n2)/  VarU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =(n1  +  n2)/  VarU;  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =(n1  +  n2)/  VarU;		non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
17	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
18	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);		non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
19	[BUG]  [BUGGY]    final  double  n2  =  n1  *  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  n2  =  n1  *  VarU.doubleValue();  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  n2  =  n1  *  VarU.doubleValue();		non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
20	[BUG]  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n1);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n1);  [BUGGY]  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	    final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n1);		non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
22	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);	final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  	compilable	  [FE]  AssertionError  	35	2	replace
