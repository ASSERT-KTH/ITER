bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return parsePattern; [FE] AssertionError [CONTEXT] Pattern getParsePattern() { [BUGGY] return parsePattern; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Pattern getParsePattern() { [BUGGY] [BUGGY] return parsePattern; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	
3	[BUG] [BUGGY] fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays()); [FE] AssertionError [CONTEXT]    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; case Calendar.DAY_OF_WEEK: [BUGGY] fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays()); [BUGGY] break; case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	395	395	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; case Calendar.DAY_OF_WEEK: [BUGGY] [BUGGY] fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays()); break; case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	395	395	2	add	
5	[BUG] [BUGGY] break; [FE] AssertionError [CONTEXT]   Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; case Calendar.DAY_OF_WEEK: fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays()); [BUGGY] break; [BUGGY] case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	396	396	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]   Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; case Calendar.DAY_OF_WEEK: fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays()); [BUGGY] [BUGGY] break; case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	396	396	2	add	
7	[BUG] [BUGGY] return DAY_OF_WEEK_STRATEGY; [FE] AssertionError [CONTEXT] case '\'': if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': [BUGGY] return DAY_OF_WEEK_STRATEGY; [BUGGY] case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; case 'G': return ERA_STRATEGY; case 'H': return MODULO_HOUR_OF_DAY_STRATEGY; case 'K': return HOUR_STRATEGY; case 'M': return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	555	555	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] case '\'': if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': [BUGGY] [BUGGY] return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; case 'G': return ERA_STRATEGY; case 'H': return MODULO_HOUR_OF_DAY_STRATEGY; case 'K': return HOUR_STRATEGY; case 'M': return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.35355339059327373	555	555	2	add	
9	[BUG] [BUGGY] Integer fieldInt = Integer.valueOf(field); [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { [BUGGY] Integer fieldInt = Integer.valueOf(field); [BUGGY] KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	379	379	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { [BUGGY] [BUGGY] Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	379	379	2	add	
11	[BUG] [BUGGY] KeyValue[] fieldKeyValues= nameValues.get(fieldInt); [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); [BUGGY] KeyValue[] fieldKeyValues= nameValues.get(fieldInt); [BUGGY] if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	380	380	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); [BUGGY] [BUGGY] KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	380	380	2	add	
13	[BUG] [BUGGY] if(fieldKeyValues==null) { [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); [BUGGY] if(fieldKeyValues==null) { [BUGGY] DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	381	381	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); [BUGGY] [BUGGY] if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	381	381	2	add	
15	[BUG] [BUGGY] DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { [BUGGY] DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); [BUGGY] switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	382	382	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { [BUGGY] [BUGGY] DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	382	382	2	add	
17	[BUG] [BUGGY] switch(field) { [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); [BUGGY] switch(field) { [BUGGY] case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	383	383	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] KeyValue[] getDisplayNames(int field) { Integer fieldInt = Integer.valueOf(field); KeyValue[] fieldKeyValues= nameValues.get(fieldInt); if(fieldKeyValues==null) { DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale); [BUGGY] [BUGGY] switch(field) { case Calendar.ERA:    Calendar c = Calendar.getInstance(locale);  String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale)); String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale)); fieldKeyValues= createKeyValues(longEras, shortEras); break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	383	383	2	add	
19	[BUG] [BUGGY] KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [FE] AssertionError [CONTEXT] break; case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } [BUGGY] KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [BUGGY] if(prior!=null) { fieldKeyValues= prior; } } return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	406	406	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] break; case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } [BUGGY] [BUGGY] KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); if(prior!=null) { fieldKeyValues= prior; } } return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	406	406	2	add	
21	[BUG] [BUGGY] if(prior!=null) { [FE] AssertionError [CONTEXT] case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [BUGGY] if(prior!=null) { [BUGGY] fieldKeyValues= prior; } } return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	407	407	2	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] case Calendar.AM_PM: fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null); break; case Calendar.MONTH: fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); [BUGGY] [BUGGY] if(prior!=null) { fieldKeyValues= prior; } } return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	407	407	2	add	
23	[BUG] [BUGGY] return fieldKeyValues; [FE] AssertionError [CONTEXT] fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); if(prior!=null) { fieldKeyValues= prior; } } [BUGGY] return fieldKeyValues; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	411	411	2	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths()); break; default: throw new IllegalArgumentException("Invalid field value "+field); } KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues); if(prior!=null) { fieldKeyValues= prior; } } [BUGGY] [BUGGY] return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getDisplayNames [RETURN_TYPE] FastDateParser$KeyValue[]  int field [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Calendar c ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longEras shortEras KeyValue[] fieldKeyValues prior long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR Integer fieldInt TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy DateFormatSymbols symbols  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	411	411	2	add	
25	[BUG] [BUGGY] KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { [BUGGY] KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; [BUGGY] copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	434	434	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { [BUGGY] [BUGGY] KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	434	434	2	add	
27	[BUG] [BUGGY] copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; [BUGGY] copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); [BUGGY] Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	435	435	2	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; [BUGGY] [BUGGY] copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	435	435	2	add	
29	[BUG] [BUGGY] Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); [BUGGY] Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); [BUGGY] return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	436	436	2	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); [BUGGY] [BUGGY] Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	436	436	2	add	
31	[BUG] [BUGGY] return fieldKeyValues; [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); [BUGGY] return fieldKeyValues; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	437	437	2	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)]; copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues); Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR); [BUGGY] [BUGGY] return fieldKeyValues; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] createKeyValues [RETURN_TYPE] FastDateParser$KeyValue[]  String[] longValues String[] shortValues [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] longValues shortValues KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	437	437	2	add	
33	[BUG] [BUGGY] int count= 0; [FE] AssertionError [CONTEXT] private static int count(String[] values) { [BUGGY] int count= 0; [BUGGY] if(values!=null) { for(String value : values) { if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	446	446	2	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { [BUGGY] [BUGGY] int count= 0; if(values!=null) { for(String value : values) { if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	446	446	2	add	
35	[BUG] [BUGGY] if(values!=null) { [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; [BUGGY] if(values!=null) { [BUGGY] for(String value : values) { if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	447	447	2	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; [BUGGY] [BUGGY] if(values!=null) { for(String value : values) { if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	447	447	2	add	
37	[BUG] [BUGGY] for(String value : values) { [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { [BUGGY] for(String value : values) { [BUGGY] if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	448	448	2	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { [BUGGY] [BUGGY] for(String value : values) { if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	448	448	2	add	
39	[BUG] [BUGGY] if(value.length()>0) { [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { [BUGGY] if(value.length()>0) { [BUGGY] ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	449	449	2	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { [BUGGY] [BUGGY] if(value.length()>0) { ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	449	449	2	add	
41	[BUG] [BUGGY] ++count; [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { if(value.length()>0) { [BUGGY] ++count; [BUGGY] } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	450	450	2	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { if(value.length()>0) { [BUGGY] [BUGGY] ++count; } } } return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	450	450	2	add	
43	[BUG] [BUGGY] return count; [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { if(value.length()>0) { ++count; } } } [BUGGY] return count; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	454	454	2	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int count(String[] values) { int count= 0; if(values!=null) { for(String value : values) { if(value.length()>0) { ++count; } } } [BUGGY] [BUGGY] return count; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] count [RETURN_TYPE] int  String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	454	454	2	add	
45	[BUG] [BUGGY] if(values!=null) { [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { [BUGGY] if(values!=null) { [BUGGY] for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	465	465	2	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { [BUGGY] [BUGGY] if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	465	465	2	add	
47	[BUG] [BUGGY] for(int i= 0; i<values.length; ++i) { [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { [BUGGY] for(int i= 0; i<values.length; ++i) { [BUGGY] String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	466	466	2	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { [BUGGY] [BUGGY] for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	466	466	2	add	
49	[BUG] [BUGGY] String value= values[i]; [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { [BUGGY] String value= values[i]; [BUGGY] if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	467	467	2	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { [BUGGY] [BUGGY] String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	467	467	2	add	
51	[BUG] [BUGGY] if(value.length()>0) { [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; [BUGGY] if(value.length()>0) { [BUGGY] fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	468	468	2	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; [BUGGY] [BUGGY] if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	468	468	2	add	
53	[BUG] [BUGGY] fieldKeyValues[offset++]= new KeyValue(value, i); [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { [BUGGY] fieldKeyValues[offset++]= new KeyValue(value, i); [BUGGY] } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	469	469	2	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { [BUGGY] [BUGGY] fieldKeyValues[offset++]= new KeyValue(value, i); } } } return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	469	469	2	add	
55	[BUG] [BUGGY] return offset; [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } [BUGGY] return offset; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	473	473	2	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { if(values!=null) { for(int i= 0; i<values.length; ++i) { String value= values[i]; if(value.length()>0) { fieldKeyValues[offset++]= new KeyValue(value, i); } } } [BUGGY] [BUGGY] return offset; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] copy [RETURN_TYPE] int  KeyValue[] fieldKeyValues int offset String[] values [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value String[] values KeyValue[] fieldKeyValues long serialVersionUID int $anonymous0 count field i idx offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3333333333333333	473	473	2	add	
57	[BUG] [BUGGY] if(!wasWhite) { [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { [BUGGY] if(!wasWhite) { [BUGGY] wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	308	308	2	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { [BUGGY] [BUGGY] if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	308	308	2	add	
59	[BUG] [BUGGY] wasWhite= true; [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { [BUGGY] wasWhite= true; [BUGGY] regex.append("\\s*+"); } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	309	309	2	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { [BUGGY] [BUGGY] wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	309	309	2	add	
61	[BUG] [BUGGY] regex.append("\\s*+"); [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; [BUGGY] regex.append("\\s*+"); [BUGGY] } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	310	310	2	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; [BUGGY] [BUGGY] regex.append("\\s*+"); } continue; } wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2672612419124244	310	310	2	add	
63	[BUG] [BUGGY] Date date= parse(source, new ParsePosition(0)); [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	250	250	2	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] [BUGGY] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	250	250	2	add	
65	[BUG] [BUGGY] if(date==null) { [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) { [BUGGY]  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	add	
67	[BUG] [BUGGY] return date; [FE] AssertionError [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] return date; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] [BUGGY] return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	
69	[BUG] [BUGGY] int offset= pos.getIndex(); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] int offset= pos.getIndex(); [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	276	276	2	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] [BUGGY] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	276	276	2	add	
71	[BUG] [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	277	277	2	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); [BUGGY] [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	277	277	2	add	
73	[BUG] [BUGGY] if(!matcher.lookingAt()) { [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] if(!matcher.lookingAt()) { [BUGGY] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	278	278	2	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] [BUGGY] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	278	278	2	add	
75	[BUG] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	add	
77	[BUG] [BUGGY] cal.clear(); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); [BUGGY]  for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	add	
79	[BUG] [BUGGY] for(int i=0; i<strategies.length;) { [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] [BUGGY] for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	add	
81	[BUG] [BUGGY] Strategy strategy= strategies[i++]; [FE] AssertionError [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	add	
83	[BUG] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [FE] AssertionError [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	add	
85	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	add	
87	[BUG] [BUGGY] pos.setIndex(offset+matcher.end()); [FE] AssertionError [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	
89	[BUG] [BUGGY] return cal.getTime(); [FE] AssertionError [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	add	
91	[BUG] [BUGGY] collector.add(currentStrategy); [FE] AssertionError [CONTEXT] } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [BUGGY] collector.add(currentStrategy); [BUGGY] } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	145	145	2	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [BUGGY] [BUGGY] collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	145	145	2	add	
93	[BUG] [BUGGY] wasWhite= false; [FE] AssertionError [CONTEXT] boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } [BUGGY] wasWhite= false; [BUGGY] switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	314	314	2	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } [BUGGY] [BUGGY] wasWhite= false; switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	314	314	2	add	
95	[BUG] [BUGGY] switch(c) { [FE] AssertionError [CONTEXT] for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; [BUGGY] switch(c) { [BUGGY] case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': case '[': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	315	315	2	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; [BUGGY] [BUGGY] switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': case '[': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	315	315	2	add	
97	[BUG] [BUGGY] regex.append(c); [FE] AssertionError [CONTEXT] case '}': case '\\': case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } [BUGGY] regex.append(c); [BUGGY] } return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	340	340	2	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] case '}': case '\\': case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } [BUGGY] [BUGGY] regex.append(c); } return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.2182178902359924	340	340	2	add	
99	[BUG] [BUGGY] boolean wasWhite= false; [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { [BUGGY] boolean wasWhite= false; [BUGGY] for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	304	304	2	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { [BUGGY] [BUGGY] boolean wasWhite= false; for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); if(Character.isWhitespace(c)) { if(!wasWhite) { wasWhite= true; regex.append("\\s*+"); } continue; } wasWhite= false; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote wasWhite SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	304	304	2	add	
