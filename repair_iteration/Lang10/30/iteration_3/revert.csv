projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=value.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309wasWhite=true;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309wasWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309WasWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null){if(!wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.charAt(i)=='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.charAt(i)=='s'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(!wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePattern(regex);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309WasWhite=true;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value.charAt(i)=='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i==value.length()){if(++i==value.charAt(i)){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value.charAt(i)=='s'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=concurrentMap.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i+1);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i)+1;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.codeBug();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(!wasWhite&&++i==value.length()){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getKey().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=regex.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i+1);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Stringc=value.charAt(i);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=c.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue().entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=tzNames.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309wereWhite=true;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(++i==value.length()){returnref;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.length()==0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMalformedException("");
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingException("");
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleEscaped(regex,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value==null){if(!wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=key.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i)+1;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.charAt(i)!='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(value,c);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(value,c,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null&&value.length()>0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null&&value.length()>0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler(regex,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i==value.length()){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(0);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getKey(),value.iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getKey().entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(unquote){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=value.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingException("",unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingException(",");
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='''){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){returnvalue;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){returnregex.toString();}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&regex.charAt(i)!='-'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&regex.charAt(i)!='s'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&regex.charAt(i)=='-'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i+2);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i+3);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(value,c,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(regex,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(value,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.length()==unquote){if(++i==value.charAt(i)){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(!wasWhite){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i+1));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Stringc=value.charAt(i));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.keySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=nameValues.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=tzNames.keySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value!=null&&value.length()>0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value!=null&&value.length()>0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(value!=null&&value.length()>0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null||value.length()>0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePattern(regex,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePattern(value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePattern(regex,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePattern(regex,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value!=null){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(++i==value.length()){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(!wasWhite&&++i>=value.length()){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(++i==value.length()){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(!wasWhite&&++i==value.length()-1){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Stringc=value.charAt(i+1);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='s'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='s'){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='s'){if(++i==value.length()){returnref;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value.charAt(i)!='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i)+2;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i)+4;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(i)+3;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue().entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue().entrySet().iterator().first();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=contextMap.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,regex,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,value,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,value,unquote,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,wasWhite,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.length()==unquote){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Stringc=value.charAt(0);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309charc=value.charAt(1);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(unquote){++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309wereWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309warenWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309erauwereWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.reportCodeChange();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.codeBug(i,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.codeBug(i,c);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=c.entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.keySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i,unquote,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i,unquote+1);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null||value.length()>0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value!=null&&value.length()>0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value!=null&&value.length()>0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(value!=null&&value.length()>0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=mapper.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=newConcurrentMap.Entry<String,String>(c.entrySet().iterator().next());
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(c,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i+2);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i+1,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i)+2;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i)+4;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i)+3;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(unquote){if(++i==value.length()){returnref;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(++i==value.length()){returnref;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler(regex,value,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler(regex,value,unquote,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){aughtExceptionHandler(regex,value,unquote);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<K,V>entry=value.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleEscaped(regex,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleEscaped(value,regex);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleEscaped(regex,value,wasWhite);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMalformedException("",unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMalformedException("s*+");
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=value.getValue().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>wasWhite=c.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=regex.getValue().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=regex.getKey().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=regex.keySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=ref.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309wurdenWhite=false;
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=tzNames.entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(regex,value,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,regex,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=regex.entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=ref.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='s'||value.charAt(i)=='s'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='s'||value.charAt(i)=='-'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='S'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMissingName(regex,value,c);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value.length()==0){if(++i==value.charAt(i)){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){aughtExceptionHandler.handleMalformedException("");}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(unquote){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(!wasWhite&&++i<value.length()){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null||value.length()==0){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value==null){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>entry=parseRegExp(value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value==null){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null){aughtExceptionHandler(regex,value,unquote);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){aughtExceptionHandler(regex,value,unquote);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleEscaped(value,value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.report(JSError.make(value,c,unquote));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.report(JSError.make(value,i,unquote));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.report(JSError.make(value,c,UNKNOWN_EXPR_RESULT));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parseBoolean(value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parsePrefix(regex);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&!unquote){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&regex.charAt(i)=='s'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309c=value.charAt(i+3);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getKey().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,value,unquote,regex);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,value,thisYear,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='''||value.charAt(i)=='''){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(unquote){if(value.charAt(i)=='/'){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){returnbuilder;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){returnresult;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i!=value.length()){if(++i>=value.charAt(i)){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i<value.length()){if(++i>=value.charAt(i)){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler.handleMalformedException("Unquotedvalue:");
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(Character.isWhitespace(c)){aughtExceptionHandler.handleMissingName(value,c);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){aughtExceptionHandler.handleMissingName(value,c);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=this.tzNames.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=this.concurrentMap.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=names.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309Context.report(JSError.make(value,unquote));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parseAndIgnoreWhitespace(value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=parse(value);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309while(!wasWhite&&++i!=value.length()){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&c<='0'&&c<='9'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&c!='s'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite&&c!='s'&&c!='s'){
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(Character.isWhitespace(c)){aughtExceptionHandler(regex,value,unquote);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>wasWhite=value.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,Object>wasWhite=value.entrySet().iterator().next().getValue();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309aughtExceptionHandler(regex,value.charAt(i)));
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(wasWhite){if(++i==value.length()){returnrepex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(value!=null&&value.length()>0){if(i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i!=value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309AnnotationTraversal.traverse(compiler,regex,unquote);
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(i!=value.length()){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){aughtExceptionHandler.handleMissingException("");}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){if(value.length()==0){if(++i==value.length()){returnregex;}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getKey().trim().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309if(!wasWhite){aughtExceptionHandler.handleEscaped(regex,value);}
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=regex.getValue(),value.entrySet().iterator().next();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=value.entrySet().iterator();
projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java309ConcurrentMap.Entry<String,String>entry=ref.entrySet().iterator();
