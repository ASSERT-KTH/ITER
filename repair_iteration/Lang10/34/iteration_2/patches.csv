bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);	  return    date!=    null?    JAPANESE_IMPERIAL    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date,  locale);	  return    date!=    null?    JAPANESE_IMPERIAL    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);	  return    date    ==    null?    JAPANESE_DATE    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date.getTime());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date.getTime());  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_DATE  :  Date.valueOf(date.getTime());	  return    date    ==    null?    JAPANESE_DATE    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD "  +  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	aughtExceptionHandler.throwAsIOException( " "  +  locale  + "  does  not  support  dates  before  1868  AD "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
7	[BUG]  [BUGGY]  ParseParser  parser=  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  ParseParser  parser=  parse(source,  new  ParsePosition(1));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	ParseParser  parser=  parse(source,  new  ParsePosition(1));	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
8	[BUG]  [BUGGY]  ParseParser  parser=  parse(source,  new  ParsePosition(0));  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  ParseParser  parser=  parse(source,  new  ParsePosition(0));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	ParseParser  parser=  parse(source,  new  ParsePosition(0));	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
9	[BUG]  [BUGGY]  return  date  <  0?  1  :  date.getTime();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  <  0?  1  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  0?  1  :  date.getTime();	  return    date    <    0?    1    :    date;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  return  date!=  0?  null  :  date.getTime();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  0?  null  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  0?  null  :  date.getTime();	  return    date!=    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  return  date  ==  0?  null  :  date.getTime();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  null  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  null  :  date.getTime();	  return    date!=    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  return  date.getMillis()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getMillis()  -  1;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getMillis()  -  1;	  return    date.getTime()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
13	[BUG]  [BUGGY]  return  date.getChronology().year();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getChronology().year();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getChronology().year();	  return    date.getTime()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(locale);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(locale);	  return    date    ==    null?    JAPANESE_IMPERIAL    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
15	[BUG]  [BUGGY]  return  date  ==  0?  1  :  date.getTime();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  1  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  1  :  date.getTime();	  return    date    ==    0?    1    :    date;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  return  date  ==  0?  1  :  date.setTime(date);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  1  :  date.setTime(date);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  1  :  date.setTime(date);	  return    date    ==    0?    1    :    date;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
17	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  1);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(1),  1);	  date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(2),  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  date  =  parse(source,  new  ParsePosition(2),  0);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(2),  0);	  date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(0),  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  date  =  parse(source,  new  ParsePosition(0),  0);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(0),  0);	  date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  return  date.getTime()  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  /  1;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  /  1;	  return    date.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
21	[BUG]  [BUGGY]  return  date  ==  0?  null  :  date.setTime(date);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  null  :  date.setTime(date);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  null  :  date.setTime(date);	  return    date    ==    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  return  date  ==  0?  null  :  date.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  null  :  date.toString();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  null  :  date.toString();	  return    date    ==    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  1);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(2),  1);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4),  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4),  0);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(4),  0);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3),  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3),  0);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(3),  0);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  ParserLocale  locale=  parse(source,  new  ParsePosition(0));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  ParserLocale  locale=  parse(source,  new  ParsePosition(0));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	ParserLocale  locale=  parse(source,  new  ParsePosition(0));	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
27	[BUG]  [BUGGY]  ParserLocale  locale=  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  ParserLocale  locale=  parse(source,  new  ParsePosition(1));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	ParserLocale  locale=  parse(source,  new  ParsePosition(1));	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
28	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  1);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  1);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(0),  0);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  2);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  2);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
32	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD "  +  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	aughtExceptionHandler.throwAsIOException( " "  +locale  + "  locale  does  not  support  dates  before  1868  AD "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
33	[BUG]  [BUGGY]  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parse(source,  new  ParsePosition(1));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parse(source,  new  ParsePosition(1));	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
34	[BUG]  [BUGGY]  return  date!=  0?  1  :  date.getTime();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  0?  1  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  0?  1  :  date.getTime();	  return    date!=    0?    1    :    date;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
35	[BUG]  [BUGGY]  return  parse(date,  new  ParsePosition(2));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  parse(date,  new  ParsePosition(2));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  parse(date,  new  ParsePosition(2));	  return    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
36	[BUG]  [BUGGY]  return  parse(date,  new  ParsePosition(1),  locale);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  parse(date,  new  ParsePosition(1),  locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  parse(date,  new  ParsePosition(1),  locale);	  return    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  return  parse(date,  new  ParsePosition(1),  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  parse(date,  new  ParsePosition(1),  0);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  parse(date,  new  ParsePosition(1),  0);	  return    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
38	[BUG]  [BUGGY]  return  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  parse(source,  new  ParsePosition(1));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  parse(source,  new  ParsePosition(1));	  return    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date.toString();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_DATE  :  date.toString();	  return    date    ==    null?    JAPANESE_DATE    :    date.toString();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date.substring(0,  date.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date.substring(0,  date.length()  -  1);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_DATE  :  date.substring(0,  date.length()  -  1);	  return    date    ==    null?    JAPANESE_DATE    :    date.toString();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  return  date  <  0?  null  :  date.getTime();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  <  0?  null  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  0?  null  :  date.getTime();	  return    date    <    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  +  1;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  +  1;	  return    date.getTime()    /    DateTimeConstants.MILLISECOND_TIME;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
43	[BUG]  [BUGGY]  return  date.getTime()  *  DateTimeConstants.MILLISECOND_TIME;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  *  DateTimeConstants.MILLISECOND_TIME;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  *  DateTimeConstants.MILLISECOND_TIME;	  return    date.getTime()    /    DateTimeConstants.MILLISECOND_TIME;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
44	[BUG]  [BUGGY]  return  date.getTime()  +  DateTimeConstants.MILLISECOND_TIME;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  +  DateTimeConstants.MILLISECOND_TIME;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  +  DateTimeConstants.MILLISECOND_TIME;	  return    date.getTime()    /    DateTimeConstants.MILLISECOND_TIME;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
45	[BUG]  [BUGGY]  return  date  >=  0?  1  :  date.getTime();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  >=  0?  1  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  >=  0?  1  :  date.getTime();	  return    date    >=    0?    1    :    date;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
46	[BUG]  [BUGGY]  return  date  >=  0?  null  :  date.getTime();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  >=  0?  null  :  date.getTime();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  >=  0?  null  :  date.getTime();	  return    date    >=    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ " "  does  not  match   "+parsePattern.pattern(),  0);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ " "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ " "  does  not  match   "+parsePattern.pattern(),  0);  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
50	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.substring(0,  date.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.substring(0,  date.length()  -  1);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  date.substring(0,  date.length()  -  1);	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
51	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_DATE  :  Date.valueOf(date,  locale);	  return    date!=    null?    JAPANESE_DATE    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  return  date!=  null?  null  :  date.getValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  null  :  date.getValue();  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  null  :  date.getValue();	  return    date    ==    null?    null    :    date.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
54	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
55	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
56	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + ",  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + ",  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + ",  }	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
57	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(source);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(source);  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(source);	  return    date    ==    null?    JAPANESE_IMPERIAL    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
58	[BUG]  [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
59	[BUG]  [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
60	[BUG]  [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date.getTime()  ==  source.getTime())  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
61	[BUG]  [BUGGY]  return  date!=  null?  null  :  date.getTime()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date!=  null?  null  :  date.getTime()  -  1;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  null  :  date.getTime()  -  1;	  return    date.getTime()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
62	[BUG]  [BUGGY]  return  date.getTime()  -  1L;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  -  1L;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  -  1L;	  return    date.getTime()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
63	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  2);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(1),  2);	  date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  return  parse(date,  new  ParsePosition(3));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  parse(date,  new  ParsePosition(3));  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  parse(date,  new  ParsePosition(3));	  return    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
65	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
66	[BUG]  [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_NAME))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_NAME))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date  ==  null)  {  if(locale.equals(JAPANESE_NAME))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
67	[BUG]  [BUGGY]  if(source  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(source  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(source  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
69	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
70	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
71	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
72	[BUG]  [BUGGY]  return  date  ==  0?  null  :  date.date;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  0?  null  :  date.date;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  null  :  date.date;	  return    date    ==    0?    null    :    date;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
74	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
75	[BUG]  [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(date  ==  null)  {  if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(date  ==  null)  {  if(locale.equals(JAPANESE_DATE))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
76	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  aughtException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  aughtException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	aughtException( "The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
78	[BUG]  [BUGGY]  parent  ==  null  ||  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null  ||  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null  ||  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "Invalid  date: "+source+ "  does  not  match   "+parsePattern.pattern(),  0);  }	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "Invalid    date:   "+source+   "   "    does    not    match       "+parsePattern.pattern(),    0);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  + "	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +   "    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
82	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  date);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  date  =  parse(source,  new  ParsePosition(1),  date);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(1),  date);	  date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
83	[BUG]  [BUGGY]  return  date.getTime()  *  DateTimeConstants.MILLISECOND_PER_DAY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  *  DateTimeConstants.MILLISECOND_PER_DAY;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  *  DateTimeConstants.MILLISECOND_PER_DAY;	  return    date.getTime()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
84	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  date);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  date);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(2),  date);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
85	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + ",  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
86	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1869  AD)n "  +  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1869  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "The   "  +locale  + "  locale  does  not  support  dates  before  1869  AD)n "  +	  if(date.getTime()    ==    date.getTime())    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "The       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
87	[BUG]  [BUGGY]  return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  *  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  *  2;  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME  *  2;	  return    date.getTime()    /    DateTimeConstants.MILLISECOND_TIME;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
88	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date.getTime());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date.getTime());  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  Date.valueOf(date.getTime());	  return    date    ==    null?    JAPANESE_IMPERIAL    :    Date.valueOf(date);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
89	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  date);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  date);  [BUGGY]      return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  date);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
90	[BUG]  [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null)  {  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  locale  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "       "    +locale    +   "    locale    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	if(locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "(The   "  +locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
92	[BUG]  [BUGGY]  parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }      [BUGGY]  parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +  [BUGGY]      }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	parent  ==  null  &&  locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException( "n   "  +  locale  + "  does  not  support  dates  before  1868  AD)n "  +	  if(date    ==    null)    {    if(locale.equals(JAPANESE_IMPERIAL))    {    throw    new    ParseException(   "n   "    +    locale    +   "    does    not    support    dates    before    1868    AD)n   "    +    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
