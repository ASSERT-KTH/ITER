bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  date.getTime();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date.getTime();  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime();	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
2	[BUG]  [BUGGY]  return  date  {  null?  null  :  date.getTime();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  {  null?  null  :  date.getTime();  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  {  null?  null  :  date.getTime();	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
3	[BUG]  [BUGGY]  return  date  }?  null  :  date;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  }?  null  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  }?  null  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	  	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
5	[BUG]  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(0));  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(0));  [BUGGY]  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	    Date  date  =  parse(source,  new  ParsePosition(0));		non-compiled	[CE]  illegal  start  of  type	68	None	add
6	[BUG]  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	    Date  date  =  parse(source,  new  ParsePosition(1));		non-compiled	[CE]  illegal  start  of  type	68	None	add
7	[BUG]  [BUGGY]    date  =  parse(source,  new  ParsePosition(1));  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    date  =  parse(source,  new  ParsePosition(1));  [BUGGY]  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	    date  =  parse(source,  new  ParsePosition(1));		non-compiled	[CE]  illegal  start  of  type	68	None	add
8	[BUG]  [BUGGY]    date  =  parse(source,  new  ParsePosition(0));  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    date  =  parse(source,  new  ParsePosition(0));  [BUGGY]  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	    date  =  parse(source,  new  ParsePosition(0));		non-compiled	[CE]  illegal  start  of  type	68	None	add
9	[BUG]  [BUGGY]  return  date  <  =  0?  null  :  date;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  <  =  0?  null  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  =  0?  null  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
10	[BUG]  [BUGGY]  return  date  <  =  0?  1  :  date;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  <  =  0?  1  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  =  0?  1  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
11	[BUG]  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(2));  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]    Date  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	    Date  date  =  parse(source,  new  ParsePosition(2));		non-compiled	[CE]  illegal  start  of  type	68	None	add
12	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
13	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
14	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_DATE  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
15	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date;  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_DATE  :  date;	return  date;  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
