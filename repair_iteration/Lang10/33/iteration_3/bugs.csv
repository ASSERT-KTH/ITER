bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(1),  source);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(1),  source);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(date,  new  ParsePosition(1),  source);	  Date    locale    =    parse(source,    new    ParsePosition(1),    date);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(1),  date,  0);	  Date    locale    =    parse(source,    new    ParsePosition(1),    date);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(2),  date);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(2),  date);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(2),  date);	  Date    locale    =    parse(source,    new    ParsePosition(1),    date);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  1);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(1),  date,  1);	  Date    locale    =    parse(source,    new    ParsePosition(1),    date);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  time.getTime())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  time.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  time.getTime())  {	  if(date    ==    null    ||    date.getTime()    ==    time.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
6	[BUG]  [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(2));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(2));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(date,  new  ParsePosition(2));	  Date    locale    =    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(1),  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(1),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(date,  new  ParsePosition(1),  0);	  Date    locale    =    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(3));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(3));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(date,  new  ParsePosition(3));	  Date    locale    =    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(4));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(4));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(4));	  Date    locale    =    parse(source,    new    ParsePosition(3));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(ParsePosition)date.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(ParsePosition)date.cloneTree();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(ParsePosition)date.cloneTree();	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
11	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(parsePattern)date.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(parsePattern)date.clone();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(parsePattern)date.clone();	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
12	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(6));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(6));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(6));	  Date    date    =    parse(source,    new    ParsePosition(8));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
13	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
14	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  Token.NAME  &&  date.getChronology()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
15	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
16	[BUG]  [BUGGY]  if(date!=  null  &&  date.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getType()  ==  Token.NAME)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getType()  ==  Token.NAME)  {	  if(date!=    null    ||    date.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  if(date  ==  null  &&  date.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  &&  date.getType()  ==  Token.NAME)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  &&  date.getType()  ==  Token.NAME)  {	  if(date!=    null    ||    date.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(4));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(date,  new  ParsePosition(4));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(date,  new  ParsePosition(4));	  Date    locale    =    parse(date,    new    ParsePosition(0));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
19	[BUG]  [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(1),  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(1),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(date,  new  ParsePosition(1),  0);	  Date    date    =    parse(date,    new    ParsePosition(1));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  parsePattern.getTime())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  parsePattern.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  parsePattern.getTime())  {	  if(date    ==    null    ||    date.getTime()!=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getValue()!=  source.getTime())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getValue()!=  source.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getValue()!=  source.getTime())  {	  if(date    ==    null    ||    date.getTime()!=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  timeZone.getTime())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  timeZone.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  timeZone.getTime())  {	  if(date    ==    null    ||    date.getTime()!=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
23	[BUG]  [BUGGY]  if(date!=  null  ||  date.getType()  ==  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getType()  ==  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getType()  ==  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getType()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getType()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getValue()  ==  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getValue()  ==  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getValue()  ==  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getType()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  TimeZone.UTC)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  TimeZone.UTC)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  TimeZone.UTC)  {	  if(date    ==    null    ||    date.getTime()    ==    TimeZone.UTC)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
27	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  TimeZone.UTC)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  TimeZone.UTC)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  TimeZone.UTC)  {	  if(date    ==    null    ||    date.getTime()    ==    TimeZone.UTC)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
28	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  TimeZone.UTC)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  TimeZone.UTC)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  TimeZone.UTC)  {	  if(date    ==    null    ||    date.getTime()    ==    TimeZone.UTC)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
29	[BUG]  [BUGGY]  if(date!=  null  ||  date.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getType()  ==  Token.FUNCTION)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getType()  ==  Token.FUNCTION)  {	  if(date    ==    null    ||    date.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.FUNCTION)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  Token.FUNCTION)  {	  if(date    ==    null    ||    date.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_TIME_ZONE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_TIME_ZONE)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_TIME_ZONE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_TIME_ZONE)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_TIME_ZONE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_TIME_ZONE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_TIME_ZONE)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
34	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getChronology()!=  date.getChronology())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getChronology()!=  date.getChronology())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getChronology()!=  date.getChronology())  {	  if(date    ==    null    ||    date.getTime()!=    date.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getParent()!=  date.getParent())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getParent()!=  date.getParent())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getParent()!=  date.getParent())  {	  if(date    ==    null    ||    date.getTime()!=    date.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  parsePattern.getTime())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  parsePattern.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  parsePattern.getTime())  {	  if(date    ==    null    ||    date.getTime()    ==    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  ==  date.getTime())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  ==  date.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  ==  date.getTime())  {	  if(date!=    null    ||    date.getTime()    ==    date.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
38	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  source.getTime())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  source.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  source.getTime())  {	  if(date!=    null    ||    date.getTime()    ==    date.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
39	[BUG]  [BUGGY]  if(date!=  null  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
40	[BUG]  [BUGGY]  if(date!=  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  ==  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  ==  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  ==  Date.MILLISECOND)  {	  if(date!=    null    ||    date.getTime()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    ==    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  if(date  ==  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  &&  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    ==    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    ==    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
48	[BUG]  [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(date,  source);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(date,  source);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =  DateUtils.parse(date,  source);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parseDate(date,  source);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parseDate(date,  source);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =  DateUtils.parseDate(date,  source);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  ParserPattern  parsePattern  =  DateUtils.parse(date,  source);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParserPattern  parsePattern  =  DateUtils.parse(date,  source);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParserPattern  parsePattern  =  DateUtils.parse(date,  source);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
51	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()!=  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()!=  null)  {	  if(date!=    null    ||    date.getTime()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
52	[BUG]  [BUGGY]  if(date  ==  null  &&  date.getTime()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  &&  date.getTime()!=  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  &&  date.getTime()!=  null)  {	  if(date!=    null    ||    date.getTime()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
53	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()!=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()!=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()!=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getTime()!=    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getChronology()!=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getChronology()!=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getChronology()!=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getTime()!=    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  JAPANESE_COMPARATOR)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  JAPANESE_COMPARATOR)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  JAPANESE_COMPARATOR)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_COMPARATOR)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_COMPARATOR)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_COMPARATOR)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  JAPANESE_COMPARATOR)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_COMPARATOR)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  JAPANESE_COMPARATOR)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  JAPANESE_COMPARATOR)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  JAPANESE_COMPARATOR)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_COMPARATOR)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  JAPANESE_DATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  JAPANESE_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  JAPANESE_DATE)  {	  if(date    ==    null    ||    date.getTime()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
59	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTimeZone()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getTimeZone()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
60	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getZone()!=  timeZone)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getZone()!=  timeZone)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getZone()!=  timeZone)  {	  if(date    ==    null    ||    date.getTimeZone()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
61	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  locale)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  locale)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTimeZone()!=  locale)  {	  if(date    ==    null    ||    date.getTimeZone()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
62	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getValue()  ==  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getValue()  ==  null)  {	  if(date    ==    null    ||    date.getTime()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
63	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getParent()  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getParent()  ==  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getParent()  ==  null)  {	  if(date    ==    null    ||    date.getTime()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
64	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  +  1;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  +  1;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
65	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  -  1;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  -  1;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
66	[BUG]  [BUGGY]  Date  locale  =  date.getLocalMillis();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getLocalMillis();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getLocalMillis();	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
67	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getTime()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getLocale()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getLocale()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getLocale()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getTime()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(2),  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(2),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(date,  new  ParsePosition(2),  0);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
70	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  1);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(2),  1);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4),  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(4),  0);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
72	[BUG]  [BUGGY]  ParsePattern  parser  =(ParsePattern)date.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parser  =(ParsePattern)date.clone();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parser  =(ParsePattern)date.clone();	  ParsePattern    parsePattern    =(ParsePattern)date.clone();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
73	[BUG]  [BUGGY]  ParsePattern  datePattern  =(ParsePattern)date.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  datePattern  =(ParsePattern)date.clone();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  datePattern  =(ParsePattern)date.clone();	  ParsePattern    parsePattern    =(ParsePattern)date.clone();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
74	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getKey()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getKey()!=  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getKey()!=  null)  {	  if(date    ==    null    ||    date.getValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
75	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  <  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
76	[BUG]  [BUGGY]  if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  &&  date.getTime()  >=  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  1);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  1);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(0),  0);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
79	[BUG]  [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(4));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(4));  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(date,  new  ParsePosition(4));	  Date    date    =    parse(date,    new    ParsePosition(3));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
80	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(ParsePattern)date.peek();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(ParsePattern)date.peek();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(ParsePattern)date.peek();	  ParsePattern    parsePattern    =(ParsePattern)date.clone();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
81	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(ParsePattern)date.cloneTree();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(ParsePattern)date.cloneTree();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(ParsePattern)date.cloneTree();	  ParsePattern    parsePattern    =(ParsePattern)date.clone();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
82	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
83	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(2),  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(2),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(2),  0);	  Date    locale    =    parse(source,    new    ParsePosition(2));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
84	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern  :  date.clone());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern  :  date.clone());  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern  :  date.clone());	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
85	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(parsePattern!=  null?  parsePattern  :  date.clone());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(parsePattern!=  null?  parsePattern  :  date.clone());  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(parsePattern!=  null?  parsePattern  :  date.clone());	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
86	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  <  source.getTime())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  <  source.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  <  source.getTime())  {	  if(date    ==    null    ||    date.getTime()    >=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
87	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  >=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  >=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  >=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getTime()!=    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
89	[BUG]  [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(3),  0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(date,  new  ParsePosition(3),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(date,  new  ParsePosition(3),  0);	  Date    date    =    parse(date,    new    ParsePosition(3));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
90	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_FIRST;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_FIRST;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_FIRST;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
92	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3),  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3),  0);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(3),  0);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
93	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  JAPANESE_LAST)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  JAPANESE_LAST)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  JAPANESE_LAST)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  null)  {	  if(date!=    null    ||    date.getTime()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  TimeZone.US_ASCII)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  TimeZone.US_ASCII)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  TimeZone.US_ASCII)  {	  if(date    ==    null    ||    date.getTime()    ==    TimeZone.UTC)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
96	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Date.SECOND)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Date.SECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  Date.SECOND)  {	  if(date    ==    null    ||    date.getType()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  2);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  2);	  Date    date    =    parse(source,    new    ParsePosition(1),    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
98	[BUG]  [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  0);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  0);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
99	[BUG]  [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  1);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =  DateUtils.parse(source,  date,  1);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
100	[BUG]  [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =  DateUtils.parse(source,  date  +  1);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =  DateUtils.parse(source,  date  +  1);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
101	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  >=  time.getTime())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  >=  time.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  >=  time.getTime())  {	  if(date    ==    null    ||    date.getTime()    ==    time.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
102	[BUG]  [BUGGY]  if(date  ==  null  &&  date.getTime()  <  =  DateTimeConstants.MILLISECOND_DATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  &&  date.getTime()  <  =  DateTimeConstants.MILLISECOND_DATE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  &&  date.getTime()  <  =  DateTimeConstants.MILLISECOND_DATE)  {	  if(date!=    null    &&    date.getTime()    <    =    DateTimeConstants.MILLISECOND_DATE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
103	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTimeZone()  ==  timeZone)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTimeZone()  ==  timeZone)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTimeZone()  ==  timeZone)  {	  if(date    ==    null    ||    date.getTimeZone()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
104	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  TimeZone.UTC)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTimeZone()!=  TimeZone.UTC)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTimeZone()!=  TimeZone.UTC)  {	  if(date    ==    null    ||    date.getTimeZone()!=    timeZone)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
105	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getParent()!=  source.getParent())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getParent()!=  source.getParent())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getParent()!=  source.getParent())  {	  if(date    ==    null    ||    date.getTime()!=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_TYPE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  JAPANESE_TYPE)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  JAPANESE_TYPE)  {	  if(date    ==    null    ||    date.getTime()    ==    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
107	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()!=  parsePattern.pattern())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()!=  parsePattern.pattern())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()!=  parsePattern.pattern())  {	  if(date    ==    null    ||    date.getTime()!=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
108	[BUG]  [BUGGY]  if(date!=  null  ||  date.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getType()!=  Token.NAME)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getType()!=  Token.NAME)  {	  if(date    ==    null    ||    date.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
109	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_PER_DAY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_PER_DAY;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_PER_DAY;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
110	[BUG]  [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME;  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  date.getTime()  /  DateTimeConstants.MILLISECOND_TIME;	  Date    locale    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
111	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone();	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
112	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(ParsePosition)parsePattern.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(ParsePosition)parsePattern.clone();  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(ParsePosition)parsePattern.clone();	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
113	[BUG]  [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone());  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  parsePattern  =(parsePattern  ==  null?  parsePattern.clone()  :  date.clone());	  ParsePattern    parsePattern    =(ParsePosition)date.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
114	[BUG]  [BUGGY]  if(date!=  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getType()  ==  Token.NAME  ||  date.getChronology()!=  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
115	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()!=  Token.NAME  ||  date.getChronology()  ==  JAPANESE_IMPERIAL)  {	  if(date    ==    null    ||    date.getType()    ==    Token.NAME    ||    date.getChronology()!=    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
116	[BUG]  [BUGGY]  if(date  ==  null  ||  Date.getTime()  ==  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  Date.getTime()  ==  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  Date.getTime()  ==  Date.MILLISECOND)  {	  if(date!=    null    ||    date.getTime()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
117	[BUG]  [BUGGY]  if(date  ==  null  ||  Date.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  Date.getType()  ==  Token.NAME)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  Date.getType()  ==  Token.NAME)  {	  if(date!=    null    ||    date.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
118	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  timeZone.getTime())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  timeZone.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  timeZone.getTime())  {	  if(date    ==    null    ||    date.getTime()    ==    time.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  if(date!=  null  ||  date.getTime()  ==  time.getTime())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getTime()  ==  time.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getTime()  ==  time.getTime())  {	  if(date    ==    null    ||    date.getTime()    ==    time.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
120	[BUG]  [BUGGY]  if(date  ==  null  ||  Date.getTime()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  Date.getTime()!=  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  Date.getTime()!=  null)  {	  if(date!=    null    ||    date.getTime()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
121	[BUG]  [BUGGY]  if(date!=  null  ||  date.getParent()!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getParent()!=  null)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getParent()!=  null)  {	  if(date    ==    null    ||    date.getParent()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
122	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getMillis()!=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getMillis()!=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getMillis()!=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getTime()!=    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
123	[BUG]  [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  tzNames);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  locale  =  parse(source,  new  ParsePosition(1),  date,  tzNames);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  locale  =  parse(source,  new  ParsePosition(1),  date,  tzNames);	  Date    locale    =    parse(source,    new    ParsePosition(1),    date);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
124	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getType()  ==  Token.VAR)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getType()  ==  Token.VAR)  {	  if(date    ==    null    ||    date.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
125	[BUG]  [BUGGY]  ParsePattern  datePattern  =  DateUtils.parse(source,  date);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  ParsePattern  datePattern  =  DateUtils.parse(source,  date);  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	ParsePattern  datePattern  =  DateUtils.parse(source,  date);	  ParsePattern    parsePattern    =    DateUtils.parse(source,    date);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
126	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  date);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  date);  [BUGGY]      if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	Date  date  =  parse(source,  new  ParsePosition(2),  date);	  Date    date    =    parse(source,    new    ParsePosition(2),    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  locale)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  ==  locale)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  ==  locale)  {	  if(date    ==    null    ||    date.getTime()    ==    JAPANESE_IMPERIAL)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
128	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getClass()!=  Date.MILLISECOND)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getClass()!=  Date.MILLISECOND)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getClass()!=  Date.MILLISECOND)  {	  if(date    ==    null    ||    date.getType()    ==    Date.MILLISECOND)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
129	[BUG]  [BUGGY]  if(date!=  null  ||  date.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date!=  null  ||  date.getType()  >=  Token.NAME)  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date!=  null  ||  date.getType()  >=  Token.NAME)  {	  if(date    ==    null    ||    date.getType()    >=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
130	[BUG]  [BUGGY]  if(date  ==  null  ||  date.getTime()  >  source.getTime())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));      [BUGGY]  if(date  ==  null  ||  date.getTime()  >  source.getTime())  {  [BUGGY]        if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(       "(The       "  +locale  +       "  locale  does  not  support  dates  before  1868  AD)\n     "  +       "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  throw  new  ParseException(     "Unparseable  date:  \     "     "+source+     "\     "  does  not  match       "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	251	251	2	replace	if(date  ==  null  ||  date.getTime()  >  source.getTime())  {	  if(date    ==    null    ||    date.getTime()    >=    source.getTime())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
