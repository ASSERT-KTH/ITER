projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.crc.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.toByteArray();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xff;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.getBytes(current.crc);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.getBytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnthis.in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnthis.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnthis.entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnthis.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(in<<3)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.in==null)?this:current.in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.in==null)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(int)read;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this.entryEncoding:entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this.entryEncoding:zipEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc==null)?this.entryEncoding:entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null?this.entryEncoding:entryEncoding);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this:current.entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.in.read(buffer,offset,read.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.read(buffer,offset,read.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?null:current.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this:current.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this:crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc==null)?null:current.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncrc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc==null)?this:crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(length>0){for(inti=0;i<length;++i){current.crc.update(buffer,offset,read);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){buffer[offset++]=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(length>0){for(inti=0;i<length;i++){current.crc.update(buffer,offset,read);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(length>0){for(inti=0;i<buffer.length;i++){current.crc.update(buffer,offset,read);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(length>0){for(inti=0;i<length;++i){current.crc.update(buffer,offset,fileNameLen);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396current.crc.update(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396current.crc.update(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc!=null&&(current.crc!=null||current.isEnabled(read));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.crc.isEnabled(read));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null||current.crc.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.crc.isEnabled(array));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.crc.isEnabled(entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset,length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.in!=null||current.crc.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc!=null&&(current.in!=null||current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null&&current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.in!=null&&current.crc.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null||current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.in!=null||current.crc.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc!=null&&(current.in!=null||current.in.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.in!=null||current.crc.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null||current.in.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null&&current.in.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.in!=null&&current.crc.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc!=null&&(current.in!=null||current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null&&current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset,length+1));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.in!=null&&current.crc.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null||current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.read(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.update(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnin.read()&&current.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||current.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.read(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc&&read!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc==null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||current.crc!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncrc&&current.crc!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&crc!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrc&&current.crc!=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.getBytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.getBytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396read=current.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396read=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396read=current.crc.getBytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.getBytes(read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,offset,length-read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()));}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMetho
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMet
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnin.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.cloneTree();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnin.read(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.clone();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.toByteArray();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.toByteArray();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){returnread.toByteArray();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396read=current.crc.toByteArray();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnbuffer.toByteArray();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread-0xff;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread%0xff;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread+0xff;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xff,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0x7F;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread|0xff;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.update(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.update(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.updateValue(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.read;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread||(current.crc!=null&&current.crc.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc==null||current.crc.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.open(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.reset(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.in!=null||current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc==null||current.in.read(buffer,offset,length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}else{thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod())
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){returnread.getBytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.getbytes();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnread.toByteArray();}else{System.arraycopy(buffer,offset,buffer,offset,length);current.crc.update(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnbuffer.toByteArray();}else{System.arraycopy(buffer,offset,buffer,offset,length);current.crc.update(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnread.toByteArray();}else{current.crc.update(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnbuffer.toByteArray();}else{System.arraycopy(buffer,offset,buffer,offset,length);current.crc.update(buffer,offset,read);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(read!=null){returnread.toByteArray();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.entry;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.entryEncoding!=null)?this:current.entryEncoding;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xff,current.crc.offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xff+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xff,current.in.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&0xffF;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.cloneAndCrc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc==null||current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){if(read>0){current.crc.update(buffer,offset,read);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){current.crc.update(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){if(read>0){current.crc.update(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null){current.crc.update(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read==0)?this.in:read;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read==0)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read!=0)?this.in:read;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read>=0)?this.in:read;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read!=0)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?0:current.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc==null)?this:current.crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(read==0)?this.crc:crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.arrayOffset(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc>=null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc[Delete]null;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&current.crc.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc!=null&&(current.crc!=null||current.crc.isEnabled(current.entry));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.crc.isEnabled(entryEncoding));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc==null||current.in.read(buffer,offset+length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc!=null||current.in.read(buffer,offset+length,current.entryEncoding));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread.read()&&current.crc.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.createEntry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.getEntry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.decodeZipEncoding(read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.reset();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returnread&&(current.crc==null||current.in.read(buffer,offset+length)>0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()));}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod()
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod()));}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){if(read>0){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry.getMethod()).
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(in!=null)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(in<=0)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(in<0)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(in==null)?this.in:in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.in!=null)?this:current.in;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this.crc:crc;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this:newZipArchiveEntry(current.entry,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396return(current.crc!=null)?this:newZipArchiveEntry(this,read,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.in.getBytes(read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396if(current.crc!=null){returnread.getBytes(current.crc);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396returncurrent.crc.decodeValue(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java396while(current.crc!=null&&current.in.read(buffer,offset,length)>0){returnread.toByteArray();
