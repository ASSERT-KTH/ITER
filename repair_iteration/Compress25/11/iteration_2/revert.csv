projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,toRead,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=in.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=in.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/2L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,buf,0,toRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,current.bytesRead,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,toRead,0,buf.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,buf,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,toRead,0,buf.length-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,toRead,0,buf.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,buffer,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length()-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length()-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length()*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=fromRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,fileNameLen)){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor&&(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(i<length){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,length)){for(inti=0;i<toRead;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,length){for(inti=0;i<toRead;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length*current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<buffer.length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,fileNameLen)){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.set(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(i<length){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+length,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=size+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=fromRead-length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=fromRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=max;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*2+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*2L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*4-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length/toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=fromRead-buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(i<length){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,length){for(inti=0;i<toRead;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,false){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.setLength(buf.remaining()*length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize-length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset+bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*2+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(i<length){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<toRead;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434||length>0){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor&&length>0){for(inti=0;i<toRead;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor&&length>0){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset+toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset,length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434safeInputStream()){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=in.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434safeInputStream()){for(inti=0;i<length;++i){buffer[i]=in.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor(current,false){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.set(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<shortLength;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/2*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length+toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize*2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*2+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<len;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*2L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/2+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<buffer.length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.get(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.get(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<shortLength;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(int){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining()*length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434luate(buffer,offset,length)){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*6;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434CurrentEntry.bytesRead+=toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<shortLength;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<end;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,buf,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,buf,0,buf.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<size;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<current.bytesRead;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<shortLength;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<offset;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=size+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=size-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buf,offset,length)){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buf,offset,length)){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length<=0){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.get(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<end;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining()*length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buffer.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(current.bytesRead,offset,buf,0,toRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(current.bytesRead,offset,buf,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(i>0){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+2-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset+length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length<=0){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<toRead;++i){buf.set(i,buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(length>0){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset+length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=offset-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(toRead>0){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<in.length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<end;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434while(toRead>0){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-toRead*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+2);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<this.length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<length;++i){buf[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buf,offset,length)){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(buffer,offset,length)){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434read(){for(inti=0;i<toRead;++i){buf.put(buffer,offset,toRead);}
