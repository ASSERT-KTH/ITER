projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=csize-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=toRead*length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*3;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.set(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.put(buffer,off,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i,offset);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=buf.length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead-1L;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buf.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=buffer.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*8;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.get(i,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434System.arraycopy(buf,offset,toRead,0,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remove(i,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.reset(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining()-length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434if(length>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining(),length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead-=offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=length/2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java434current.bytesRead+=toRead*2-1;
