projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED&&current.in.readStored(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length+1)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length,read)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.entry.readStored(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.readStored(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380intlength=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380Integeroffset=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(length>0){for(inti=0;i<length;++i){buffer[offset++]=current.in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380intlength=current.in.read(buffer,offset,length);if(length>0){for(inti=0;i<length;++i){continue;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380in.close();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380intlength=current.in.read(buffer,offset,length);if(length>0){for(inti=0;i<length;++i){buffer[off
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(length>0){for(inti=0;i<length;++i){buffer[off]=current.in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED&&current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()!=ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()!=ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED&&current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()!=ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()!=ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null||current.entry.getMethod()!=ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null||current.entry.getMethod()>=ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||length!=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED&&current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()!=ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()!=ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null||length>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED&&current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()!=ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STRING||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()!=ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(read==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in>=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.enabled){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380intlength=current.in.read(buffer,offset,length);if(length>0){System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380Integerpos=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380intlength=current.in.read(buffer,offset,length);if(length>0){System.arraycopy(buffer,offset,read,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(length>0){System.arraycopy(buffer,offset,read,0,current.entry.length);}else{System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(length>0){System.arraycopy(buffer,offset,buffer,offset,length);}else{System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length)-1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.readStored(buffer,offset,length)+1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipMethod.IMPLODING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipArchiveOutputStream.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry>=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry!=null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.read()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.getMethod()==ZipArchiveOutputStream.FIELD_NAME){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.readStored(buffer,offset,length)||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.read()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.STRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entriesRead==null||current.entry.getMethod()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry==null||current.entry.getName()==ZipArchiveOutputStream.STORED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||length>current.entry.getLength()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||length>current.entry.length()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.read()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.in.getMethod()==ZipArchiveOutputStream.KEY){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null&&current.entry.getMethod()==ZipMethod.IMPLODING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null&&current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null&&current.entry.getMethod()==ZipMethod.GETPROP){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null&&current.entry.getMethod()==ZipMethod.IMPLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in.read()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in==null||current.entry.getMethod()==ZipArchiveOutputStream.STORED||current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380Integerlength=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null){intlength=current.in.read(buffer,offset,length);if(length>0){return;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null){intlength=current.in.read(buffer,offset,length);if(length>0){thrownewIllegalStateException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null){intlength=current.in.read(buffer,offset,length);if(length>0){continue;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java380if(current.in!=null){intlength=current.in.read(buffer,offset,length);if(length>0){break;}
