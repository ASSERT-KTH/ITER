projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry==null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(offset,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(this.entry,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(read,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(this.entry,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(offset,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(this.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,true);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(offset,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(read,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=currentEntry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=current.entry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373current.entry=entryEncoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373intcurrentSize=current.size();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=current.getInputStream();if(inf!=null){for(inti=0,length=inf.length;i<length;++i){inputStream.close();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(length,current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(length,buffer,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(array,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveInputStream.DEFAULT);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry>=null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveOutputStream.DEFLATED);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(this.entry!=null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,hasDataDescriptor);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,false);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(this.entry==null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry==null,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkAndFixDeprecated(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373intcurrentLen=current.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373byte[]current=current.getDataDescriptor();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=entryEncoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Inflaterinf=entryEncoding.deflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveOutputStream.DEFAULT));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveEntry.DEFLATED);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,hasDataDescriptor);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptor(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,ze);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedDescriptor(current.entry,hasUTF8Flag);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkAndFixRequestedDescriptor(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,hasDataDescriptor);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,false);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,hasDataDescriptor);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,false);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry!=null&&current.entry.getMethod()==ZipArchiveEntry.DATA_DESCRIPTOR);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(current.entry,offset-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry[Delete]null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkState(current.entry>>null);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(remainder,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(this.entry,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkRequestedFeatures(currToken,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373current.entry=entryEncoding.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373CurrentEntrycurrent=currentEntry.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Integercurrent=current.getEntry(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373current.entry=entryEncoding.decode(buffer,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373Integercurrent=current.entry.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDescriptorFor(current.entry,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecated(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,true);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeclaredFeatures(current.entry,ze);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,ze);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java373ZipUtil.checkDeprecatedFeatures(current.entry,true);
