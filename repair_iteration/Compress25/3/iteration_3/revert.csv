projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<length;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current>=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.sentry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry>=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entryEncoding!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt();if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&current!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&current==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset==0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length>0||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length>0&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES),length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasUseUnicodeExtraFields){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasUseZip64){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||length<=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer!=null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset+length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404readStored(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404lastStoredEntry=newByteArrayInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,lastStoredEntry.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&this.lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAME)||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAME)||this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||length<=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.isStored()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.isStored()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&isEnabled(Feature.AUTO_RESULT_AS_NULL_OBJECT)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||hasDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&length>0&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null&&current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&lastStoredEntry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasValueDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<lastStoredEntry.length||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<allowStoredEntriesWithDataDescriptor||buffer.length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.length||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length==lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length>=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length!=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null&&!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset+length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>current.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=current.closed||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=current.closed||length<=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>0||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length>!allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||offset+length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<offset;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset+length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length||current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length||current.closed<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset==0||length==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||size==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length||buffer.closed==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_FILE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)||isEnabled(Feature.AUTO_CLOSE_EXTRA_FILE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer!=null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset==lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset!=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||lastStoredEntry.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.entryEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=crc.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=current.entryEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||this.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasFileDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length!=0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<len;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<offset+length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.entry.hasValueDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.entry.hasDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.entry.hasSize()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||length<=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_SOURCE,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_SOURCE),length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&current!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&current==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,current.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,current.entry);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length-1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,buffer.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length,current.bytesRead);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=current.hasUTF8Flag||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=hasUTF8Flag||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=hasUTF8Flag||buffer.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasValueDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasSize()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.entryEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=crc.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<offset;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(entryEncoding!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(entryEncoding==null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length!=0){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf==null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf==null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=zipEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.entryEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=current.inputStream.readInt();if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt();if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=current.inputStream.readInt();if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404InputStreaminf=this.inputStream.readInt();if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=current.entry.readInt();if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404allowStoredEntriesWithDataDescriptor){for(inti=0;i<off;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset+length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=crc.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<lastStoredEntry.length||current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<lastStoredEntry.length||offset>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.closed||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<=lastStoredEntry.length||offset>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<lastStoredEntry.length||current.closed||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<lastStoredEntry.length||buffer.closed||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404readFully(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404readShort(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404readFile(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404intlength=readLength(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404intlength=buffer.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>this.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=this.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||offset+length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>lastStoredEntry.length||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES||length>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.sentry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length==current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length!=0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404lastStoredEntry=newByteArrayInputStream(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length==0){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0&&current.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>0||current.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>0||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||current.entry.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==0){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>0||current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer!=null||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer==null||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<0||!current.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||offset+length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<length||current.closed||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length||offset>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>offset||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<length||current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length<=offset+length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>0||length>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset+length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=current.inputStream.readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readFully(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=(int)this.inputStream.readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=inputStream.readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){firstEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||this.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||buffer.length>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==0){if(lastStoredEntry!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset+length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<len;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_EXP_32)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_FILE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){System.arraycopy(buffer,offset,buffer,0,length);for(inti=0;i<offset;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset+length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStored()||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry!=null||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=offset;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,ze);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry==null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&lastStoredEntry.length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&lastStoredEntry.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset+length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset,length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.readUTF()||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||this.lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||this.allowStoredEntriesWithDataDescriptor!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.length||length>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor&&length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry||length>current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry!=null||allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry.allowStored()||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||!current.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry!=null||!current.allowStoredEntriesWithDataDescriptor||buffer.length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||length<=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry||offset>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset==lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||buffer.length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length>=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasFileName()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&current!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasFileNameDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current!=null&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.charAt(offset)!='-'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0&&isEnabled(Feature.QUOTE_FIELD_NAMES,buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.charAt(offset-offset)!='n'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(off+length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||!allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<0||!allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<=current.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||offset<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag||!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&hasDataDescriptor!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||allowStoredEntriesWithDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset+length;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<len;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<size;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||current.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||lastStoredEntry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null){if(lastStoredEntry==null){firstEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||!current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||!current.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.entry.hasFileDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length+1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(buffer,offset,length-1);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=readStored(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<0||!allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||!allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&this.allowStoredEntriesWithDataDescriptor==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current==null||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0||buffer.length<=allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||hasUTF8Flag&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&length>0&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&length>0&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404intinf=this.inputStream.readInt();if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&current.hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||offset>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||isEnabled(current.entry.getMethod())){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0){for(inti=0;i<length;++i){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<offset;++i){buffer[i]=newBoundedInputStream(buffer,offset,length+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=offset;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset*length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404while(current.entry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||!allowStoredEntriesWithDataDescriptor&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||offset<=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasUTF8Flag||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasDataDescriptor||hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null){if(lastStoredEntry==null){firstEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.entry.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||this.allowStoredEntriesWithDataDescriptor==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=this.allowStoredEntriesWithDataDescriptor||this.lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<0||length>current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(buffer.length<0||current.closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=readStoredEntry(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(current,buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entryEnabled||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_Fields)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXTRA_FILES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_EXP_32)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=offset;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newByteArrayInputStream(buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){for(inti=0;i<buffer.length;i++){buffer[i]=newBoundedInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&this.lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||length<=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.bytesRead==null||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=entryEncoding.encode(buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||hasDataDescriptor||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(zipEncoding!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entryEncoding==null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.entryEncoding!=null){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(offset>=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.hasSize()&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||isEnabled(SHORT_BUF)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isStored()||isEnabled(Feature.AUTO_CLOSE_TARGET)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&lastStoredEntry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||current.entry.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null||this.entry.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>0||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>0||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&buffer.length>0||buffer.charAt(offset-length)!='0'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag||hasDataDescriptor||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&length>0&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.AUTO_CLOSE_SOURCE||hasUTF8Flag)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||buffer.length<=off){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entryEnabled||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!this.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAME)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor){if(lastStoredEntry==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=ZipEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||hasDataDescriptor||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length<=0||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||lastStoredEntry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.getLength()>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.getSize()>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.getValue()==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.getValue()==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!allowStoredEntriesWithDataDescriptor||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry==null){if(lastStoredEntry!=null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(off+length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(hasDataDescriptor||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(closed){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry.allowStoredEntriesWithDataDescriptor||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(!current.allowStoredEntriesWithDataDescriptor&&offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=this.inputStream.readInt(2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null&&current.entry.hasSize()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.hasUTF8Flag&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||length<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(length>0){if(lastStoredEntry==null){lastStoredEntry=newByteArrayInputStream(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=getStoredEntry(current,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)||current.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(this.allowStoredEntriesWithDataDescriptor||length>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry>=null||!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(lastStoredEntry==null||offset<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.entry!=null||current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.sentry==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java404if(current.sentry==null||length>current.length){
