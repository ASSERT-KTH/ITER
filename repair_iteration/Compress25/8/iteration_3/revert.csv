projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.remaining()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.remaining(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(length,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length-1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesRead.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=inputStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.readFully(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.readFully(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.readFile(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length-current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.length(),current.bytesRead.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),current.offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining()+1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining()+1,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length+1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining()+1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+1,current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length,current.bytesReadLength);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length,current.bytesReadLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,width);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.array(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length+1,current.bytesRead.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),current.offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),l+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset,length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length+1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining()+1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,l-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,current.bytesRead.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length()-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428bytecsize=current.bytesReadFromStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.readFully(buffer,offset,current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,off+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.read());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length-1,current.bytesRead.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),l+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length+1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length-1,current.bytesRead.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length-1,size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length,current.bytesRead.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length,l-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length-1,length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,l+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.bytesRead.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length+1,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining()+1,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,current.buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.limit()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,length-current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,current.bytesReadLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,current.bytesReadLength);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.readFully(buffer,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,off,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),buf.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,buffer.remaining()+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length+1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),length+1,current.bytesReadFromStream.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesRead.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.in.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesRead(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length,current.bytesReadLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length+1,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesRead.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.in.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428bytecsize=in.read(buf.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length-1,buf.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length-1,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buffer.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buf.bytesRemaining);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buf.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(length,current.bytesRead.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(0,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(toRead,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(l,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.bytesRead.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.remaining()*length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.remaining()+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.bytesRead.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.length+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,l+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,csize+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,offset+length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),current.inputStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,0,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,0L);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length,current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.getLength(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.size(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),offset+length,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.bytesRead.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.length()-length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()*length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset,length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.bytesReadLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.bytesReadLength);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.bytesReadCount);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(buf.remaining(),offset+length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428floattoRead=Math.min(current.bytesRead,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),current.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428floattoRead=Math.min(current.bytesRead.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),current.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),width);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),current.remaining);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),buf);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),current.bytesReadFromStream-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length-1,buf.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buf.remaining());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,current.bytesRemaining);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428floattoRead=Math.min(current.bytesRead.length(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),length+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(length,current.bytesRead.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(length,buffer.length()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(length,current.bytesReadFromStream.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),length+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.size(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),length,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.read(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(inputStream.remaining(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length-1,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length-1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.read(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.readLength);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buffer,offset,end);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,0,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.read(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,current.buffer.remaining()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.remaining()*1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length,current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(buf.remaining(),length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(inputStream.remaining(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.length(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),buffer,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(length,buf.length()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=current.bytesReadFromStream.read(buf,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=inputStream.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()*1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream(),offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.remaining(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,l)-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.length(),csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.length(),current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),offset+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining()+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),off+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),off+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream,buffer.remaining()-length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining()+length,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array(),0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buf.array(),0,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),offset-1,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),length-1,buffer.bytesRemaining);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),this.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buffer,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.offset(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428Integercsize=in.read(buffer,offset,end);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream.remaining(),bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=current.bytesReadFromStream.read(buf,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.length(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesReadFromStream,buffer.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,buffer.remaining()+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead,buffer.remaining(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.length()+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining()+length,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),off+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),off+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining()+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),buffer.length,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.inputStream.remaining(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+1,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining(),off+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.read(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining()+1,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length()+1,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.length(),off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,current.length)-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,current.buffer.remaining()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.remaining()+length,off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.read(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.read(),csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.remaining(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream(),offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer.offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.length,buffer.remaining()-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428intcsize=in.read(buf.array(),current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),offset+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining(),off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.offset(),length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428in.read(buffer,offset,current.bytesReadFromStream,l);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-offset+length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream,buffer.remaining()-length*length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),offset+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.read(buffer,offset,length));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,buffer.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,buffer.offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.offset(),length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesReadFromStream.remaining()+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.array(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.read(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.in.read(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead,offset+length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length,l+1,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.bytesRead.length(),buffer.offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),buffer.offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.min(current.inputStream.remaining(),off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java428inttoRead=Math.max(current.bytesRead.remaining(),buffer.remaining());
