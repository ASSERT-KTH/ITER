projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);IntegertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);l=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>max){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);inttoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=csize-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-width);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);inttoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);l=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);inttoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);toRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);IntegertoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);toRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);inttoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);longtoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);inttoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);toRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);l=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);intcsize=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead+=csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,csize,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead>csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead>csize){toRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:arraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:intarraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:current.bytesReaddiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);bytetoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead>=null){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=0){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);byte[]csize=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);TokenBuffertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);TokenBuffertoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);TokenBuffertoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);TokenBuffertoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,buffer,toRead,csize);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,length);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead,length);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,buffer,toRead,length);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,toRead,length);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,buffer,toRead,csize);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*CRC32_SIZE);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead+cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intcsize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytecsize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytecsize=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytecsize=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length<=0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length==0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);ToRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);ToRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);ToRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431readStored(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize,toRead)){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead<=0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead<=size)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(length-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead<0)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead-current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead-current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<toRead;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize)){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,toRead)){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<size;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<length;++l){buf.setLength(1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<current.bytesRead;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLength-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize+1);(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*offset-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLen-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-size)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-csize)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)==0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(length-current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)!=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(toRead<length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead;if(toRead<length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(current.bytesRead<length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead;if(current.bytesRead<length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);bytesRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);bytesRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);byte[]csize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]current.bytesRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]toRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);ToRead=(int)(current.bytesRead*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*max);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}else{buf.get(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize*current.bytesRead);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}else{buf.get(buffer,
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.max+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.max,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(buf.length*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize-current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=max;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*offset);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(toRead>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead!=null){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>0){inttoRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>toRead){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>length){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>csize){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>size){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize;if(current.bytesRead!=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);csize=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);csize=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-size);(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(buf.length*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(toRead>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(byte)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(byte)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead*1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize<=current.bytesRead){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(toRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-buffer.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-this.csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize,toRead)){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.setLength(buffer.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<size;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<current.bytesRead;++i){buf.setLength(buf.remaining()
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(Token)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);current.bytesRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);current.bytesRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLength);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLast);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431java.lang.AssertionError:intarraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431java.lang.AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:arraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:arraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);if(toRead>0){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead+1);if(toRead>0){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);if(toRead<0){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<toRead;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize,toRead)){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<size;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<length;++l){buf.setLength(buffer.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<current.bytesRead;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead<=0){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(toRead<=0){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead<=0){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(toRead<=0){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);l=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);intcsize=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);TokenBuffercsize=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);l=(int)current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead/size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesLength/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead/csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Tokenl=(Token)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(Token)(current.bytesRead*csize-current.bytesRead);toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-toRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read(toRead,csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431readFully(current.bytesRead,csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,csize,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,buffer,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,csize,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*max+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.max+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length*current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length*current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(csize,offset,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);toRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead*length);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*length);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(byte)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-size)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-csize)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(length-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(buffer.length-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(offset-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<cmdEnd){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length);if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>max){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){inttoRead=(int)(current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(toRead>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(byte)(current.bytesRead+1);if(csize>0){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(toRead<0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Read=(byte)(current.bytesRead+1);if(csize>0){inttoRead=(byte)(current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>toRead){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>length){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>csize){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>size){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+1);l=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);l=(byte)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+1);l=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+1);l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);l=(byte)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(byte)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:differed=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:differed=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431java.lang.AssertionError:current.bytesReaddiffered=(java.lang.Integer)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431AssertionError:current.bytesReaddiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:differed=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-this.current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);if(toRead>0){inttoRead=(byte)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead-csize);if(toRead>0){inttoRead=(float)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead-csize);if(csize>0){inttoRead=(float)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);if(csize>0){inttoRead=(byte)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);if(toRead<0){inttoRead=(byte)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<size){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf.length,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(toRead<=length){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead*current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);l=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);TokenBuffertoRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);current.bytesRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);if(csize>0){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);l=(int)current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead);(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)(csize*current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=toRead-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize-this.current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize/current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=size-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);read=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize<current.bytesRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-cmd);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(toRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=0;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead,length);current.bytesRead=0;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,length);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize==0){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize);current.bytesRead=0;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead=0;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(toRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize*current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431longtoRead=(long)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);current.bytesRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);current.bytesRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);current.bytesRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=toRead-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=csize-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=size-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=length-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=buffer.length-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=offset-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<toRead;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize,toRead)){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<size;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,toRead)){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(intl=0;l<current.bytesRead;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length<=0){toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){inttoRead=(int)(current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){inttoRead=(int)(current.bytesRead+1);}else{buf.get(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read(toRead,csize-current.bytesRead+1);inttoRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.off+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.off+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-this.off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,offset,length)){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current.bytesRead,csize,toRead)){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<toRead;++i){buf.setLength(buffer.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:arraylengthsdiffered=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431AssertionError:arraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:arraylengthsdiffered=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431java.lang.AssertionError:arraylengthsdiffered=(java.lang.Integer)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431AssertionError:arraylengthsdiffered=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/BYTE_EXP_32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*BYTE_EXP_32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*BYTE_EXP_32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32+csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431longtoRead=(long)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431longtoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<size){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-size)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-csize)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(length-current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<size){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<length){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);l=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);l=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);l=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);l=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.bytesRead,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf.length,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,toRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);if(l<length){toRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(l<length){toRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);if(l>0){for(intcsize=0;csize<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(l>0){for(intcsize=0;csize<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,buffer,toRead,csize);current.bytesRead+=csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize);current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,csize);current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,csize);current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);IntegertoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);IntegertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);l=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);l=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)current.bytesRead*csize;if(toRead<=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)csize;if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);IntegertoRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);if(current.bytesRead!=null){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);if(current.bytesRead==null){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<csize){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<length){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<csize){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);current.l=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,csize,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,csize,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current,offset,buffer,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(currToRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:differed=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:current.bytesReaddiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:current.bytesReaddiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:differed=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:current.bytesReaddiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:differed=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)(csize-current.bytesRead+1);}else{AssertionError:differed=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead-csize;toRead=(TokenBuffer)current.bytesRead-csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)current.bytesRead-csize;toRead=(int)current.bytesRead-csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);toRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)current.bytesRead-csize;toRead=(int)current.bytesRead-csize;}else{buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-1+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_LEN-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,csize);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,buffer,toRead,length);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(csize>0){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(toRead>0){buf.get(buffer,offset,current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead+1;if(csize>0){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead+1;if(csize>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(toRead>0){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize/1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,csize);current.bytesRead=0;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead+1);if(csize>toRead){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead+1;if(csize>toRead){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);bytesRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead;bytesRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead-current.bytesRead;bytesRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*toRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-toRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*CRC32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*cmd-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_LEN);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)(current.bytesRead*csize-current.bytesRead);toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,length);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+3);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+4);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize);if(toRead>0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(toRead>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize);if(toRead>0){inttoRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(toRead<0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(current.bytesRead-csize);if(toRead>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+1);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,length);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+2);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-size)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(int)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)current.bytesRead-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead+=csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead+=csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;inttoRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;inttoRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize+1;inttoRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);inttoRead=(byte)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.length,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead<=0){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead<=0){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);byte[]csize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)current.bytesRead;byte[]csize=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*offset);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:arraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:arraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize+1;if(toRead>0){inttoRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead+1;if(toRead>0){inttoRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(Integer)current.bytesRead+1;if(csize>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead+1;if(toRead>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(toRead>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(Integer)current.bytesRead+1;if(toRead<0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*CRC32);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+3);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+5);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)(csize-current.bytesRead);(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)csize-current.bytesRead;(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-csize);(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:intarraylengthsdiffered=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>toRead){toRead=(int)(current.bytesRead+1);}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;}else{AssertionError:intarraylengthsdiffered=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)(current.bytesRead+1);}else{AssertionError:intarraylengthsdiffered=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize/size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*offset/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<size;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead<=0){toRead=(int)current.bytesRead*csize;}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)csize-current.bytesRead;toRead=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(byte)csize-current.bytesRead;toRead=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)(csize-current.bytesRead);toRead=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)csize-current.bytesRead;toRead=(byte)(current.bytesRead);}else{buf.put(buf,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);TokenBuffertoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(current.bytesRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead;if(current.bytesRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)current.bytesRead;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesLen*csize-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_LEN+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead*csize;if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+3);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+1L);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+4);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+16);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=0){toRead=(int)(current.bytesRead*csize);inttoRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=null){toRead=(int)(current.bytesRead*csize);inttoRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=0){toRead=(int)(current.bytesRead*csize);inttoRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=null){toRead=(int)(current.bytesRead*csize);inttoRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=0){toRead=(int)(current.bytesRead*csize);inttoRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-this.current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(l*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-this.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>current.bytesRead){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize<current.bytesRead){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>=current.bytesRead){buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)current.bytesRead*length;if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(toRead>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(toRead>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*c
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize/current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-current.bytesRead);(int)(current.bytesRead*size-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.bytesRead,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(current.bytesRead<=0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead;if(toRead<=0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead<=0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){toRead=(int)current.bytesRead;if(toRead<=0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize+1;toRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize+1;toRead=(int)current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);toRead=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);IntegertoRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);IntegertoRead=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize+1);IntegertoRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;IntegertoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);IntegertoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead;toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead);toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead;toRead=(int)current.bytesRead;}else{buf.append(csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead;toRead=(toReadBuffer)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==csize){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead*csize;if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead*csize;if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead*csize;if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize+1;(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead+1;(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)current.bytesRead-current.bytesRead;l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead;l=(toReadBuffer)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)current.bytesRead(length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<size;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<toRead;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);current.l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);current.l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>bytesRead){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);}else{
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<length;++l){buf.setLength(1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(intl=0;l<length;++l){buf.setLength(1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431luate(current.bytesRead,offset,length)){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)csize-current.bytesRead;intcsize=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(byte)csize-current.bytesRead;intcsize=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)(csize-current.bytesRead);intcsize=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);intcsize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(byte)(csize-current.bytesRead);intcsize=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_LEN-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=csize){toRead=(int)current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*cmpEnd);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(csize>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead+1;if(csize>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(toRead>0){buf.put(buffer,offset,current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<current.bytesRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431luate(current.bytesRead,offset,length)){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead;if(current.bytesRead!=null){toRead=(byte)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);if(current.bytesRead!=null){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead-current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)csize-current.bytesRead;inttoRead=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)(csize-current.bytesRead);inttoRead=(byte)(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*buffer.length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead==0){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)current.bytesRead*csize;if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead*csize;if(current.bytesRead==csize){toRead=(byte)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);l=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);l=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize);l=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);l=(byte)(toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)current.bytesRead+1;if(csize>0){for(intl=0;l<length;++l){toRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead+1;if(csize>0){for(intl=0;l<length;++l){toRead=(int)current.bytesRead
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead+1;if(csize>0){for(intl=0;l<length;++l){toRead=(int)current.bytesRead
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431readLen=(byte)current.bytesRead+1;if(csize>0){for(intl=0;l<length;++l){toRead=(byte)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(l>0){for(intcsize=0;l<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(l<0){for(intcsize=0;l<length;++l){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-csize;if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)current.bytesRead-csize;if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)current.bytesRead-csize;if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)current.bytesRead-csize);if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);if(toRead>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-csize;if(toRead>0){buf.put(buffer,offset,current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)current.bytesRead-csize;if(toRead>0){buf.put(buffer,offset,current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-offset)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)current.bytesRead;inttoRead=(float)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead>=0){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);if(current.bytesRead<csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRemaining);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(byte)(csize-current.bytesRead);byte[]csize=current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(byte)(csize-current.bytesRead);byte[]csize=current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead-csize);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>current.bytesRead){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize<current.bytesRead){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>=current.bytesRead){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize<size){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431luate(current.bytesRead,csize)){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag?inf.get(csize):0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags)){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flags){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(current,hasUTF8Flag){for(intl=0;l<size;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+3);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+16);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize;inttoRead=(int)current.bytesRead-csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)(current.bytesRead-csize);inttoRead=(int)current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize;inttoRead=(int)current.bytesRead-csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=lsize-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);read=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize;if(toRead>0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize;if(toRead>0){toRead=(int)current.bytesRead
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)(current.bytesRead-csize);if(toRead>csize){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize);if(toRead>0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>toRead){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>max){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>current.bytesRead){toRead=(int)current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);Token=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);IntegertoRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);if(csize>max){toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)current.bytesRead;}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.csize>0){toRead=(int)current.bytesRead;if(current.bytesRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<length){toRead=(int)current.bytesRead;}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,offset+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);if(l<length){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(current.bytesRead+1
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead<=0));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize*csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);IntegertoRead=(int)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);IntegertoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-this.csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(toRead>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){toRead=(int)current.bytesRead*
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize);if(toRead>0){for(inti=0;i<csize;++i){toRead=(int)current.bytesRead*
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)current.bytesRead-csize);if(csize>0){inttoRead=(int)current.bytesRead-csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)current.bytesRead-csize);if(csize>0){inttoRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize);if(toRead>0){buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Tokenl=(Token)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);current.bytesRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*SHORT_BUF);toRead=(int)(current.bytesRead*SHORT_BUF);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){toRead=(int)current.bytesRead-current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize);current.bytesRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Tokenl=(Token)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,current.size,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(csize,buffer,offset,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.get(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length<=0){toRead=(int)csize-current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){toRead=(int)csize-current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length==0){toRead=(int)csize-current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize;if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=lfh-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*size+1);l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intl=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize;if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize;if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431AssertionError:intarraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){toRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431byte[]csize=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<csize){break;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<size){break;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-current.bytesRead);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead-current.bytesRead);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){current.bytesRead=(byte)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(i>0){for(inti=0;i<csize;++i){current.bytesRead=(int)current.byte
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buf,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize/size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(len>0){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read(){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intcsize=0;for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<size;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<csize;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<toRead;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intcsize=(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Integercsize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==csize){toRead=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=length-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,0,toRead);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead);ToRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<current.bytesRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<length;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.setLength(current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining()+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining()+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}else{read=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);if(csize>0){toRead=(int)current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;if(csize>current.bytesRead){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);if(csize>toRead){inttoRead=(byte)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read=(byte)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(byte)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(toRead-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(current.bytesRead-toRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize);TokenBuffertoRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize);TokenBuffertoRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;if(toRead>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);if(toRead>0){inttoRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)(csize-current.bytesRead+1);if(toRead>0){toRead=(int)(current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);if(csize>0){toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);current.bytesRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);read=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);if(csize>0){toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);}else{buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){toRead=(int)(current.bytesRead-current.bytesRead);toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead;toRead=(int)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead-current.bytesRead;toRead=(int)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize<=0){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(toRead<=csize){toRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>csize){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<length){toRead=(int)csize;if(current.bytesRead>csize){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)csize;if(current.bytesRead>csize){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize);if(current.bytesRead>0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize;if(current.bytesRead>0){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>toRead){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431floattoRead=(float)(current.bytesRead-csize);if(toRead<0){inttoRead=(float)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intcsize=0;for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<csize;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<size;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(length>0){for(intl=0;l<toRead;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*cmsize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.size/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=csize){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431bytetoRead=(byte)(current.bytesRead-current.bytesRead);(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-current.bytesRead);(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);if(toRead>=csize){toRead=(int)current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)csize-current.bytesRead+1;if(csize>0){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead!=null){toRead=(int)csize-current.bytesRead+1;if(csize>0){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<length){toRead=(int)csize-current.bytesRead+1;if(csize>0){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){toRead=(int)csize-current.bytesRead+1;if(csize>0){inttoRead=(int)csize-current.bytesRead+1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.put(buffer,offset
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431l=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431L=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-current.bytesRead;if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead-current.bytesRead);if(toRead<=length){toRead=(int)current.bytesRead;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(this.off-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431intl=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431Integerl=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==csize){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}else{buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);}else{buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(byte)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead*csize;if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431TokenBuffertoRead=(TokenBuffer)current.bytesRead*csize;if(toRead==current.bytesRead){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead>0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<current.bytesRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead>0){for(inti=0;i<current.bytesRead;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead);l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,buffer,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,offset,buffer.length,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2/1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==csize){toRead=(int)(current.bytesRead-csize);TokenBuffertoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);TokenBuffertoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*CRC32_LEN-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(this.max-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<=0){toRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,buffer,offset,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(csize,buffer,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(current.bytesRead,buffer,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize/current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize-current.bytesRead);if(toRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize*current.bytesRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead<=0){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead==0){toRead=(int)(current.bytesRead*csize-current.bytesRead);if(toRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-this.current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*csize+1);(int)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead*current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(current.bytesRead-csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(toRead<csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=this.size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431java.lang.AssertionError:current.bytesReaddiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead<length){toRead=(int)current.bytesRead;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead-current.bytesRead*1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1));
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==csize){toRead=(int)current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize;}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length*2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.maximumSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*this.current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<size;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buffer.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<current.bytesRead;++i){buf.setLength(buf.remaining()+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431IntegertoRead=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);}else{buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);}else{buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);}else{buf.put(buf,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431read(){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431while(current.bytesRead<length){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(csize,current.bytesRead,toRead){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(csize,current.bytesRead,toRead){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431while(current.bytesRead<length){for(intl=0;l<size;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431while(current.bytesRead<length){for(intl=0;l<length;++l){buffer.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431allowStoredEntriesWithDataDescriptor(csize,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead+=length;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,toRead,csize);current.bytesRead+=length;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buffer,offset,current.bytesRead,toRead,csize);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=buf.remaining();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,toRead,length);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,current.bytesRead,0,toRead);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+1));
