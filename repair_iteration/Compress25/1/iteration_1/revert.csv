projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);inttoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);toRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);IntegertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);l=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);csize=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);ToRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>max){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);toRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);inttoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);ToRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);l=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead=csize-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<=0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){System.arraycopy(buf,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>max){System.arraycopy(buffer,offset,current.bytesRead,0,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431||(csize-current.bytesRead)<toRead){break;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-width);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);toRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);inttoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);ToRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead!=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead==csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);l=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);read=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize/current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);timeout
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead/csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);inttoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);toRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);l=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);IntegertoRead=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>current.bytesRead){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*size+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(toRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);toRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);inttoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);ToRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);l=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);longtoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);read=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);inttoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);toRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);l=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);intcsize=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);byte[]csize=current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead+=csize;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead=buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(current.bytesRead==null){System.arraycopy(buf,offset,buffer,toRead,csize);current.bytesRead=0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,current.bytesRead,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431System.arraycopy(buf,offset,csize,current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead>csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead<csize){toRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(current.bytesRead>csize){toRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead>=csize){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*BYTE_EXP_32);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:arraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:intarraylengthsdiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);java.lang.AssertionError:current.bytesReaddiffered=(int)(csize-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*2+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);bytetoRead=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead>=null){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=0){toRead=(int)(current.bytesRead-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(current.bytesRead-cmSize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.max);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){for(intl=0;l<length;++l){toRead=(int)(csize-current.bytesRead+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize-current.bytesRead+1);if(csize>0){inttoRead=(int)(csize-current.bytesRead+1);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(byte)(csize-current.bytesRead);byte[]csize=(byte)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.setLength(buf.length());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.remaining();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<csize;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(inti=0;i<toRead;++i){buf.setLength(buf.remaining());}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431current.bytesRead+=csize-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);TokenBuffertoRead=(int)(current.bytesRead-csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize);if(csize>0){inttoRead=(int)(current.bytesRead-csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length-current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431inttoRead=(int)(csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);TokenBuffertoRead=(int)(current.bytesRead*csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(csize>0){for(inti=0;i<csize;++i){current.bytesRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.put(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize);if(current.bytesRead<=csize){toRead=(int)(current.bytesRead*csize);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);TokenBuffertoRead=(int)(current.bytesRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead*csize-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead*csize-current.bytesRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-csize-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);TokenBuffertoRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);if(current.bytesRead<=length){toRead=(int)(current.bytesRead-current.bytesRead);}else{buf.get(buffer,offset,toRead);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-current.bytesRead);bytesRead=(int)(current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(csize*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(toRead*csize-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(length*current.bytesRead-current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431if(csize>0){for(intl=0;l<length;++l){buf.setLength(0);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java431toRead=(int)(current.bytesRead-this.off);
