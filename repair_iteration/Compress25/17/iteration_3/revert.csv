projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isDirectory()||!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset<buffer.length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset<buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||offset+length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>0&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset>buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>=buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||length>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset==buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset<buffer.length||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isEnabled(current.entry)||!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=zipEncoding.decodeBase64Entry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length,current.read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||this.allowStoredDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getLength()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getLength()-offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getLength()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getHeaderLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getLength()+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current==null||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entryinstanceofUnsupportedZipFeatureException){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasUTF8Flag()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.GETPROP){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)||isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.UNSHRINKING||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&buffer.length>offset||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>=buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||buffer.length>offset||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>buffer.length||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&current.entry.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry>=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry==null||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length()-offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length()*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length-offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=zipEncoding.decode(buffer,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.decode(buffer,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset+length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset+length,current.length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=crc.decode(buffer,offset+length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset+1,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptorFor(this.dataDescriptor)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptorFor(this.data)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()||this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()&&isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(),offset+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getFileInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(),offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,length)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&!allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length-offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length+offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)&&hasUTF){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset==buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.isLocal()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>0&&!allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor!=current.entry){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()>=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,buffer)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=zipEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=crc.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length,current.entry.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entryEncoding.getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=crc.getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length,current.entry.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=zipEncoding.getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)||isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry!=hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry==hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUseUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DES
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESC
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor{null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)||!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)||!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,length)&&!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=zipEncoding.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=crc.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.entry.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length,current.read);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length,current.size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.allowStoredEntriesWithDataDescriptorFor(offset)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||!this.allowStoredEntriesWithDataDescriptor.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<buffer.length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length&&length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.getInputStream(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.currentEntry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflatercurrent=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.getInputStream(),offset+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.USE_DATA_DES
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.getMethod()==ZipMethod.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length+1)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length-1)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isDirectory()||!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isDirectory()&&!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()!=ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entryEncoding.deflateInflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=zipEncoding.deflateInflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length,current.entry.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=crc.deflateInflate(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasUTF8Flag&&current.entry!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length+offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DATA_DESCRIPTOR,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DATA_DESCRIPTOR,current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DATA_DESCRIPTOR,current.encoding)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.getMethod().hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod().hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputFile();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getFileInput();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile(),offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile().reset();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile(),offset+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile(),offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entryEncoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.encoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.in.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entryEncoding.getOutputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream(offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream(in);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=null&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>current.entry.length||offset>this.allowStoredEntriesWithDataDescriptor||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>buffer.length||offset>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>this.allowStoredEntriesWithDataDescriptor||offset>current.entry.length||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset<buffer.length||offset>this.allowStoredEntriesWithDataDescriptor||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry!=this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry!=allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor==null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor==null||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor==null||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length-offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isDirectory()||!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag||supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length,CFH_LEN);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset==buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.fileNameLen)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()>=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag||!allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry!=null&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry,buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputFile(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputFile(current.entry,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.read(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.read(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.read(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.readFully(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.entry.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=zipEncoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.entryEncoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.entry;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.encoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset>buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset<buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<length||buffer.length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>=buffer.length||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHR
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()!=ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHRING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entryinstanceofUnsupportedZipFeatureException){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||offset<allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset<allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.UNSHRINKING||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag||!allowStoredEntriesFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag||!hasDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==UnsupportedZipFeature.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipEncoding.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.sentry!=null&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.USE_FIELD_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.deflateInflate(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&!hasDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=current.inputStream.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,buffer)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)&&hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>current.entry.length||length>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>buffer.length||offset>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>current.entry.length||offset>this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(offset>this.allowStoredEntriesWithDataDescriptor||length>current.entry.length||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isDirectory()||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null&&!allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(canStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()||(offset>buffer.length-offset)&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=zipEncoding.decode(buffer,offset+length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=ZipEncoding.decode(current.entry,offset+length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)&&offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||!current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=ZipEncoding.decodeBase64Entry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.allowStoredEntriesWithDataDescriptor||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length)&&hasUTF){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,hasUTF)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer+length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getOutputFile(current.entry,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||isUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.zipEncoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.getEntryEncoding();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()==UnsupportedZipFeature.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(isEnabled(Feature.DATA_DESCRIPTOR)&&!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry!=this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>0&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<0||!allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.allowStoredEntriesWithDataDescriptor&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getChars(offset,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getChars(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getEnd();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=null||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.hasMethod()||!this.allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>buffer.length||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>=buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>buffer.length||length>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=ZipEncoding.decode(current.entry,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||buffer.length>offset||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&buffer.length>0||length<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||!current.entry.hasMoreElements()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasDataDescriptor||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasDataDescriptor&&hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry!=null&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,hasUTF8Flag)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.getEntry();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry!=null&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry!=null&&!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&length>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DESCRIP
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.DATA_DES
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptorFor(this.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getFullInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(in);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getInputStream(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=getInputStream(in);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=getInputStream(offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=getInputStream(in,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputFile().length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.getOutputPath();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&buffer.length>length||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF||!allowStoredEntriesWithDataDescriptor||current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||!hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!hasUTF8Flag&&current.entry.getMethod()==UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length&&length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset==buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor&&!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.length()+offset;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.getOutputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(buffer,offset,length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length-off);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasDataDescriptor||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length-offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||isUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=null||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)&&!hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)||hasUTF){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF||!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!isUTF8()&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)||this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptorFor(current.entry)||this.allowStoredEntriesWithDataDescriptor{
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&off<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&!current.entry.supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(hasDataDescriptor||isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length>current.entry.length||offset>this.allowStoredEntriesWithDataDescriptor||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(length<this.allowStoredEntriesWithDataDescriptor||offset>buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getCode()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.entry.createInflater(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.createInflater(buffer,offset,length,current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!current.entry.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry>=this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset,length,current.fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||off<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.entry==null||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&off<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||offset>buffer.length||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(current.entry,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=ZipEncoding.encode(current.entry,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=this.entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)&&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)/&current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)&&isEnabled(Feature.DEFAULT_DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasChildren()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.entry.hasNext()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&!current.hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<length||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor&&current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&offset>current.entry.length||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||length<0||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||hasUTF8Flag&&current.entry.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.size)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||current.entry.getMethod()==ZipMethod.UNSHREEN){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&hasUTF){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry,hasUTF)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor&&isEnabled(current.entry)||isEnabled(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.getInputStream(current.entry,buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=this.entryEncoding.getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=getInputStream(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptorFor(current.entry)||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decodeBase64Entry(buffer,offset,length,current.fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset)||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry,offset)||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.hasDataDescriptor()&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasDataDescriptor||!allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.GETPROP){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DEFAULT){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=this.entryEncoding.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=entryEncoding.encode(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredDescriptorFor(current.entry)&&current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor,current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset)&&length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflaterinf=current.inputStream.readFully(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!current.entry.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.allowStoredEntriesWithDataDescriptor||hasUTF8Flag||!supportsDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374intlength=current.entry.getHeaderSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&current.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&current.isEnabled(Feature.DATA_DESCRIPTOR)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&current.enabled){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntriesWithDataDescriptor||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||allowStoredEntriesWithDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflatercurrent=getOutputFile(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374Inflatercurrent=getInputFile(current.entry);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=this.allowStoredEntriesWithDataDescriptor||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR||hasUTF8Flag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8Flag&&current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasUTF8Flag&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||hasUTF8Flag&&current.entry.hasDataDescriptor()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=entryEncoding.decode(buffer,offset+length,current.offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor&&current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptor||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,length)&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,buffer)&&offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.hasMethod()||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)&&buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null||!this.allowStoredEntriesWithDataDescriptor||!current.entry.isDirectory()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptor(current.entry)&&hasUTF8){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||buffer.length<0||current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||offset<buffer.length||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||buffer.length<0||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||buffer.length<0||current.entry.getMethod()==ZipMethod.USE_DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&hasUTF8Flag&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry)&&off<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor||offset<length&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||offset<buffer.length||off>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptor(current.entry)||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor==current.entry){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||!hasNextFlag){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374InputStreaminf=current.entry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry)||current.entry.getCode()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.entry.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,offset+length,current.size)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&current.entry.getMethod()==ZipMethod.DEFLATED){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(this.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()!=ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)&&current.entry.getMethod()==ZipMethod.DATA_DESCRIPTOR){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset,length)||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry.allowStoredEntriesWithDataDescriptor||current.entry.getMethod()==ZipMethod.UNSHRINKING){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!allowStoredEntriesWithDataDescriptorFor(current.entry,offset)||hasUTF8Flag&&buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!allowStoredEntriesWithDataDescriptor(current.entry)||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry==null||!this.allowStoredEntriesWithDataDescriptorFor(current.entry,length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!current.entry.allowStoredEntries()||!current.entry.hasMethod()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374current.entry=current.zipEncoding.getValue();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(current.entry!=null&&!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java374if(!this.allowStoredEntriesWithDataDescriptorFor(current.entry,buffer.length)||offset<length){
