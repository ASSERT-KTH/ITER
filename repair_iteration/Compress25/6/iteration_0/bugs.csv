bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] return -1; [FE] arrays first differed [CONTEXT] if (current.hasDataDescriptor) { if (lastStoredEntry == null) { readStoredEntry(); } return lastStoredEntry.read(buffer, offset, length); } long csize = current.entry.getSize(); if (current.bytesRead >= csize) { [BUGGY] return -1; [BUGGY] } if (buf.position() >= buf.limit()) { buf.position(0); int l = in.read(buf.array()); if (l == -1) { return -1; } buf.limit(l);  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] readStored [RETURN_TYPE] int  byte[] buffer int offset int length [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream in inputStream ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize max pos size time byte[] CFH DD LFH LFH_BUF SHORT_BUF SKIP_BUF TWO_DWORD_BUF WORD_BUF buffer extraData fileName lfh missedLfhBytes CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	413	413	1	replace	
