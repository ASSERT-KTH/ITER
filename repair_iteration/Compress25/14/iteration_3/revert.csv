projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.defaultRead();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length!=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length!=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364init();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<2){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.close();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset+length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset++;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset-length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset;++i){buffer[i]=newByteArrayInputStream(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||length<=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<off){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length==current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.sentry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,0,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,buffer.length-length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||offset<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||offset<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||offset<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=off){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364for(inti=0,length=buffer.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364while(offset<length){for(inti=0,length=buffer.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=current.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset+length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<offset;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364for(inti=0,length=current.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset<0||buffer.length-offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length!=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length>=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||offset!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||length!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||offset<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=2){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<1||length<2){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<length||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length[Delete]0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.skipChildren();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.write(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.defaultRead(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.flush();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf==null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf==null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.entryEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<length||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<0||buffer.length-offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=off+length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset!=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||length!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<0||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<length||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<=0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length<0||offset>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,this.fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length<0||offset>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}else{System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}else{System.arraycopy(buffer,offset,buffer,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}else{System.arraycopy(buffer,offset,buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}else{thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){init();}else{System.arraycopy(buffer,offset,buffer,0,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length!=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length!=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length!=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getInputStream(),buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=this.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<=0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<=0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length,inputStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<1||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset+length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length==offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||offset<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>off+length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==null||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length<0||buffer.length<0||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<1||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry.length<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<1||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.defaultRead(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current!=null||buffer==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length,0);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length,inputStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||offset<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||offset<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||offset<0||buffer.length>offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length+length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<0||length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||offset<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==null||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<buffer.length;++i){buffer[i]=in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<offset;++i){buffer[i]=in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<length;++i){buffer[i]=in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,fileNameLen);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==null||buffer.length!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==0||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==0||offset==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==0||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset==length||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length<=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry.length<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream(buffer,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getOutputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getReadInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length==offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==off){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf==null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.entryEncoding.encode(buffer,offset,length);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,buffer.length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,buffer.length);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.in.read(buffer,offset,length);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,current.length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length-1);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>=current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||buffer.length!=offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||offset!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||buffer.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<=offset+length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<length||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,buffer.length);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,current.length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.entryEncoding.encode(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,fileNameLen);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||offset<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset<0||offset<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(offset==0||offset<0||length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<inputStream.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<len){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length<offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry.length<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length[Delete]0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset+length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==0||offset==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset!=0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||offset!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364init(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.readInflater(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=createInflater(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=newInflater(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=createInflater(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||offset!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length+1);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length-1);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,buffer.length=offset;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+1);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,buffer=offset;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,bufferLength=buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||buffer.length>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=readInputStream(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=zipEncoding.encode(buffer,offset,length);if(inf==null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<=0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,ze);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=readInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length+length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length>end){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry>=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset,length-2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,inputStream.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,len=buffer.length;i<len;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,size=buffer.length;i<size;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,length=buffer.length;i<length;++i){current.setEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<2||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||current.entry.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.length<0||offset+length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=inputStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<offset+length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||offset<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset+length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null||buffer.length!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=read(buffer,offset,length-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length-1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length+1);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf!=null){return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=getInputStream(in);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||offset!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.close(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364in.skipChild(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||current.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset>=0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||current.entry.length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length-buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=openInputStream(buffer,offset,length,inputStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length==offset){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length==0||buffer.length>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||current.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,0,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=newBoundedInputStream(buffer,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry==null||buffer.length==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.entry==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==current.entry){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,this.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.entryEncoding.encode(buffer,offset,length);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364InputStreamin=getOutputStream().readInt();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length==0||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length==0||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer.length==0||offset!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer!=null||current.entry<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read(buffer,offset,length,0);if(inf!=null){thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{System.arraycopy(buffer,offset,buffer,0,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{System.arraycopy(buffer,offset,buffer,offset,length);return-1;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{System.arraycopy(buffer,offset,buffer,offset,length);return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{System.arraycopy(buffer,offset,buffer,off,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(in!=null){in.close();}else{thrownewIOException("");}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||current.entry<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.encode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.readEntry(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.readUTF();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.decode(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364this.entryEncoding=entryEncoding.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.sentry==null||buffer.length<0||length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||length<0||buffer.length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=readInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length<0||buffer.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length<=0){for(inti=0,length=buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364for(inti=0,length=buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0,buffer.length;i<length;++i){buffer[i]=newByteArrayInputStream(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<2||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered==null||length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||offset<0||buffer.length+length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<0||buffer.length>current.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<end){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.in.read();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current.entry!=null||buffer.length<0||offset>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(length>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset+length>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||current.length>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||length==buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffered!=null||buffer.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||off<0||buffer.length<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0||offset>>current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=entryEncoding.encode(buffer,offset,length,zipEncoding);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364Inflaterinf=this.entryEncoding.encode(buffer,offset,length);if(inf!=null){return0;}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(current==null||buffer.entry!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364if(buffer==null||buffer.length<0,length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364while(length>0){for(inti=0,length=buffer.length;i<length;++i){current.getEntry(i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java364while(current.entrySet().size()>0){for(inti=0,length=buffer.length;i<length;++i){current.getEntry(i);}
