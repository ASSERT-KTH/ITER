bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
37	[BUG] [BUGGY] if (read >= 0) { [FE] arrays first differed [CONTEXT] } else if (current.entry.getMethod() == ZipArchiveOutputStream.DEFLATED) { read = readDeflated(buffer, offset, length); } else if (current.entry.getMethod() == ZipMethod.UNSHRINKING.getCode() || current.entry.getMethod() == ZipMethod.IMPLODING.getCode()) { read = current.in.read(buffer, offset, length); } else { throw new UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()), current.entry); } [BUGGY] if (read >= 0) { [BUGGY] current.crc.update(buffer, offset, read); } return read; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] read [RETURN_TYPE] int  byte[] buffer int offset int length [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream in inputStream ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen length off offset read versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream max pos size time byte[] CFH DD LFH LFH_BUF SHORT_BUF SKIP_BUF TWO_DWORD_BUF WORD_BUF buffer extraData fileName lfh missedLfhBytes CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.5	392	392	1	replace	
