projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392read=readDeflated(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);read=inf.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==null){if(current.crc!=null){read=current.in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392InputStreamin=current.in.read(buffer,offset,length);read=in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392InputStreamin=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||read.length<2){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||read<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>current.crc.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read==buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read<buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read!=buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read==current.crc.size()){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read==current.crc.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read.length==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read.length<2){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read.charAt(read.length-1)!='n'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read.charAt(read.length-1)!='/'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||read.equals(current.entry.getMethod())){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||read.equals(current.crc)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||read.charAt(read.length-1)!='n'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||read.charAt(read.length-1)!='/'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==null){if(current.in!=null){read=readDeflated(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==null){if(current.entry!=null){read=readDeflated(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392in.close();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==null){if(current.in!=null){read=in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>Buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||offset>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||length>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>buffer.length||current.crc!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>buffer.length||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>buffer.length||buffer.charAt(offset)!='-'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read>buffer.length||buffer.charAt(offset)>='-'){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||isEnabled(ZipArchiveOutputStream.DEFLATED)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read>0||length>current.crc.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||isEnabled(ZipArchiveOutputStream.DEFLATED)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read<0||read.equals(current.entry.getMethod())){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||isEnabled(ZipArchiveOutputStream.DEFLATED)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||read.equals(current.entry.getMethod())){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read==0||isEnabled(ZipArchiveOutputStream.DEFAULT_CRC)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0&&current.crc!=null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0||isEnabled(ZipArchiveOutputStream.DEFLATED)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0&&isEnabled(ZipArchiveOutputStream.DEFLATED)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392if(read!=0&&read.length>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()));}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current.entry
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod())
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java392Inflaterinf=current.in.read(buffer,offset,length);if(inf!=null){thrownewUnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),current
