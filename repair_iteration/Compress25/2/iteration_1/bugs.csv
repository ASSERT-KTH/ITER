bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  type  [FE]    arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  1);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length  -  1);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length,  current.in);  [CE]  illegal  start  of  type  [FE]      arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length,  current.in);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length,  current.in);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  type  [FE]        arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length  +  1);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length  +  1);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length,  current.entry);  [CE]  illegal  start  of  type  [FE]          arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length,  current.entry);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length,  current.entry);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  2);  [CE]  illegal  start  of  type  [FE]            arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  2);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length  -  2);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  read  =  readstored(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  type  [FE]              arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readstored(buffer,  offset,  length  -  1);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readstored(buffer,  offset,  length  -  1);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]    [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	  	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  4);  [CE]  illegal  start  of  type  [FE]    arrays  first  differed  [CONTEXT]  }  ZipUtil.checkRequestedFeatures(current.entry);  if  (!supportsDataDescriptorFor(current.entry))  {  throw  new  UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,  current.entry);  }  int  read;  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.STORED)  {  [BUGGY]  read  =  readStored(buffer,  offset,  length  -  4);  [BUGGY]  }  else  if  (current.entry.getMethod()  ==  ZipArchiveOutputStream.DEFLATED)  {  read  =  readDeflated(buffer,  offset,  length);  }  else  if  (current.entry.getMethod()  ==  ZipMethod.UNSHRINKING.getCode()  ||  current.entry.getMethod()  ==  ZipMethod.IMPLODING.getCode())  {  read  =  current.in.read(buffer,  offset,  length);  }  else  {  throw  new  UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),  current.entry);  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  buffer  int  offset  int  length  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  extraLen  fileNameLen  length  off  offset  read  versionMadeBy  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  size  time  byte[]  CFH  DD  LFH  LFH_BUF  SHORT_BUF  SKIP_BUF  TWO_DWORD_BUF  WORD_BUF  buffer  extraData  fileName  lfh  missedLfhBytes  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	381	381	1	replace	read  =  readStored(buffer,  offset,  length  -  4);	read  =  readStored(buffer,  offset,  length);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
