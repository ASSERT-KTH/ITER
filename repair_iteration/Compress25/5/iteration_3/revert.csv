projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead>=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(intpos=0;pos<csize;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<=0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<=0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize!=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize>=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize<lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=lastStoredEntry.bytesRead||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>lastStoredEntry.bytesRead||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0&&csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize<lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize<max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>>current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.bytesRead||csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.bytesRead||csize!=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.in.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=0||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412longcsize=current.entry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getLength()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=lastStoredEntry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||(csize<=0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||(csize<=0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<=0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<max||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<size||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.entry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.getInputStream(csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.getInputStream(),csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.currentEntry.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.hasDataDescriptor?current.getInputStream():csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.getInputStream(),csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<buffer.length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<size;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>>current.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.entry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()-csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()*csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.size()-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(intpos=0;pos<csize;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(intpos=0;pos<size;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(intpos=0;pos<csize;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(intpos=0;pos<length;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(intpos=0;pos<size;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(intpos=0;pos<max;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.bytesRead||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<max||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<size||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412longcsize=current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=lastStoredEntry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412bytecsize=current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize()-csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize()+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize()*csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=lastStoredEntry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=this.current.entry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.bytesRead||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<max||csize>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>16){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412longcsize=current.entry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.array()+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=lastStoredEntry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.arrayOffset();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Integerl=current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()-csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()+csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()*csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getLength()+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||(csize<=0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<=0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<buffer.length;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<length;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<lastStoredEntry.length;++i){buffer[i]=current.entry.getValue();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,0,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<buffer.length;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<length;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=in.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=in.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.entry.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.entry.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getSize()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412longcsize=current.entry.getSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getSize()+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=lastStoredEntry.getSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getCurrentSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize>=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize!=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize<bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0||buffer.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize==lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>lastStoredEntry.bytesRead||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<next.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=current.bytesRead||csize>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<lastStoredEntry.length;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset+i);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=0||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=lastStoredEntry.size();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=lastStoredEntry.getSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intsize=current.entry.getSize()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize>lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0){for(intpos=0;pos<csize;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(intpos=0;pos<lastStoredEntry.length;pos++){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getHeaderLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=lastStoredEntry.getLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getChars(offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getColumnLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.read(buffer,offset,length+2);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize==lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize>=lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize==lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize>bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>current.bytesRead||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.hasDataDescriptor?lastStoredEntry.getInputStream():csize;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.current.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.hasDataDescriptor?lastStoredEntry.getInputStream():buffer.getInputStream();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0){for(inti=0;i<csize;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<lastStoredEntry.length;++i){buf.reset();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<offset;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<count;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getChars(offset,offset+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.array()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.bytesRead||csize>lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<current.bytesRead||csize>32){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<lastStoredEntry.length;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<len;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(current.bytesRead==csize||(csize<0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||(csize<=0&&current.hasDataDescriptor)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0&&current.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0&&current.hasDataDescriptor){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize>bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==lastStoredEntry.bytesRead||csize>lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<next.bytesRead||csize>512){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.isEnabled(Feature.QUOTE_FILES)||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getCurrentLength();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize==current.bytesRead||csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.size();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getChar();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getCompletedSize();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=csize||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize==lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intcsize=current.entry.getChars(offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||(csize<0&&current.isEnabled(Feature.QUOTE_FILES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=in.read(buffer,offset,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=current.entry.getChars(offset,csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>current.bytesRead||csize<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,buffer.array());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=in.read(csize,buffer.position());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||(csize<=0&&current.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=current.entry.getKey();}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<lastStoredEntry.length||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Integerl=current.entry.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.inputStream;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412Inflaterinf=current.current.getInputStream(csize);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||current.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset,csize);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412intl=this.current.entry.array();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.bytesRead||csize==lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.bytesRead||csize==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.entry.bytesRead||csize!=current.size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<0||(csize<=0&&current.isEnabled(Feature.QUOTE_FIELD_NAMES)||csize>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=csize||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=0||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0||csize==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=current.entry.bytesRead||csize>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=lastStoredEntry.bytesRead||csize>=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>=lastStoredEntry.bytesRead||csize!=lastStoredEntry.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=MAX_TWO_EXP_32){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=MAX_SIZE){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize<=MAXIMUM_SIZE){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize!=current.bytesRead||csize==bytesReadFromStream){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412while(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<csize;++i){buffer[i]=inputStream.read(buffer,offset+1,length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>0){for(inti=0;i<size;++i){buffer[i]=inputStream.read(buffer,offset+length);}
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java412if(csize>512||csize<current.bytesRead){
