projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if((csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=size-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,buf.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,buf.length());
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,buffer.length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+length)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize+current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead+toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+length)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-csize)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)&&(csize-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead.length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429longcsize=(long)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429charcsize=(char)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead.length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()*2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0&&(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=current.bytesRead(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesRead(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead-size;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=max-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=length-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=size-current.bytesRead+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=size/current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=toRead-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)!=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(length-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-csize)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-csize)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize<0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead>=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead!=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0&&(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0&&(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(current.bytesRead-toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-length)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(length-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-csize)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-size)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)!=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-csize)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)>=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-size)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<csize||toRead<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||csize>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||current.bytesRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||csize>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||csize==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||csize!=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-csize)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-csize)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize<0||(toRead-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429longcsize=(long)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429charcsize=(char)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429floatcsize=(float)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(length-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-length)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buf,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buf,offset,length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(length-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-length)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)!=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<current.bytesRead||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<current.bytesRead||toRead>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<current.bytesRead||csize<current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)(current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429longcsize=(long)(current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize<0||(toRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,fromRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length,bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(length-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-length)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length-1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length-2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length-toRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=current.bytesReadFromStream.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length-4;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize*current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize*current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead*current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)Math.ceil(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesRead.ceil(length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,length,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buffer,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*toRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buffer,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buffer,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buf,offset,toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429bytecsize=(byte)current.bytesReadFromStream.get(buf,offset,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buffer,offset,size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-size)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*size)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0&&(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead!=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>max){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize<0||(toRead-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0&&(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)==bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0&&(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0||(csize-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0||(csize-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0||(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+length)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize+current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead+toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>=1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-length)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0&&(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||(csize-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)&&(csize-current.bytesRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)&&(csize-current.bytesRead)>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize<0||toRead>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream+1;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429floatcsize=(float)(current.bytesReadFromStream);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0&&(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||toRead>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesReadFromStream.length+2;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-length)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||(csize-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)&&(csize-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0&&(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-size)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-csize)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0&&(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(current.bytesRead-csize)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead.length()+length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-offset)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*csize)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429floatcsize=(float)(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0&&toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead==csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-toRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429floatcsize=(float)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead!=csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize!=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)>bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead*csize)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)>bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)Math.ceil(current.bytesRead+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429floatcsize=(float)Math.ceil(current.bytesRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)>current.size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream+length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=count(current.bytesReadFromStream,offset);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(csize>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0&&(csize-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,length+1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(csize-current.bytesRead)==1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead+current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(current.bytesRead+toRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=(Integer)current.bytesRead.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead+current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead-toRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=(Integer)current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(length-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(current.bytesRead-toRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||toRead>csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(size-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead+1)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead*current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead>0)){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(length-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(length-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buffer,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.read(buf,off,length);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)!=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)!=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)!=bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)==current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+length)>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(toRead-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)current.bytesReadFromStream.get(buf,offset,length-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead*current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)&&(csize-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>current.size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>buffer.length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||toRead<csize){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=this.current.bytesRead.length();
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=offset-current.bytesRead;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||(csize-current.bytesRead)<toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(toRead-current.bytesRead)<size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead+toRead)>=size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>256){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||toRead>CCH_LEN){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)>0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(length-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead<0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)<=toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead-toRead)<=length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)==0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(tsize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)==length){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)==size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)>size){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(length-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=(int)(current.bytesReadFromStream*size);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429Integercsize=current.bytesReadFromStream.get(buf,offset,length-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(current.bytesRead<0||(toRead-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead!=0||(toRead-current.bytesRead)<0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=this.current.bytesReadFromStream.length;
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==0||(csize-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==null){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(csize-current.bytesRead)==toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(csize-current.bytesRead)==Token.BYTE){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,length-toRead);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429intcsize=current.bytesRead(buf,offset,length-1);
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead-current.bytesRead)>=1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(toRead+current.bytesRead)<1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(current.bytesRead>0)>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||(length-current.bytesRead)>toRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<0||length>current.bytesRead){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>0||(csize-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(length-current.bytesRead)<=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead>=0||(length-current.bytesRead)>=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead==1){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(toRead-current.bytesRead)!=0){
projects/Compress25/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java429if(toRead<=0||(current.bytesRead+toRead)!=0){
