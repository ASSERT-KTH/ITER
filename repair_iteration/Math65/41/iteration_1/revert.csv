projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160jF.setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=convergenceChecker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:checker.getVectorialConvergenceCheckers()){convergenceChecker.setVectorialConvergenceChecker(convergenceChecker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:checker.getVectorialConvergenceCheckers()){convergenceChecker.setVectorialConvergenceChecker(consumeChecker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:checker.getVectorialConvergenceCheckers()){convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=checker.getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:convergenceCheckers.values()){convergenceChecker=checker;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160checker.setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconv:checker.getConvergenceCheckers()){this.convergenceChecker=conv;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconv:checker.getConvergenceCheckers()){convergenceChecker=conv;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=checker.getConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconv:checker.getVectorialConvergenceCheckers()){convergenceChecker=conv;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:convergenceCheckers.values()){this.convergenceChecker=convergenceChecker;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceCheckers=checker.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=convergenceChecker.getConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=convergenceChecker.setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv=checker.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setConvergenceChecker(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setConvergenceChecker(converenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceCheckers=convergenceChecker.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceCheckers=convergencechecker.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(varianceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){setConvergenceChecker(convergenceChecker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergenceChecker.getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergencechecker.getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=checker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv=checker.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker=conv;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=conv.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=checker.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(consumeChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(convergenceChecker,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(convergenceChecker,convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergenceChecker.values();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergenceCheckers.values();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergenceChecker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker=checker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=conv;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv=(VectorialConvergenceChecker)super.setConvergenceChecker(conv);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceChecker=='('or'['expected
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceChecker!='('or'['expected
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceChecker>>'('or'['expected
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.checker.setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160checker.setConvergenceChecker(this.convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160luate(VectorialConvergenceChecker.class,convergenceChecker.values()){this.convergenceChecker=convergenceChecker;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker=convergenceChecker.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160This.convergenceChecker=convergenceChecker.getConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker=checker.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=convergenceChecker.setVectorialConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setConvergenceChecker(convergenceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=checker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160for(VectorialConvergenceCheckerconv:checker.getConvergenceCheckers()){this.convergenceChecker=conv;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceCheckers=convergenceChecker.getConvergenceCheckers(varianceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160setConvergenceChecker(newVectorialConvergenceChecker(convergenceChecker));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker.setConvergenceChecker(newVectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker=='('or'['expected
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv:checker.getConvergenceCheckers()){convergenceChecker=conv;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=convergenceChecker.getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160checker.setConvergenceChecker(consumeChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=function.getConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160vectorialConvergenceCheckerconv=conv.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv=conv.getVectorialConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(VectorialConvergenceChecker.class);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160if(convergenceChecker!=null){for(VectorialConvergenceCheckerconvergenceChecker:checker.getVectorialConvergenceCheckers()){convergenceChecker.setVectorialConvergenceChecker(newVectorialConvergenceCheck
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160luate(VectorialConvergenceChecker.class,convergenceChecker.class)){this.convergenceChecker=convergenceChecker;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160luate(VectorialConvergenceChecker.class){this.convergenceChecker=convergenceChecker;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160convergenceChecker=convergenceChecker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=convergenceChecker.getConvergenceChecker(varianceChecker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160This.convergenceChecker=conv;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160vectorialConvergenceCheckerconv=conv.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160VectorialConvergenceCheckerconv=conv.getConvergenceCheckers();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java160this.convergenceChecker=newVectorialConvergenceChecker(convergenceChecker,jacobianEvaluations);
