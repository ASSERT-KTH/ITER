bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(++iterations  <  maxIterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(++iterations  <  maxIterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  OptimizationException  	83	15	replace
2	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  [FE]  OptimizationException  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(++iterations  <  maxIterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations  <  maxIterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  OptimizationException  	83	15	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(++iterations  >=  maxIterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(++iterations  >=  maxIterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  AssertionFailedError  	83	1	replace
4	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(++iterations  >=  maxIterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations  >=  maxIterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  AssertionFailedError  	83	1	replace
5	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(maxIterations  >  iterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  iterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  OptimizationException  	83	15	replace
6	[BUG]  [BUGGY]  if(maxIterations  >  iterations)  {  [FE]  OptimizationException  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]  if(maxIterations  >  iterations)  {  [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  iterations)  {	if  (++iterations  >  maxIterations)  {  	compilable	  [FE]  OptimizationException  	83	15	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    [BUGGY]  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	  	if  (++iterations  >  maxIterations)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
8	[BUG]  [BUGGY]    int  iterations  =  getIterationsCounter();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  getIterationsCounter();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  getIterationsCounter();		non-compiled	[CE]  cannot  find  symbol	84	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  getIterations();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	    int  iterations  =  getIterations();		compilable	  [FE]  AssertionFailedError  	84	1	add
10	[BUG]  [BUGGY]    int  iterations  =  getIterations();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  getIterations();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  getIterations();		compilable	  [FE]  AssertionFailedError  	84	1	add
11	[BUG]  [BUGGY]    Iterator  <  Number>  iterations  =  function.iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    Iterator  <  Number>  iterations  =  function.iterator();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    Iterator  <  Number>  iterations  =  function.iterator();		non-compiled	[CE]  cannot  find  symbol	84	None	add
12	[BUG]  [BUGGY]    int  iterations  =  function.getIterationsCount();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  function.getIterationsCount();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  function.getIterationsCount();		non-compiled	[CE]  cannot  find  symbol	84	None	add
13	[BUG]  [BUGGY]    int  iterations  =  function.getIterations();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  function.getIterations();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  function.getIterations();		non-compiled	[CE]  cannot  find  symbol	84	None	add
14	[BUG]  [BUGGY]    int  iterations  =  function.incrementIterationsCounter();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  function.incrementIterationsCounter();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  function.incrementIterationsCounter();		non-compiled	[CE]  cannot  find  symbol	84	None	add
15	[BUG]  [BUGGY]    int  iterations  =  getIterationsCount();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  getIterationsCount();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  getIterationsCount();		non-compiled	[CE]  cannot  find  symbol	84	None	add
16	[BUG]  [BUGGY]    int  iterations  =  function.incrementIterations();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  [BUGGY]    int  iterations  =  function.incrementIterations();  [BUGGY]  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	    int  iterations  =  function.incrementIterations();		non-compiled	[CE]  cannot  find  symbol	84	None	add
