bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  ==  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(++iterations  ==  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
2	[BUG]  [BUGGY]  if(++iterations  ==  maxIterations)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  ==  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations  ==  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
3	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations!=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(++iterations!=  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	4	15	replace
4	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  [FE]  OptimizationException  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations!=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	4	15	replace
5	[BUG]  [BUGGY]  if(maxIterations  >  iterations)  {  if(maxIterations  >  iterations)  {  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  iterations)  {  if(maxIterations  >  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    iterations)    {    if(maxIterations  >  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
6	[BUG]  [BUGGY]  if(maxIterations  >  iterations)  {  If(maxIterations  >  iterations)  {  [CE]  ';'  expected  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  iterations)  {  If(maxIterations  >  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    iterations)    {    If(maxIterations  >  iterations)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
7	[BUG]  [BUGGY]  if(maxIterations  >  iterations)  {  if(maxIterations  >  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  iterations)  {  if(maxIterations  >  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    iterations)    {    if(maxIterations  >  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
8	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.getIterationsCounter();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounter();	      int    iterations    =    function.getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
9	[BUG]  [BUGGY]  int  iterations  =  this.function.getIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  this.function.getIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.getIterations();	      int    iterations    =    function.getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
10	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    >=    maxIterations)    {    if(++iterations  >=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
11	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations!=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations!=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    >=    maxIterations)    {    if(++iterations!=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
12	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  >>  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  >>  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    >=    maxIterations)    {    if(++iterations  >>  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
13	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  >=  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    >=    maxIterations)    {    if(++iterations  ==  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
15	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  [FE]  AssertionFailedError  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
16	[BUG]  [BUGGY]  if(maxIterations  <  =  iterations)  {  [CE]  illegal  start  of  expression  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  <  =  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  iterations)  {	  if(maxIterations    >    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  if(maxIterations  >  maxIterationsExceeded)  {  [CE]  cannot  find  symbol  maxIterationsExceeded  [FE]        OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  maxIterationsExceeded)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterationsExceeded)  {	  if(maxIterations    >    iterations)    {    	non-compiled	[CE]  cannot  find  symbol  maxIterationsExceeded	6	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  maxEvaluations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  maxEvaluations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
19	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  [FE]  AssertionFailedError  [FE]          OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  maxEvaluations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxEvaluations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
20	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCount()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.getIterationsCount()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCount()  -  1;	      int    iterations    =    function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
21	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCount()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.getIterationsCount()  +  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCount()  +  1;	      int    iterations    =    function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
22	[BUG]  [BUGGY]  int  iterations  =  this.function.getIterationsCount();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  this.function.getIterationsCount();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.getIterationsCount();	      int    iterations    =    function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
23	[BUG]  [BUGGY]      int  iterations  =  getIterations();  int  iterations  =  getIterations();  [CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]      int  iterations  =  getIterations();  int  iterations  =  getIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	        int    iterations    =    getIterations();    int  iterations  =  getIterations();	  	non-compiled	[CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()	9	None	add
24	[BUG]  [BUGGY]      int  iterations  =  getIterations();  Int  iterations  =  getIterations();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]      int  iterations  =  getIterations();  Int  iterations  =  getIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	        int    iterations    =    getIterations();    Int  iterations  =  getIterations();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]      int  iterations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	        int    iterations    =    getIterations();    int  itserations  =  getIterations();	  	compilable	  [FE]  AssertionFailedError  	9	1	add
26	[BUG]  [BUGGY]      int  iterations  =  getIterations();  int  itserations  =  getIterations();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]      int  iterations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	        int    iterations    =    getIterations();    int  itserations  =  getIterations();	  	compilable	  [FE]  AssertionFailedError  	9	1	add
27	[BUG]  [BUGGY]  if(++iterations  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  =  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations  <  =  maxIterations)  {	  if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  int  iterations  =  function.numerations();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.numerations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerations();	      int    iterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
29	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  if(++iterations  <  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  if(++iterations  <  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    if(++iterations  <  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
30	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  If(++iterations  <  maxIterations)  {  [CE]  ';'  expected  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  If(++iterations  <  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    If(++iterations  <  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
31	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    if(++iterations  >=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
32	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(0);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCounter(0);  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(0);	      int    iterations    =    getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
33	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCounter()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter()  -  1;	      int    iterations    =    getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
34	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCounter()  +  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter()  +  1;	      int    iterations    =    getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
35	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterations();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  getMaxIterations();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterations();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
36	[BUG]  [BUGGY]  int  maxIterations  =  function.getMaxIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  function.getMaxIterations();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.getMaxIterations();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
37	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  cost);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  cost);  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  cost);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
38	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  maxIterations);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  Math.max(results.length,  maxIterations);  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  maxIterations);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
39	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterationsCounter();	      int    iterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
40	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCounter()  -  1;	      int    iterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.function.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  Iterator  <  Number>  iterations  =  this.function.iterator();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.function.iterator();	      Iterator    <    Number>    iterations    =    function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  functions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  Iterator  <  Number>  iterations  =  functions.iterator();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  functions.iterator();	      Iterator    <    Number>    iterations    =    function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  jF.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  Iterator  <  Number>  iterations  =  jF.iterator();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  jF.iterator();	      Iterator    <    Number>    iterations    =    function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
44	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCount()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCount()  -  1;	      int    iterations    =    getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
45	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCount()  +  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCount()  +  1;	      int    iterations    =    getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
46	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCount()  -  2;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCount()  -  2;	      int    iterations    =    getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
47	[BUG]  [BUGGY]  int  iterations  =  getIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterations()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations()  -  1;	      int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
48	[BUG]  [BUGGY]  int  iterations  =  getIterations().length;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterations().length;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().length;	      int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
49	[BUG]  [BUGGY]  int  iterations  =  function.getIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.getIterations()  -  1;  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations()  -  1;	      int    iterations    =    function.getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
50	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterationsCounter();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
51	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
52	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizer();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizer();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getOptimizer();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
53	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  function.incrementIterations();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterations();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
54	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException();  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException();  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    int  maxIterations  =  getMaxIterationsExceededException();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  <  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  iterations)  {	  if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
56	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  [FE]  AssertionFailedError  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  <  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  iterations)  {	  if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
57	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.values().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  Iterator  <  Number>  iterations  =  function.values().iterator();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.values().iterator();	      Iterator    <    Number>    iterations    =    function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterator();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterator();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIterator();	      Iterator    <    Number>    iterations    =    function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
59	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCount();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.incrementIterationsCount();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCount();	      int    iterations    =    function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
60	[BUG]  [BUGGY]  if(++iterations  >=  maxIterations)  {  If(++iterations  >=  maxIterations)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  >=  maxIterations)  {  If(++iterations  >=  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    >=    maxIterations)    {    If(++iterations  >=  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
61	[BUG]  [BUGGY]  if(maxIterations  >  iterations)  {  int  maxIterations  >  iterations)  {  [CE]  ';'  expected  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  iterations)  {  int  maxIterations  >  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    iterations)    {    int  maxIterations  >  iterations)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
62	[BUG]  [BUGGY]  if(maxIterations  >  MAX_ITERATIONS)  {  [CE]  cannot  find  symbol  MAX_ITERATIONS  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >  MAX_ITERATIONS)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  MAX_ITERATIONS)  {	  if(maxIterations    >    iterations)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_ITERATIONS	6	None	replace
63	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >=  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >=  iterations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  OptimizationException  	6	15	replace
64	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(maxIterations  >=  iterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >=  iterations)  {	  if(maxIterations    >    iterations)    {    	compilable	  [FE]  OptimizationException  	6	15	replace
65	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterations();	      int    iterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
66	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededEvaluations();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsExceededEvaluations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededEvaluations();	      int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
67	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounters();  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCounters();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounters();	      int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
68	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter();	      int    iterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
69	[BUG]  [BUGGY]  int  iterations  =  function.numerationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.numerationsCounter();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerationsCounter();	      int    iterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
70	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededException();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsExceededException();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededException();	      int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
71	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  this.function.incrementIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterations();	      int    iterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
72	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterations();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.remainingIterations();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterations();	      int    iterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
73	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS);  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS);	      int    iterations    =    getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
74	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  iterations  =  function.remainingIterationsCounter();  [BUGGY]    if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterationsCounter();	      int    iterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
75	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length);  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
76	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length);  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
77	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  cost);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  cost);  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(remainders.length,  cost);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
78	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
79	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]      OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
80	[BUG]  [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        OptimizationException    [CONTEXT]    protected  void  incrementIterationsCounter()  throws  OptimizationException  {    [BUGGY]  if(++iterations  <  maxIterations)  {  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [BUGGY]    throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    <    maxIterations)    {    int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
