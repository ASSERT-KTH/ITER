bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    ==    maxIterations)    {    if(++iterations  ==  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    ==    maxIterations)    {    if(++iterations  >=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations!=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations  ==  maxIterations)  {  if(++iterations!=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    ==    maxIterations)    {    if(++iterations!=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  if(++iterations  ==  maxIterations)  {  If(++iterations  ==  maxIterations)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations  ==  maxIterations)  {  If(++iterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations    ==    maxIterations)    {    If(++iterations  ==  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
5	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  results.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  results.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  results.length);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
6	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  2);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  2);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
7	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  MAX_ITERATIONS);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  MAX_ITERATIONS);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
8	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  1);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  ++iterations)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
10	[BUG]  [BUGGY]  if(maxIterations  <  ++iterations)  {  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  ++iterations)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
11	[BUG]  [BUGGY]  if(maxIterations  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  0)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.incrementIterations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterations()  -  1;	  int    iterations    =    this.function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
13	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterations()  -  1;	  int    iterations    =    this.function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  super.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  super.incrementIterationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  super.incrementIterationsCounter();	  Iterator    <    Number>    iterations    =    this.function.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
15	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >=  ++iterations)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations!=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	11	15	replace
16	[BUG]  [BUGGY]  if(maxIterations  >=  ++iterations)  {  [FE]  OptimizationException  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >=  ++iterations)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations!=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	11	15	replace
17	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations!=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	11	15	replace
18	[BUG]  [BUGGY]  if(maxIterations  >  0)  {  [FE]  OptimizationException  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations!=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	11	15	replace
19	[BUG]  [BUGGY]  int  iterations  =  getIterations().length  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations().length  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().length  -  1;	  int    iterations    =    getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
20	[BUG]  [BUGGY]  int  iterations  =  this.function.getIterationsCount()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.getIterationsCount()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.getIterationsCount()  -  1;	  int    iterations    =    this.function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
21	[BUG]  [BUGGY]  int  iterations  =  this.function.getIterationsCount()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.getIterationsCount()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.getIterationsCount()  +  1;	  int    iterations    =    this.function.getIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
22	[BUG]  [BUGGY]  if(maxIterations  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  maxIterations)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  maxIterations)  {	  if(maxIterations    <    =    iterations)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
24	[BUG]  [BUGGY]  if(maxIterations  <  maxIterations)  {  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  maxIterations)  {	  if(maxIterations    <    =    iterations)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
25	[BUG]  [BUGGY]  if(maxIterations  <  =  MATRIX_ITERATIONS)  {  [CE]  illegal  start  of  expression  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  MATRIX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  MATRIX_ITERATIONS)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  -  1;	  int    iterations    =    function.multivariateVectorialFunction.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
27	[BUG]  [BUGGY]  int  iterations  =  function.multivariateMatrixFunction.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateMatrixFunction.incrementIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateMatrixFunction.incrementIterations();	  int    iterations    =    function.multivariateVectorialFunction.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
28	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterations()  +  1;	  int    iterations    =    function.multivariateVectorialFunction.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
29	[BUG]  [BUGGY]  Integer  iterations  =  getIterationsCount();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  iterations  =  getIterationsCount();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  iterations  =  getIterationsCount();	  int    iterations    =    getIterationsCount()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
30	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCount()  *  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCount()  *  1;	  int    iterations    =    getIterationsCount()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
31	[BUG]  [BUGGY]  int  maxIterations  >  maxIterations)  {  [CE]  ';'  expected  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
32	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.size();  [CE]  int  cannot  be  dereferenced  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.size();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.size();	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	61	None	replace
33	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.iterator().next();  [CE]  int  cannot  be  dereferenced  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.iterator().next();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations.iterator().next();	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	61	None	replace
34	[BUG]  [BUGGY]  int  maxIterations  >  iterations)  {  [CE]  ';'  expected  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  >  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  >  iterations)  {	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
35	[BUG]  [BUGGY]  if(new  MaxIterationsExceededException(maxIterations))  {  [CE]  incompatible  types  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(new  MaxIterationsExceededException(maxIterations))  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(new  MaxIterationsExceededException(maxIterations))  {	  if(++iterations    <    maxIterations)    {    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  incompatible  types	29	None	replace
36	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededException(false);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededException(false);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededException(false);	  int    iterations    =    getIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
37	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter().iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter().iterator();	  int    iterations    =    getIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
38	[BUG]  [BUGGY]  int  iterations  =  function.numerations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numerations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerations()  -  1;	  int    iterations    =    function.numerations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
39	[BUG]  [BUGGY]  int  iterations  =  this.function.numerations();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.numerations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.numerations();	  int    iterations    =    function.numerations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
40	[BUG]  [BUGGY]  int  iterations  =  function.numerations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numerations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerations()  +  1;	  int    iterations    =    function.numerations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
41	[BUG]  [BUGGY]  If(maxIterations  >  maxIterations)  {  [CE]  ';'  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    If(maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
42	[BUG]  [BUGGY]  If(maxIterations  >  maxIterationsExceededException(maxIterations))  {  [CE]  ';'  expected  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(maxIterations  >  maxIterationsExceededException(maxIterations))  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(maxIterations  >  maxIterationsExceededException(maxIterations))  {	  if(maxIterations    >    iterations)    {    If(maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
43	[BUG]  [BUGGY]  If(maxIterations  ==  iterations)  {  [CE]  ';'  expected  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(maxIterations  ==  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(maxIterations  ==  iterations)  {	  if(maxIterations    >    iterations)    {    If(maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  -  1;	  int    iterations    =    function.multivariateVectorialFunction.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
45	[BUG]  [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateVectorialFunction.incrementIterationsCounter()  +  1;	  int    iterations    =    function.multivariateVectorialFunction.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
46	[BUG]  [BUGGY]  int  iterations  =  function.multivariateMatrixFunction.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.multivariateMatrixFunction.incrementIterationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.multivariateMatrixFunction.incrementIterationsCounter();	  int    iterations    =    function.multivariateVectorialFunction.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
47	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(0,  DEFAULT_MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(0,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(0,  DEFAULT_MAX_ITERATIONS);	  int    iterations    =    getIterationsCounter(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
48	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(variateMatrixFunction,  DEFAULT_MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(variateMatrixFunction,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(variateMatrixFunction,  DEFAULT_MAX_ITERATIONS);	  int    iterations    =    getIterationsCounter(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
49	[BUG]  [BUGGY]  If(++iterations  <  maxIterations)  {  [CE]  ';'  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(++iterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(++iterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    If(++iterations    <    maxIterations)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
50	[BUG]  [BUGGY]  If(++iterations  <  =  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(++iterations  <  =  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(++iterations  <  =  maxIterations)  {	  if(++iterations    <    maxIterations)    {    If(++iterations    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  if(maxIterations  >  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  if(maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxIterations)    {    if(maxIterations  >  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
52	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  If(maxIterations  >  maxIterations)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  If(maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxIterations)    {    If(maxIterations  >  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
53	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  if(maxIterations  >  minIterations)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  if(maxIterations  >  minIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxIterations)    {    if(maxIterations  >  minIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
54	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {  [CE]  cannot  find  symbol  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++iterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
55	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  1)  {  [CE]  cannot  find  symbol  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  1)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  1)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
56	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  )  {  [CE]  illegal  start  of  expression  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  )  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  )  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
57	[BUG]  [BUGGY]  if(maxIterations  <  =  iterations)  {  if(maxIterations  >  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  iterations)  {  if(maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  iterations)  {  if(maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >=  iterations)  {  if(maxIterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  if(maxIterations  >  maxIterationsExceededException)  {  [CE]  cannot  find  symbol  maxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterationsExceededException)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterationsExceededException)  {	  if(maxIterations    >    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol  maxIterationsExceededException	15	None	replace
60	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  <  iterations)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  <  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    <    iterations)    {    if(maxIterations  <  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
61	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  If(maxIterations  <  iterations)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  iterations)  {  If(maxIterations  <  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    <    iterations)    {    If(maxIterations  <  iterations)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
62	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  >=  iterations)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  >=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    <    iterations)    {    if(maxIterations  >=  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
63	[BUG]  [BUGGY]  int  maxIterations  =  function.getMaxIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.getMaxIterations()  -  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.getMaxIterations()  -  1;	  int    maxIterations    =    function.getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
64	[BUG]  [BUGGY]  int  maxIterations  =  function.getMaxIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.getMaxIterations()  +  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.getMaxIterations()  +  1;	  int    maxIterations    =    function.getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
65	[BUG]  [BUGGY]  int  maxIterations  =  function.getMaxIterations()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.getMaxIterations()  *  2;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.getMaxIterations()  *  2;	  int    maxIterations    =    function.getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
66	[BUG]  [BUGGY]  int  iterations  =  this.function.getIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.getIterationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.getIterationsCounter();	  int    iterations    =    this.function.getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
67	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >=  iterations)  {  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >=    iterations)    {    if(maxIterations  >=  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
68	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations!=  iterations)  {  [CE]  illegal  start  of  expression  [FE]      OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations!=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >=    iterations)    {    if(maxIterations!=  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
69	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  ==  iterations)  {  [CE]  illegal  start  of  expression  [FE]        OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  ==  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >=    iterations)    {    if(maxIterations  ==  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
70	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >>  iterations)  {  [CE]  illegal  start  of  expression  [FE]          OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  if(maxIterations  >>  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >=    iterations)    {    if(maxIterations  >>  iterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
71	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [CE]  class,  interface,  or  enum  expected  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(new    MaxIterationsExceededException(maxIterations));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
72	[BUG]  [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [CE]  class,  interface,  or  enum  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(new    MaxIterationsExceededException(maxIterations));    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
73	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter()  -  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterationsCounter()  -  1;	  int    maxIterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
74	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.incrementIterationsCounter()  +  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterationsCounter()  +  1;	  int    maxIterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
75	[BUG]  [BUGGY]  int  maxIterations  =  this.function.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  this.function.incrementIterationsCounter();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  this.function.incrementIterationsCounter();	  int    maxIterations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
76	[BUG]  [BUGGY]  if(maxIterations  >  maxIterationsExceededException(maxIterations))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterationsExceededException(maxIterations))  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterationsExceededException(maxIterations))  {	  if(maxIterations    >    maxEvaluations)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
77	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededEvaluations().length;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededEvaluations().length;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededEvaluations().length;	  int    iterations    =    getIterationsExceededEvaluations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
78	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededEvaluations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededEvaluations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededEvaluations()  -  1;	  int    iterations    =    getIterationsExceededEvaluations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
79	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(0).iterator();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(0).iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(0).iterator();	  int    iterations    =    getIterationsCounter(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
80	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(1);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(1);	  int    iterations    =    getIterationsCounter(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
81	[BUG]  [BUGGY]  If(++iterations  >=  maxIterations)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(++iterations  >=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(++iterations  >=  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    If(++iterations    >=    maxIterations)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
82	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter()  *  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter()  *  1;	  int    iterations    =    getIterationsCounter()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
83	[BUG]  [BUGGY]  Integer  iterations  =  getIterations();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  iterations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  iterations  =  getIterations();	          int    iterations    =    getIterations();    int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
84	[BUG]  [BUGGY]  long  iterations  =  getIterations();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  long  iterations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	long  iterations  =  getIterations();	          int    iterations    =    getIterations();    int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
85	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVarArgs();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVarArgs();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getVarArgs();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
86	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVariableConvergenceChecker();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVariableConvergenceChecker();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getVariableConvergenceChecker();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
87	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVariance();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVariance();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getVariance();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
88	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.variateMatrixFunction.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.variateMatrixFunction.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.variateMatrixFunction.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
89	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.jF.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.jF.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.jF.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
90	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.variateMatrixFunctions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.variateMatrixFunctions.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.variateMatrixFunctions.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
91	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >=  maxIterations)  {	  if(maxIterations    >=    iterations)    {    	compilable	  [FE]  OptimizationException  	64	15	replace
92	[BUG]  [BUGGY]  if(maxIterations  >=  maxIterations)  {  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >=  maxIterations)  {	  if(maxIterations    >=    iterations)    {    	compilable	  [FE]  OptimizationException  	64	15	replace
93	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  ==  maxIterations)  {	  if(maxIterations    >=    iterations)    {    	compilable	  [FE]  OptimizationException  	64	15	replace
94	[BUG]  [BUGGY]  if(maxIterations  ==  maxIterations)  {  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  ==  maxIterations)  {	  if(maxIterations    >=    iterations)    {    	compilable	  [FE]  OptimizationException  	64	15	replace
95	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCount()  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCount()  /  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCount()  /  1;	  int    iterations    =    function.getIterationsCount()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
96	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  0);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(maxIterations,  0);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
97	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  1);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
98	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  2);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  2);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
99	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  2);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(maxIterations,  2);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
100	[BUG]  [BUGGY]  int  iterations  =  function.getIterations()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterations()  *  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations()  *  1;	  int    iterations    =    function.getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
101	[BUG]  [BUGGY]  int  iterations  =  function.getIterations()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterations()  *  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations()  *  2;	  int    iterations    =    function.getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
102	[BUG]  [BUGGY]  int  iterations  =  function.getIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations()  +  1;	  int    iterations    =    function.getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
103	[BUG]  [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  iterations  =  getIterations();  int  itserations  =  getIterations();  [CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  iterations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	                int        iterations        =        getIterations();        int    itserations    =    getIterations();    int  iterations  =  getIterations();  int  itserations  =  getIterations();	  	non-compiled	[CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()	25	None	add
104	[BUG]  [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  Integer  iterations  =  getIterations();  int  itserations  =  getIterations();  [CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  Integer  iterations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	                int        iterations        =        getIterations();        int    itserations    =    getIterations();    Integer  iterations  =  getIterations();  int  itserations  =  getIterations();	  	non-compiled	[CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()	25	None	add
105	[BUG]  [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  itserations  =  getIterations();  int  itserations  =  getIterations();  [CE]  variable  itserations  is  already  defined  in  method  incrementIterationsCounter()  [FE]        AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  itserations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	                int        iterations        =        getIterations();        int    itserations    =    getIterations();    int  itserations  =  getIterations();  int  itserations  =  getIterations();	  	non-compiled	[CE]  variable  itserations  is  already  defined  in  method  incrementIterationsCounter()	25	None	add
106	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCount()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterationsCount()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCount()  -  1;	  int    iterations    =    function.incrementIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
107	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCount()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterationsCount()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCount()  +  1;	  int    iterations    =    function.incrementIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
108	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCount()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterationsCount()  -  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCount()  -  2;	  int    iterations    =    function.incrementIterationsCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
109	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.functions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.functions.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.functions.iterator();	  Iterator    <    Number>    iterations    =    functions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
110	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  allFunctions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  allFunctions.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  allFunctions.iterator();	  Iterator    <    Number>    iterations    =    functions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
111	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  jacobianEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  jacobianEvaluations.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  jacobianEvaluations.length);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
112	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length  -  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  objectiveEvaluations.length  -  1);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
113	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(objectialEvaluations.length,  residuals.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(objectialEvaluations.length,  residuals.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(objectialEvaluations.length,  residuals.length);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
114	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length  -  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length  -  1);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
115	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCount()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCount()  *  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCount()  *  1;	  int    iterations    =    function.getIterationsCount()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
116	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  2);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  2);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
117	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  2);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(remainders.length,  2);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
118	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  residuals.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  residuals.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  residuals.length);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
119	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  1);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
120	[BUG]  [BUGGY]  if(maxIterations  >  0)  {  if(++iterations  ==  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  0)  {  if(++iterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  0)  {  if(++iterations  ==  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    ==    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations!=  ++iterations)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    ==    maxIterations)    {    	compilable	  [FE]  OptimizationException  	13	15	replace
122	[BUG]  [BUGGY]  if(maxIterations!=  ++iterations)  {  [FE]  OptimizationException  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  ++iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations!=  ++iterations)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    ==    maxIterations)    {    	compilable	  [FE]  OptimizationException  	13	15	replace
123	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCounter()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounter()  -  1;	  int    iterations    =    function.getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
124	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounter()  +  1;	  int    iterations    =    function.getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
125	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounter(0);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCounter(0);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounter(0);	  int    iterations    =    function.getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
126	[BUG]  [BUGGY]  Int  iterations  =  getIterations();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Int  iterations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Int  iterations  =  getIterations();	          int    iterations    =    getIterations();    Int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
127	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounters()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounters()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounters()  -  1;	  int    iterations    =    getIterationsCounters();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
128	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounters()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounters()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounters()  +  1;	  int    iterations    =    getIterationsCounters();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
129	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounters()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounters()  *  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounters()  *  2;	  int    iterations    =    getIterationsCounters();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
130	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter().length;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter().length;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter().length;	  int    iterations    =    getIterations().length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
131	[BUG]  [BUGGY]  int  iterations  =  getIterations().length  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations().length  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().length  +  1;	  int    iterations    =    getIterations().length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
132	[BUG]  [BUGGY]  int  iterations  =  getIterations().length  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations().length  -  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().length  -  2;	  int    iterations    =    getIterations().length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
133	[BUG]  [BUGGY]  int  iterations  =  function.numberIterations();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numberIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numberIterations();	  int    iterations    =    function.remainingIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
134	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.remainingIterationsCounter()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterationsCounter()  -  1;	  int    iterations    =    function.remainingIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
135	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVarianceChecker();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getVarianceChecker();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getVarianceChecker();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizationChecker();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
136	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getRange();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getRange();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getRange();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizationChecker();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
137	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  jacobianEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  jacobianEvaluations.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  jacobianEvaluations.length);	  int    maxIterations    =    Math.max(results.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
138	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length  -  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  objectiveEvaluations.length  -  1);	  int    maxIterations    =    Math.max(results.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
139	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(objectialEvaluations.length,  results.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(objectialEvaluations.length,  results.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(objectialEvaluations.length,  results.length);	  int    maxIterations    =    Math.max(results.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
140	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(results.length,  objectiveEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(results.length,  objectiveEvaluations.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(results.length,  objectiveEvaluations.length);	  int    maxIterations    =    Math.max(results.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
141	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >=  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	10	15	replace
142	[BUG]  [BUGGY]  if(maxIterations  >=  0)  {  [FE]  OptimizationException  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >=  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	10	15	replace
143	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  DEFAULT_MAX_ITERATIONS)  {	  if(maxIterations    >    MAX_ITERATIONS)    {    	compilable	  [FE]  OptimizationException  	62	14	replace
144	[BUG]  [BUGGY]  if(maxIterations  >  DEFAULT_MAX_ITERATIONS)  {  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  DEFAULT_MAX_ITERATIONS)  {	  if(maxIterations    >    MAX_ITERATIONS)    {    	compilable	  [FE]  OptimizationException  	62	14	replace
145	[BUG]  [BUGGY]  if(maxIterations  >  MATRIX_ITERATIONS)  {  [CE]  cannot  find  symbol  MATRIX_ITERATIONS  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  MATRIX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  MATRIX_ITERATIONS)  {	  if(maxIterations    >    MAX_ITERATIONS)    {    	non-compiled	[CE]  cannot  find  symbol  MATRIX_ITERATIONS	62	None	replace
146	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  if(maxIterations  >  maxEvaluations)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxEvaluations)  {  if(maxIterations  >  maxEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxEvaluations)    {    if(maxIterations  >  maxEvaluations)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
147	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  If(maxIterations  >  maxEvaluations)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxEvaluations)  {  If(maxIterations  >  maxEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxEvaluations)    {    If(maxIterations  >  maxEvaluations)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
148	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  if(maxIterations  >  minEvaluations)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxEvaluations)  {  if(maxIterations  >  minEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxEvaluations)    {    if(maxIterations  >  minEvaluations)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
149	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCounter()  +  1;	  int    iterations    =    function.incrementIterationsCounter()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
150	[BUG]  [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.incrementIterationsCounter()  *  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.incrementIterationsCounter()  *  1;	  int    iterations    =    function.incrementIterationsCounter()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
151	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException();  [CE]  class,  interface,  or  enum  expected  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException();	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
152	[BUG]  [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException();  [CE]  class,  interface,  or  enum  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  maxIterations  =  getMaxIterationsExceededException();	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
153	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [CE]  cannot  find  symbol  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(maxIterations);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
154	[BUG]  [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [CE]  cannot  find  symbol  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(maxIterations);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
155	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterationsCounter()  -  1;	  int    iterations    =    this.function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
156	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.incrementIterationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterationsCounter()  +  1;	  int    iterations    =    this.function.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
157	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  cost)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  cost)  {	  if(maxIterations    >    maxIterationsExceeded)    {    	compilable	  [FE]  OptimizationException  	17	15	replace
158	[BUG]  [BUGGY]  if(maxIterations  >  cost)  {  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  cost)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  cost)  {	  if(maxIterations    >    maxIterationsExceeded)    {    	compilable	  [FE]  OptimizationException  	17	15	replace
159	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterations()  -  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterations()  -  1;	  int    maxIterations    =    getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
160	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterations()  +  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterations()  +  1;	  int    maxIterations    =    getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
161	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterations()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterations()  *  2;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterations()  *  2;	  int    maxIterations    =    getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
162	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.remainingIterations()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterations()  -  1;	  int    iterations    =    function.remainingIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
163	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.remainingIterations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterations()  +  1;	  int    iterations    =    function.remainingIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
164	[BUG]  [BUGGY]  int  iterations  =  function.numerationsCounter()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numerationsCounter()  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerationsCounter()  -  1;	  int    iterations    =    function.numerationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
165	[BUG]  [BUGGY]  int  iterations  =  this.function.numerationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.numerationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.numerationsCounter();	  int    iterations    =    function.numerationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
166	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterations()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.incrementIterations()  -  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterations()  -  1;	  int    maxIterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
167	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.incrementIterations()  +  1;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterations()  +  1;	  int    maxIterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
168	[BUG]  [BUGGY]  int  maxIterations  =  this.function.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  this.function.incrementIterations();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  this.function.incrementIterations();	  int    maxIterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
169	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations!=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations!=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=    maxIterations)    {    if(++iterations!=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
170	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]      OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  >=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=    maxIterations)    {    if(++iterations  >=  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
171	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]        OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  ==  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=    maxIterations)    {    if(++iterations  ==  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
172	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  >>  maxIterations)  {  [CE]  illegal  start  of  expression  [FE]          OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations!=  maxIterations)  {  if(++iterations  >>  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=    maxIterations)    {    if(++iterations  >>  maxIterations)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
173	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.function.getIterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.function.getIterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.function.getIterator();	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
174	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  jF.getIterator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  jF.getIterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  jF.getIterator();	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
175	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.function.values().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.function.values().iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.function.values().iterator();	  Iterator    <    Number>    iterations    =    function.values().iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
176	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  objectiveEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  objectiveEvaluations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    maxIterations)    {    	compilable	  [FE]  OptimizationException  	7	15	replace
177	[BUG]  [BUGGY]  if(maxIterations  >  objectiveEvaluations)  {  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  objectiveEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  objectiveEvaluations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    maxIterations)    {    	compilable	  [FE]  OptimizationException  	7	15	replace
178	[BUG]  [BUGGY]  if(maxIterations  >  targetValues)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  targetValues)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  targetValues)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    maxIterations)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	7	None	replace
179	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounters();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCounters();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounters();	  int    iterations    =    this.function.getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
180	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  >  maxIterations)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxIterations)    {    int  maxIterations  >  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
181	[BUG]  [BUGGY]  int  maxIterations  =  iterations.size();  [CE]  class,  interface,  or  enum  expected  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  iterations.size();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  iterations.size();	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
182	[BUG]  [BUGGY]  int  maxIterations  =  iterations.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  iterations.iterator();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  iterations.iterator();	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
183	[BUG]  [BUGGY]  int  maxIterations  =  iterations.iterator().next();  [CE]  class,  interface,  or  enum  expected  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  iterations.iterator().next();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  iterations.iterator().next();	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
184	[BUG]  [BUGGY]  if(++iterations!=  maxIterations)  {  If(++iterations!=  maxIterations)  {  [CE]  ';'  expected  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(++iterations!=  maxIterations)  {  If(++iterations!=  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(++iterations!=    maxIterations)    {    If(++iterations!=  maxIterations)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
185	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(objectiveEvaluations.length,  results.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(objectiveEvaluations.length,  results.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(objectiveEvaluations.length,  results.length);	  int    maxIterations    =    Math.max(results.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
186	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations!=  0)  {	  if(++iterations    >=    maxIterations)    {    If(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	60	15	replace
187	[BUG]  [BUGGY]  if(maxIterations!=  0)  {  [FE]  OptimizationException  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations!=  0)  {	  if(++iterations    >=    maxIterations)    {    If(++iterations    >=    maxIterations)    {    	compilable	  [FE]  OptimizationException  	60	15	replace
188	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterators();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterators();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIterators();	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
189	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIteratorIfNull(variable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  function.getIteratorIfNull(variable);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIteratorIfNull(variable);	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
190	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.targetValues.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.targetValues.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.targetValues.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
191	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.variateVectors.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.variateVectors.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.variateVectors.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
192	[BUG]  [BUGGY]  If(maxIterations  >  maxEvaluations)  {  [CE]  ';'  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(maxIterations  >  maxEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(maxIterations  >  maxEvaluations)  {	  if(maxIterations    >    iterations)    {    If(maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
193	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizer().incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizer().incrementIterationsCounter();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getOptimizer().incrementIterationsCounter();	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
194	[BUG]  [BUGGY]  int  iterations  =  getIterations().incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations().incrementIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().incrementIterations();	          int    iterations    =    getIterations();    Int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
195	[BUG]  [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  iterations  =  getIterations();  int  iterations  =  getIterations();  [CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  int  iterations  =  getIterations();  int  iterations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	                int        iterations        =        getIterations();        int    itserations    =    getIterations();    int  iterations  =  getIterations();  int  iterations  =  getIterations();	  	non-compiled	[CE]  variable  iterations  is  already  defined  in  method  incrementIterationsCounter()	25	None	add
196	[BUG]  [BUGGY]  if(maxIterations  <  =  objectiveEvaluations)  {  [CE]  illegal  start  of  expression  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  objectiveEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  objectiveEvaluations)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
197	[BUG]  [BUGGY]  if(maxIterations  <  =  objectives)  {  [CE]  illegal  start  of  expression  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  objectives)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  objectives)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
198	[BUG]  [BUGGY]  if(maxIterations  <  targetValues)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  targetValues)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  targetValues)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	16	None	replace
199	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  maxIterations)  {  [CE]  cannot  find  symbol  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  if(++maxIterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
200	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
201	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(remainders.length,  objectiveEvaluations.length);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
202	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(objectiveEvaluations.length,  residuals.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(objectiveEvaluations.length,  residuals.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(objectiveEvaluations.length,  residuals.length);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
203	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterators().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterators().iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIterators().iterator();	  Iterator    <    Number>    iterations    =    function.values().iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
204	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededEvaluations();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededEvaluations();  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededEvaluations();	  int    maxIterations    =    getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
205	[BUG]  [BUGGY]  if(maxIterations  >=  iterations)  {  If(maxIterations  >=  iterations)  {  [CE]  ';'  expected  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >=  iterations)  {  If(maxIterations  >=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >=    iterations)    {    If(maxIterations  >=  iterations)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
206	[BUG]  [BUGGY]  int  iterations  =  function.numerations()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numerations()  -  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerations()  -  2;	  int    iterations    =    function.numerations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
207	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededEvaluations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededEvaluations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededEvaluations()  +  1;	  int    iterations    =    getIterationsExceededEvaluations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
208	[BUG]  [BUGGY]  int  iterations  =  getIterations().size();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations().size();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations().size();	  int    iterations    =    getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
209	[BUG]  [BUGGY]  Integer  iterations  =  function.getIterationsCount();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  iterations  =  function.getIterationsCount();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  iterations  =  function.getIterationsCount();	  int    iterations    =    function.getIterationsCount()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
210	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  0);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  0);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
211	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(results.length,  result.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(results.length,  result.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(results.length,  result.length);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  ==  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  ==  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    >>    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
213	[BUG]  [BUGGY]  if(maxIterations  ==  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  ==  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  ==  0)  {	  if(++iterations    >=    maxIterations)    {    if(++iterations    >>    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
214	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(2);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(2);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(2);	  int    iterations    =    getIterationsCounter(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
215	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(function);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(function);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(function);	  int    iterations    =    getIterationsCounter(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
216	[BUG]  [BUGGY]  boolean  iterations  =  getIterations();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  boolean  iterations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	boolean  iterations  =  getIterations();	          int    iterations    =    getIterations();    int    iterations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
217	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededCounters();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededCounters();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededCounters();	  int    iterations    =    getIterationsCounters();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
218	[BUG]  [BUGGY]  int  iterations  =  function.remainingIterationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.remainingIterationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.remainingIterationsCounter()  +  1;	  int    iterations    =    function.remainingIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
219	[BUG]  [BUGGY]  Integer  iterations  =  getIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Integer  iterations  =  getIterationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Integer  iterations  =  getIterationsCounter();	  int    iterations    =    getIterationsCounter()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
220	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCounter()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCounter()  -  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCounter()  -  2;	  int    iterations    =    function.getIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
221	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations!=  iterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    iterations)    {    	compilable	  [FE]  OptimizationException  	5	15	replace
222	[BUG]  [BUGGY]  if(maxIterations!=  iterations)  {  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations!=  iterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations!=  iterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    iterations)    {    	compilable	  [FE]  OptimizationException  	5	15	replace
223	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  int  maxIterations  >  maxEvaluations)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxEvaluations)  {  int  maxIterations  >  maxEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxEvaluations)    {    int  maxIterations  >  maxEvaluations)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
224	[BUG]  [BUGGY]  int  iterations  =  this.function.incrementIterations()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  this.function.incrementIterations()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  this.function.incrementIterations()  +  1;	  int    iterations    =    this.function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
225	[BUG]  [BUGGY]  int  maxIterations  =  function.getMaxIterations()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.getMaxIterations()  -  2;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.getMaxIterations()  -  2;	  int    maxIterations    =    function.getMaxIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  0)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
227	[BUG]  [BUGGY]  if(maxIterations  <  0)  {  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  0)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  0)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
228	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(remainders.length,  1);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(remainders.length,  1);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
229	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(function);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(function);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(function);	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizationChecker();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
230	[BUG]  [BUGGY]  if(maxIterations  >  Iterations.MAX_ITERATIONS)  {  [CE]  cannot  find  symbol  Iterations  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  Iterations.MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  Iterations.MAX_ITERATIONS)  {	  if(maxIterations    >=    iterations)    {    	non-compiled	[CE]  cannot  find  symbol  Iterations	64	None	replace
231	[BUG]  [BUGGY]  if(maxIterations  >  maximumIterations)  {  [CE]  cannot  find  symbol  maximumIterations  [FE]      OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maximumIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maximumIterations)  {	  if(maxIterations    >=    iterations)    {    	non-compiled	[CE]  cannot  find  symbol  maximumIterations	64	None	replace
232	[BUG]  [BUGGY]  int  iterations  =  function.getIterations().length  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterations().length  -  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations().length  -  1;	  int    iterations    =    function.getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
233	[BUG]  [BUGGY]  int  iterations  =  getIterations(DEFAULT_MAX_ITERATIONS);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterations(DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterations(DEFAULT_MAX_ITERATIONS);	          int    iterations    =    getIterations();    int    itserations    =    getIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
234	[BUG]  [BUGGY]  int  iterations  =  getIterationsEvaluationCounter();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsEvaluationCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsEvaluationCounter();	  int    iterations    =    getIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
235	[BUG]  [BUGGY]  int  iterations  =  getIterationsIncrement();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsIncrement();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsIncrement();	  int    iterations    =    getIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
236	[BUG]  [BUGGY]  int  iterations  =  function.numerationsCounter()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.numerationsCounter()  +  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.numerationsCounter()  +  1;	  int    iterations    =    function.numerationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
237	[BUG]  [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.min(maxIterations,  0);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.min(maxIterations,  0);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  DEFAULT_MAX_ITERATIONS)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	31	2	replace
239	[BUG]  [BUGGY]  if(maxIterations  <  DEFAULT_MAX_ITERATIONS)  {  [FE]  AssertionFailedError  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  DEFAULT_MAX_ITERATIONS)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    >=    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	31	2	replace
240	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.remainings.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.remainings.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.remainings.iterator();	  Iterator    <    Number>    iterations    =    functions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
241	[BUG]  [BUGGY]  if(maxIterations  <  =  DEFAULT_MAX_ITERATIONS)  {  [CE]  illegal  start  of  expression  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  DEFAULT_MAX_ITERATIONS)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
242	[BUG]  [BUGGY]  if(maxIterations  <  =  MAX_ITERATIONS)  {  [CE]  illegal  start  of  expression  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  =  MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  =  MAX_ITERATIONS)  {	  if(maxIterations    <    =    iterations)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
243	[BUG]  [BUGGY]  if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  MAX_MAX_ITERATIONS)  {  [CE]  cannot  find  symbol  MAX_ITERATIONS  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  MAX_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  MAX_MAX_ITERATIONS)  {	  if(maxIterations    >    MAX_ITERATIONS)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_ITERATIONS	62	None	replace
244	[BUG]  [BUGGY]  if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  DEFAULT_MAX_ITERATIONS)  {  [CE]  cannot  find  symbol  MAX_ITERATIONS  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  MAX_ITERATIONS  ||  maxIterations  >  DEFAULT_MAX_ITERATIONS)  {	  if(maxIterations    >    MAX_ITERATIONS)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_ITERATIONS	62	None	replace
245	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  1)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  1)  {	  if(maxIterations    >    maxEvaluations)    {    	compilable	  [FE]  OptimizationException  	19	15	replace
246	[BUG]  [BUGGY]  if(maxIterations  >  1)  {  [FE]  OptimizationException  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  1)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  1)  {	  if(maxIterations    >    maxEvaluations)    {    	compilable	  [FE]  OptimizationException  	19	15	replace
247	[BUG]  [BUGGY]  int  iterations  =  function.variateVectorialFunction.incrementIterationsCounter();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.variateVectorialFunction.incrementIterationsCounter();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.variateVectorialFunction.incrementIterationsCounter();	  int    iterations    =    function.multivariateVectorialFunction.incrementIterationsCounter();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
248	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterator(jF);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  function.getIterator(jF);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIterator(jF);	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
249	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  function.getIteratorInstance();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  function.getIteratorInstance();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  function.getIteratorInstance();	  Iterator    <    Number>    iterations    =    function.getIterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
250	[BUG]  [BUGGY]  If(++iterations  <  DEFAULT_MAX_ITERATIONS)  {  [CE]  ';'  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(++iterations  <  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(++iterations  <  DEFAULT_MAX_ITERATIONS)  {	  if(++iterations    <    maxIterations)    {    If(++iterations    <    maxIterations)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
251	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCount()  /  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCount()  /  1;	  int    iterations    =    getIterationsCount()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(iterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(iterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
253	[BUG]  [BUGGY]  if(iterations  >  maxIterations)  {  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(iterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(iterations  >  maxIterations)  {	  if(maxIterations    >    iterations)    {    if(maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
254	[BUG]  [BUGGY]  int  iterations  =  function.getIterationsCount()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterationsCount()  -  2;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterationsCount()  -  2;	  int    iterations    =    function.getIterationsCount()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
255	[BUG]  [BUGGY]  if(maxIterations  >  zero)  {  [CE]  cannot  find  symbol  zero  [FE]    OptimizationException    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  zero)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  zero)  {	  if(maxIterations    >=    iterations)    {    	non-compiled	[CE]  cannot  find  symbol  zero	64	None	replace
256	[BUG]  [BUGGY]  If(++iterations  >  maxIterations)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(++iterations  >  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(++iterations  >  maxIterations)  {	  if(++iterations    >=    maxIterations)    {    If(++iterations    >=    maxIterations)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
257	[BUG]  [BUGGY]  if(maxIterations  >  maxEvaluations)  {  when(maxIterations  >  maxEvaluations)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxEvaluations)  {  when(maxIterations  >  maxEvaluations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    >    maxEvaluations)    {    when(maxIterations  >  maxEvaluations)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
258	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(true);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	VectorialConvergenceChecker  convergenceChecker  =  getOptimizationChecker(true);	  VectorialConvergenceChecker    convergenceChecker    =    getOptimizationChecker();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
259	[BUG]  [BUGGY]  int  maxIterations  =  function.incrementIterations(remainingsWeights);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  function.incrementIterations(remainingsWeights);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  function.incrementIterations(remainingsWeights);	  int    maxIterations    =    function.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
260	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.remainingsWeights.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.remainingsWeights.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.remainingsWeights.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
261	[BUG]  [BUGGY]  Iterator  <  Number>  iterations  =  this.results.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  Iterator  <  Number>  iterations  =  this.results.iterator();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	Iterator  <  Number>  iterations  =  this.results.iterator();	  Iterator    <    Number>    iterations    =    jF.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
262	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter()  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter()  /  1;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter()  /  1;	  int    iterations    =    getIterationsCounter()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
263	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  iterations)  {  int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    <    iterations)    {    int  maxIterations  =  getMaxIterationsExceededException(new  MaxIterationsExceededException(maxIterations));	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
264	[BUG]  [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  <  iterations)  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  iterations)  {  if(maxIterations  <  iterations)  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations    <    iterations)    {    if(maxIterations  <  iterations)  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
265	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  residuals.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  residuals.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  residuals.length);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
266	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  reductions.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  reductions.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  reductions.length);	  int    maxIterations    =    Math.min(remainders.length,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
267	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(remainings);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(remainings);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(remainings);	  int    iterations    =    getIterationsCounter(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
268	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  residualsWeights.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(remainders.length,  residualsWeights.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(remainders.length,  residualsWeights.length);	  int    maxIterations    =    Math.max(remainders.length,    objectiveEvaluations.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
269	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MIN_ITERATIONS);  if(++iterations  <  maxIterations)  {  [CE]  cannot  find  symbol  DEFAULT_MIN_ITERATIONS  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MIN_ITERATIONS);  if(++iterations  <  maxIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(DEFAULT_MIN_ITERATIONS);  if(++iterations  <  maxIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(DEFAULT_MAX_ITERATIONS);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MIN_ITERATIONS	79	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations;	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	61	1	replace
271	[BUG]  [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations;  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations;  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  >  maxIterations)  {  int  maxIterations  =  iterations;	  if(maxIterations    >    iterations)    {    int    maxIterations    >    iterations)    {    	compilable	  [FE]  AssertionFailedError  	61	1	replace
272	[BUG]  [BUGGY]  If(maxIterations  >  MAX_ITERATIONS)  {  [CE]  ';'  expected  [FE]          OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  If(maxIterations  >  MAX_ITERATIONS)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	If(maxIterations  >  MAX_ITERATIONS)  {	  if(maxIterations    >    iterations)    {    If(maxIterations    >    iterations)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
273	[BUG]  [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  minIterations)  {  [CE]  cannot  find  symbol  [FE]            OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  minIterations)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  getMaxIterationsExceededException(maxIterations);  if(++iterations  <  minIterations)  {	  if(++iterations    <    maxIterations)    {    int    maxIterations    =    getMaxIterationsExceededException(maxIterations);    if(++iterations    <    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
274	[BUG]  [BUGGY]  int  iterations  =  function.getIterations().length;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.getIterations().length;  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.getIterations().length;	  int    iterations    =    function.getIterations()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
275	[BUG]  [BUGGY]  int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS  -  1);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsCounter(DEFAULT_MAX_ITERATIONS  -  1);	  int    iterations    =    getIterationsCounter(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  1)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	add	if(maxIterations  <  1)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
277	[BUG]  [BUGGY]  if(maxIterations  <  1)  {  [FE]  AssertionFailedError  [FE]        OptimizationException      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  if(maxIterations  <  1)  {  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	if(maxIterations  <  1)  {	  if(++iterations    <    maxIterations)    {    if(++iterations    <    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
278	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  objectiveEvaluations);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(maxIterations,  objectiveEvaluations);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(maxIterations,  objectiveEvaluations);	  int    maxIterations    =    Math.min(maxIterations,    cost);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
279	[BUG]  [BUGGY]  int  iterations  =  function.variateVectorialFunction.incrementIterations();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  function.variateVectorialFunction.incrementIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  function.variateVectorialFunction.incrementIterations();	  int    iterations    =    function.multivariateVectorialFunction.incrementIterations();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
280	[BUG]  [BUGGY]  int  iterations  =  getIterationsExceededException(result);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  iterations  =  getIterationsExceededException(result);  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  iterations  =  getIterationsExceededException(result);	  int    iterations    =    getIterationsExceededException();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
281	[BUG]  [BUGGY]  int  maxIterations  =  Math.max(results.length,  result.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]  int  maxIterations  =  Math.max(results.length,  result.length);  [BUGGY]      throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	int  maxIterations  =  Math.max(results.length,  result.length);	  int    maxIterations    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
282	[BUG]  [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  Int  iterations  =  getIterations();  int  itserations  =  getIterations();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {      [BUGGY]          int    iterations    =    getIterations();    int  itserations  =  getIterations();  Int  iterations  =  getIterations();  int  itserations  =  getIterations();  [BUGGY]      if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	173	173	1	replace	                int        iterations        =        getIterations();        int    itserations    =    getIterations();    Int  iterations  =  getIterations();  int  itserations  =  getIterations();	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
