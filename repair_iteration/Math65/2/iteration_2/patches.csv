bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results.length,  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.max(results.length,  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(results.length,  2);	  double    chiSquare    =    Math.max(results.length,    i);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results.length,  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.max(results.length,  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(results.length,  1);	  double    chiSquare    =    Math.max(results.length,    i);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  <  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  <  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  <  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    <    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	89	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  <  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  <  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  <  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    <    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	89	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  <  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  <  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  <  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    <    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	89	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  <  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  <  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  <  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    <    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	89	None	replace
7	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  if(cols!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	60	None	replace
8	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  if(cols!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	60	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    5;    ++i)    {    for(int  i  =  0;  i  <  5;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  For(int  i  =  0;  i  <  5;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  For(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    5;    ++i)    {    For(int  i  =  0;  i  <  5;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    5;    ++i)    {    for(int  i  =  0;  i  <  6;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  int  i  =  0;  i  <  5;  ++i)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    5;    ++i)    {    int  i  =  0;  i  <  5;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    5;    ++i)    {    for(int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
14	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainings();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRemainings();	  double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
15	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRawVariables();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRawVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRawVariables();	  double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  For(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  For(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    For(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	55	None	add
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	55	None	add
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  1;  i  <  this.cols  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  for(int  i  =  1;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    for(int  i  =  1;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
21	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
22	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
23	[BUG]  [BUGGY]  Integer  rows  =  getColumnsCount()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getColumnsCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumnsCount()  -  1;	  Integer    rows    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
24	[BUG]  [BUGGY]  Integer  rows  =  getColumns()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getColumns()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumns()  -  1;	  Integer    rows    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows.length  +  1;  ++i)  {  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows.length  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows.length  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	68	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  *  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.rows  *  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	68	1	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  *  1;  ++i)  {  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  *  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows  *  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	68	1	replace
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
31	[BUG]  [BUGGY]  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	77	None	replace
32	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    For(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  '.class'  expected	19	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows  ==  null)  {  continue;  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	81	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  residuals.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  1;  ++i)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  residuals.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  2;  ++i)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length  -  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
40	[BUG]  [BUGGY]  if(period!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [CE]  cannot  find  symbol  period  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(period!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(period!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]    *    period);    }    	non-compiled	[CE]  cannot  find  symbol  period	13	None	replace
41	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [CE]  cannot  find  symbol  remainings  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]    *    period);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	13	None	replace
42	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [CE]  cannot  find  symbol  results  [FE]                              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]    *    period);    }    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  i  =  0;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resistances.length;  ++i)  {  [CE]  cannot  find  symbol  resistances  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.resistances.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.resistances.length;  ++i)  {	  for(int    i    =    0;    i    <    residualsWidths.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  resistances	98	None	replace
47	[BUG]  [BUGGY]  double[][]  residuals  =  getRawRemainders();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRawRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRawRemainders();	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
48	[BUG]  [BUGGY]  final  double[][]  residuals  =  getRemainders();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  final  double[][]  residuals  =  getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	final  double[][]  residuals  =  getRemainders();	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
49	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().clone();	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(results[i]  >  0)  {  }  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(results[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  6;  ++i)  {  if(results[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  results	87	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(results[i]  >  0)  {  }  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(results[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  if(results[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  results	87	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  if(results[i]  >  0)  {  }  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  if(results[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {  if(results[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  results	87	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(results[i]  >  0)  {  }  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(results[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  if(results[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  results	87	None	replace
54	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    For(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  '.class'  expected	24	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  final  double  chiSquare  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rowsWeights.length;  ++i)  {  [CE]  cannot  find  symbol  rowsWeights  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rowsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rowsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  rowsWeights	66	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  6;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	86	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	86	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	86	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	86	None	replace
63	[BUG]  [BUGGY]  maticFor(remainings[i])  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  maticFor(remainings[i])  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	maticFor(remainings[i])  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings    ==    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
64	[BUG]  [BUGGY]  if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings    ==    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	11	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    for(int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    For(int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	14	None	add
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    for(int  i  =  0;  i  <  5;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    for(int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periodsWeights.length;  ++i)  {  [CE]  cannot  find  symbol  periodsWeights  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periodsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periodsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    this.periods.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  periodsWeights	83	None	replace
71	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.min(results.length,  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  1);	  double    chiSquare    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
72	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.min(results.length,  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  2);	  double    chiSquare    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
73	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  3);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.min(results.length,  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  3);	  double    chiSquare    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
74	[BUG]  [BUGGY]  Integer  rows  =  getColumnCount()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getColumnCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumnCount()  -  1;	  Integer    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
75	[BUG]  [BUGGY]  Integer  rows  =  this.getRowCount();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  this.getRowCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  this.getRowCount();	  Integer    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
76	[BUG]  [BUGGY]  Integer  rows  =  getColumnCount()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getColumnCount()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumnCount()  +  1;	  Integer    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    for(int  i  =  0;  i  <  residuals.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  For(int  i  =  0;  i  <  residuals.length;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  For(int  i  =  0;  i  <  residuals.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    For(int  i  =  0;  i  <  residuals.length;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  int  i  =  0;  i  <  residuals.length;  ++i)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  int  i  =  0;  i  <  residuals.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    int  i  =  0;  i  <  residuals.length;  ++i)  {	  	non-compiled	[CE]  >  expected	5	None	add
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  residues.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  residues.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    for(int  i  =  0;  i  <  residues.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    for(int  i  =  0;  i  <  remainings.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  2;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  2;  i  <  this.cols;  ++i)  {	  for(int    i    =    1;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	58	1	replace
83	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  this.cols;  ++i)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  2;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  2;  i  <  this.cols;  ++i)  {	  for(int    i    =    1;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	58	1	replace
84	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    for(int  i  =  1;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
85	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  For(int  i  =  1;  i  <  this.cols;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  For(int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    For(int  i  =  1;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	57	None	add
86	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  int  i  =  1;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    int  i  =  1;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	57	None	add
87	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  2;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  2;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    for(int  i  =  2;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
88	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  1;  i  <  this.cols);  ++i)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  for(int  i  =  1;  i  <  this.cols);  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    for(int  i  =  1;  i  <  this.cols);  ++i)  {	  	non-compiled	[CE]  ';'  expected	57	None	add
89	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.min(results.length,  i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  i  +  1);	  double    chiSquare    =    Math.min(results.length,    i);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
90	[BUG]  [BUGGY]  maticFor(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  maticFor(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	maticFor(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	51	None	replace
91	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	51	None	replace
92	[BUG]  [BUGGY]  Double[][]  rows  =  jF.getColumns();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Double[][]  rows  =  jF.getColumns();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Double[][]  rows  =  jF.getColumns();	  Double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
93	[BUG]  [BUGGY]  Double[]  rows  =  jF.getRows();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Double[]  rows  =  jF.getRows();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Double[]  rows  =  jF.getRows();	  Double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  i);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  i);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rows.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  rows.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  rows.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cols.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  cols.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  cols.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  double[][]  residuals  =  getRawRemainings();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRawRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRawRemainings();	  double[][]    residuals    =    getRemainings();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
104	[BUG]  [BUGGY]  final  double[][]  residuals  =  getRemainings();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  final  double[][]  residuals  =  getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	final  double[][]  residuals  =  getRemainings();	  double[][]    residuals    =    getRemainings();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
105	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainings().length;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainings().length;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainings().length;	  double[][]    residuals    =    getRemainings();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  [CE]  cannot  find  symbol  fields  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.fields.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.fields.length;  ++i)  {	  for(int    i    =    0;    i    <    this.fields;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  fields	100	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  1;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows);    ++i)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
108	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.rows;  ++i)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  1;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows);    ++i)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows);  ++i)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows);  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows);  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows);    ++i)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
110	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	10	None	replace
111	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	10	None	replace
112	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  results  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	10	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols);  ++i)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols);  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols);  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    for(int    i    =    0;    i    <    this.cols);    ++i)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  continue;  }  [CE]  incomparable  types:  int  and  <null>  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  continue;  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	76	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	76	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  final  double  chiSquare  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  final  double  chiSquare  =  0;  i  <  6;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  6;  ++i)  {  final  double  chiSquare  =  0;  i  <  6;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residualsWeights.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residualsWeights.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare.length,  residualsWeights.length);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
120	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare,  0);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  chiSquare,  0);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
121	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  chiSquare  +  1);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
122	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare,  residualsWeights.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare,  residualsWeights.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare,  residualsWeights.length);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
123	[BUG]  [BUGGY]  double[][]  rows  =  cols.getColumns();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  cols.getColumns();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  cols.getColumns();	  double[][]    rows    =    jF,    cols.getColumns();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
124	[BUG]  [BUGGY]  double[][]  rows  =  cols,  jF.getColumns();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  cols,  jF.getColumns();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  cols,  jF.getColumns();	  double[][]    rows    =    jF,    cols.getColumns();    	non-compiled	[CE]  ';'  expected	47	None	replace
125	[BUG]  [BUGGY]  double[][]  rows  =  cols.getRows();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  cols.getRows();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  cols.getRows();	  double[][]    rows    =    jF,    cols.getColumns();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
126	[BUG]  [BUGGY]  double[][]  rows  =  cols,  jF.getRows();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  cols,  jF.getRows();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  cols,  jF.getRows();	  double[][]    rows    =    jF,    cols.getColumns();    	non-compiled	[CE]  ';'  expected	47	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
129	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  2);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  2);	  int    rows    =    Math.min(remainings.length,    2);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
130	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainings.length,  3);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  3);	  int    rows    =    Math.min(remainings.length,    2);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
131	[BUG]  [BUGGY]  int  rows  =  getRowCount()  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  getRowCount()  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getRowCount()  /  1;	  int    rows    =    getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
132	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  2);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  2);	  int    rows    =    Math.min(remainingsWeights.length,    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
133	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  1);	  int    rows    =    Math.min(remainingsWeights.length,    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
134	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  3);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  3);	  int    rows    =    Math.min(remainingsWeights.length,    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
135	[BUG]  [BUGGY]  int  rows  =  getColumnCount()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  getColumnCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getColumnCount()  -  1;	  int    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
136	[BUG]  [BUGGY]  int  rows  =  this.getRowCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  this.getRowCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  this.getRowCount();	  int    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
137	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare,  residuals.length  +  1);	  int    rows    =    Math.min(remainders.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
138	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  +  1,  residuals.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  +  1,  residuals.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare  +  1,  residuals.length);	  int    rows    =    Math.min(remainders.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
139	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  1);	  int    rows    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
140	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  3);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  3);	  int    rows    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  }	  for(int    i    =    0;    i    <    2;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    getVisibilityChecker();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  6;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();	  for(int    i    =    0;    i    <    2;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    getVisibilityChecker();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();	  for(int    i    =    0;    i    <    2;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    getVisibilityChecker();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
144	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  8;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  8;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  8;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
146	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  9;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  9;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  9;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  9;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  9;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
148	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results.length,  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.max(results.length,  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(results.length,  3);	  double    chiSquare    =    Math.max(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
149	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0,    len    =    residuals.length;    i    <    len;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	12	None	replace
150	[BUG]  [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0,    len    =    residuals.length;    i    <    len;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	12	None	replace
151	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residualsWeights.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residualsWeights.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0,  len  =  residualsWeights.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0,    len    =    residuals.length;    i    <    len;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	12	None	replace
152	[BUG]  [BUGGY]  Integer  rows  =  getRowCount()  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getRowCount()  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getRowCount()  /  1;	  Integer    rows    =    getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    For(int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  '.class'  expected	33	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  For(int  i  =  0;  i  <  6;  ++i)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  For(int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {  For(int  i  =  0;  i  <  6;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    For(int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  '.class'  expected	33	None	replace
155	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
156	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
157	[BUG]  [BUGGY]  int  rows  =  Math.max(results.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.max(results.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.max(results.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
158	[BUG]  [BUGGY]  int  rows  =  Math.min(resistances.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(resistances.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(resistances.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
159	[BUG]  [BUGGY]  double[][]  rows  =  jF.getSeconds();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF.getSeconds();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getSeconds();	  double[][]    rows    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
160	[BUG]  [BUGGY]  double[][]  rows  =  jF.getRaws();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF.getRaws();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getRaws();	  double[][]    rows    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
161	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  chiSquare  +  1);	  int    rows    =    Math.min(remainings.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
162	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare,  0);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  chiSquare,  0);	  int    rows    =    Math.min(remainings.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.ranges.length;  ++i)  {  [CE]  cannot  find  symbol  ranges  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.ranges.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.ranges.length;  ++i)  {	  for(int    i    =    0;    i    <    this.ranges;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  ranges	94	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  [CE]  cannot  find  symbol  periods  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods;  ++i)  {	  for(int    i    =    0;    i    <    this.ranges;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  periods	94	None	replace
165	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.cols.length;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  this.cols.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  this.cols.length;  ++i)  {	  for(int    i    =    0;    i    <    this.cols.length;    ++i)    {    	non-compiled	[CE]  '.class'  expected	54	None	replace
166	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    For(int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
167	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRawRemainders();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRawRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRawRemainders();	  double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
168	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRemainders()  +  1;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRemainders()  +  1;	  double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
169	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getMatrix();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getMatrix();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getMatrix();	  double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  For(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  For(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    For(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  	non-compiled	[CE]  >  expected	7	None	add
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  residuesWeights.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  residuesWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    for(int  i  =  0;  i  <  residuesWeights.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
175	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare,  0);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  chiSquare,  0);	  int    rows    =    Math.min(results.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
176	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare,  results.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare,  results.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare,  results.length);	  int    rows    =    Math.min(results.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
177	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare.length,  results.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare.length,  results.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare.length,  results.length);	  int    rows    =    Math.min(results.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	88	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  continue;  }  [CE]  cannot  find  symbol  remainings  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  continue;  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  continue;  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	88	None	replace
180	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  if(cols    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	37	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  For(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  For(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    For(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	67	None	add
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	67	None	add
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    for(int  i  =  0;  i  <  this.rows  +  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    for(int  i  =  0;  i  <  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  For(int  i  =  0;  i  <  1;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  For(int  i  =  0;  i  <  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    For(int  i  =  0;  i  <  1;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	16	None	add
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  i  =  0;  i  <  1;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  i  =  0;  i  <  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    int  i  =  0;  i  <  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    for(int  i  =  0;  i  <  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  one;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  for(int  i  =  0;  i  <  one;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    for(int  i  =  0;  i  <  one;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
191	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	48	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
193	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	48	None	replace
194	[BUG]  [BUGGY]  int  rows  =  getLeftCount();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  getLeftCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getLeftCount();	  int    rows    =    getRowCount()    -    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    for(int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  3;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    For(int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  3;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    for(int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
199	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getRangeParameters();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getRangeParameters();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    VectorialConvergenceChecker  convergenceChecker  =  getRangeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
200	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residuals.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residuals.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residuals.length);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
201	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length,  0);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare,  residuals.length,  0);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
202	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare,  1);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
203	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residualsWeights.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residualsWeights.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare,  0,  residualsWeights.length);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
205	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Pentru(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	106	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols.length  +  1;  ++i)  {  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols.length  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols.length  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	56	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  *  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.cols  *  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
210	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  *  1;  ++i)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  *  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols  *  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols  +  2;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols.length;  ++i)  {  int  i  =  0;  i  <  this.cols.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols.length;  ++i)  {  int  i  =  0;  i  <  this.cols.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols.length;  ++i)  {  int  i  =  0;  i  <  this.cols.length;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
214	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  i  =  0;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
217	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRawParameters();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRawParameters();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRawParameters();	  double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    7;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    7;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    7;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows!=  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows!=  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    if(this.rows!=  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows  ==  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows  ==  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    if(this.rows  ==  0)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  int  i  =  this.rows  +  1;  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  int  i  =  this.rows  +  1;  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    int  i  =  this.rows  +  1;  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
224	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  remainings.length;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	48	None	replace
225	[BUG]  [BUGGY]  Integer  rows  =  getColumnsCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getColumnsCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumnsCount();	  Integer    rows    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }  [CE]  cannot  find  symbol  remainingsWeights  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	81	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [CE]  cannot  find  symbol  remainingsWeights  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  continue;  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	81	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }  [CE]  cannot  find  symbol  resultsWeights  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows  ==  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	81	None	replace
232	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.length]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.length]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.length]);	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
233	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.size()  ]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().toArray(new  double[remaindersWeights.size()  ]);	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainings.length;  ++i)  {  if(remainings[i]  >  0)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
238	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    if(results[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols!=  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols!=  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    if(this.cols!=  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    if(this.cols  ==  0)  {  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.cols!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.cols!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.cols!=  null)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.cols!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.cols!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.cols!=  null)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  [CE]  cannot  find  symbol  remainders  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remainders	18	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  final  double  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  final  double  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  final  double  i  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  chiSquare  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  chiSquare  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  int  chiSquare  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
248	[BUG]  [BUGGY]  int  rows  =  Math.min(resultsWeights.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(resultsWeights.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(resultsWeights.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
249	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
250	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [CE]  cannot  find  symbol  results  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(results[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0,    len    =    residuals.length;    i    <    len;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	12	None	replace
251	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
252	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  1;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
253	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  2;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  2;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    1;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  2;  i  <  this.cols;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
254	[BUG]  [BUGGY]  Integer  rows  =  getRangeColumnCount();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getRangeColumnCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getRangeColumnCount();	  Integer    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
255	[BUG]  [BUGGY]  Integer  rows  =  getRangeCount();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getRangeCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getRangeCount();	  Integer    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.cols  +  3;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  3;  ++i)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols  +  3;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
258	[BUG]  [BUGGY]  Double[][]  rows  =  jF.getVariants();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Double[][]  rows  =  jF.getVariants();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Double[][]  rows  =  jF.getVariants();	  Double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    5;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
260	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
265	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(resultsWeights.length,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.max(resultsWeights.length,  0);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(resultsWeights.length,  0);	  double    chiSquare    =    Math.max(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
266	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(resultsWeights,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.max(resultsWeights,  0);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(resultsWeights,  0);	  double    chiSquare    =    Math.max(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  For(int  i  =  0;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    For(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  '.class'  expected	19	None	replace
268	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(results[i]);  }  [CE]  cannot  find  symbol  results  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(results[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(results[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	51	None	replace
269	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  cannot  find  symbol  results  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	51	None	replace
270	[BUG]  [BUGGY]  if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	51	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  int  i  =  0;  i  <  this.rows.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  9;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  9;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  9;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  4;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    for(int    i    =    0;    i    <    8;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
275	[BUG]  [BUGGY]  int  rows  =  Math.min(resultsWeights.length,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(resultsWeights.length,  2);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(resultsWeights.length,  2);	  int    rows    =    Math.min(remainingsWeights.length,    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
277	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
278	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    if(resultsWeights[i]  >  0)  {  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
279	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
280	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    4;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  4;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
281	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  4;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();	  for(int    i    =    0;    i    <    2;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    getVisibilityChecker();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
282	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  JF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  JF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  JF,  cols);  }	  if(cols!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	60	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remaindersWeights.length;  ++i)  {  [CE]  cannot  find  symbol  remaindersWeights  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remaindersWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remaindersWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remaindersWeights	8	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {  [CE]  cannot  find  symbol  remainingsWeights  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  remainingsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    residualsWeights.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	8	None	replace
285	[BUG]  [BUGGY]  double[][]  rows  =  jF.getChiSquares();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF.getChiSquares();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getChiSquares();	  double[][]    rows    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
286	[BUG]  [BUGGY]  double[][]  rows  =  jF.getVariants();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF.getVariants();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getVariants();	  double[][]    rows    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  chiSquare  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  chiSquare  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  chiSquare  =  0;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  final  double  chiSquare  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  final  double  chiSquare  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  final  double  chiSquare  =  0;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
289	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.rows.length;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  this.rows.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  this.rows.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows.length;    ++i)    {    	non-compiled	[CE]  '.class'  expected	66	None	replace
290	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  *  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare  *  1);	  int    rows    =    Math.min(remainders.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
291	[BUG]  [BUGGY]  if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [CE]  cannot  find  symbol  results  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }	  if(remainings    ==    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	11	None	replace
292	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
293	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  2;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  For(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    For(int    i    =    0;    i    <    6;    ++i)    {    	non-compiled	[CE]  '.class'  expected	33	None	replace
295	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(results[i]);  }  [CE]  cannot  find  symbol  results  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(results[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(results[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	49	None	replace
296	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariants();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getVariants();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getVariants();	  double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
297	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  4);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double  chiSquare  =  Math.min(results.length,  4);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  4);	  double    chiSquare    =    Math.min(results.length,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
298	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  if(this.rows!=  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
299	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
300	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  if(this.rows!=  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.rows!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.rows!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  if(this.rows!=  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results.length!=  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results.length!=  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    if(results.length!=  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
303	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    if(results[i]  >  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results.length  ==  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(results.length  ==  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    if(results.length  ==  0)  {  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
305	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  2  -  chiSquare);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainings.length,  2  -  chiSquare);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  2  -  chiSquare);	  int    rows    =    Math.min(remainings.length,    2);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	88	None	replace
307	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
308	[BUG]  [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	106	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  2;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  For(int  i  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    For(int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
310	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [CE]  cannot  find  symbol  results  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(results[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	10	None	replace
311	[BUG]  [BUGGY]  int  rows  =  getColumnsCount();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  getColumnsCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getColumnsCount();	  int    rows    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
312	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare,  residuals.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare,  residuals.length);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
313	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
314	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  cols;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	  for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  i  =  0;  ++i)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  i  =  0;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    int  i  =  0;  ++i)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  residualsWeights  =  getRemainingsWeights(i);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  int  residualsWeights  =  getRemainingsWeights(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    int  residualsWeights  =  getRemainingsWeights(i);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
317	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.length]);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.length]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.length]);	  double[][]    residuals    =    getRemainings();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
318	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.size()  ]);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.size()  ]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainings().toArray(new  double[remainingsWeights.size()  ]);	  double[][]    residuals    =    getRemainings();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
319	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residualsWeights);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residualsWeights);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare.length,  residualsWeights);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
320	[BUG]  [BUGGY]  Integer  rows  =  getLeftCount();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Integer  rows  =  getLeftCount();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getLeftCount();	  Integer    rows    =    getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  if(this.cols!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  if(this.cols!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  iterations;  ++i)  {  if(this.cols!=  null)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
322	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRows();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRows();	  double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  Residues.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  for(int  i  =  0;  i  <  Residues.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    residuals.length;    ++i)    {    for(int  i  =  0;  i  <  Residues.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  iterations;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    for(int    i    =    0;    i    <    this.cols);    ++i)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
325	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  iterations;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    for(int    i    =    0;    i    <    this.cols);    ++i)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
326	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	81	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows  ==  null)  {  }  [CE]  cannot  find  symbol  periods  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows  ==  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows  ==  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  periods	81	None	replace
328	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  continue;  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows  ==  null)  {  continue;  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows    ==    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	81	None	replace
329	[BUG]  [BUGGY]  Double[][]  rows  =  jF.getRemainders();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  Double[][]  rows  =  jF.getRemainders();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Double[][]  rows  =  jF.getRemainders();	  Double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
330	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  columns;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  columns;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols!=  null)  {  for(int  i  =  0;  i  <  columns;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	  if(cols!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	60	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.cols  -  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  -  1;  ++i)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols  -  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
333	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  2);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare,  2);	  int    rows    =    Math.min(remainders.length,    chiSquare,    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
334	[BUG]  [BUGGY]  double[][]  rows  =  jF,  cols.getRows();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF,  cols.getRows();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF,  cols.getRows();	  double[][]    rows    =    jF,    cols.getColumns();    	non-compiled	[CE]  ';'  expected	47	None	replace
335	[BUG]  [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	10	None	replace
336	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(results[i]  >  0)  {  }  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  if(results[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  4;  ++i)  {  if(results[i]  >  0)  {  }	  for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]    >    0)    {    for(int    i    =    0;    i    <    6;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  results	87	None	replace
337	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  results  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0,    len    =    residuals.length;    i    <    len;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	12	None	replace
338	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getChiSquares();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  jF.getChiSquares();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getChiSquares();	  double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
339	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare  *  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare  *  chiSquare  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  chiSquare  *  chiSquare  +  1);	  int    rows    =    Math.min(remainings.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
340	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare.length);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare.length);	  int    rows    =    Math.min(chiSquare.length,    residuals.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
341	[BUG]  [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]    *    period);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	replace
342	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  *  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  *  chiSquare  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare  *  chiSquare  +  1);	  int    rows    =    Math.min(remainders.length,    chiSquare    +    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.rows  -  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	68	1	replace
344	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  -  1;  ++i)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  -  1;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows  -  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	68	1	replace
345	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  i  =  0;  i  <  this.rows;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
346	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.axisCount;  ++i)  {  [CE]  cannot  find  symbol  axisCount  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.axisCount;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.axisCount;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  axisCount	20	None	replace
347	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().toArray(remainders);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().toArray(remainders);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().toArray(remainders);	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
348	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remainders.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().toArray(new  double[remainders.size()  ]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().toArray(new  double[remainders.size()  ]);	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
349	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders().values();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  residuals  =  getRemainders().values();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders().values();	  double[][]    residuals    =    getRemainders();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    <    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
351	[BUG]  [BUGGY]  int  rows  =  getColumnCount()  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  getColumnCount()  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getColumnCount()  -  2;	  int    rows    =    getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [CE]  cannot  find  symbol  remainings  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  if(remainings[i]  >  0)  {  }	  for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]    >    0)    {    for(int    i    =    0;    i    <    2;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  remainings	88	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    1;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
354	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  if(this.rows!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  if(this.rows!=  null)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainders.length;  ++i)  {  if(this.rows!=  null)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  else  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  else  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  else  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=    null)    {    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    for(int    i    =    0;    i    <    this.cols;    ++i)    {    }    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.restrictionWeights.length;  ++i)  {  [CE]  cannot  find  symbol  restrictionWeights  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.restrictionWeights.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.restrictionWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    this.resultsWeights.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  restrictionWeights	92	None	replace
357	[BUG]  [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.min(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	51	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  6;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    int    i    =    0;    i    <    2;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
359	[BUG]  [BUGGY]  double[][]  rows  =  jF.getStandardRemainders();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  double[][]  rows  =  jF.getStandardRemainders();  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getStandardRemainders();	  double[][]    rows    =    jF.getRemainders();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
360	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  cannot  find  symbol  parameters  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  for(int    i    =    0;    i    <    this.periods.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  parameters	83	None	replace
361	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.axis;  ++i)  {  [CE]  cannot  find  symbol  axis  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.axis;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.axis;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  axis	18	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    For(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  '.class'  expected	24	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  rows);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  rows);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  rows);  }	  for(int    i    =    0;    i    <    residuals.length;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
364	[BUG]  [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	49	None	replace
365	[BUG]  [BUGGY]  if(chiSquare  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(chiSquare  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(chiSquare  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings    ==    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	11	None	replace
366	[BUG]  [BUGGY]  if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  results  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(results  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	  if(remainings    ==    null)    {    for(int    i    =    0;    i    <    residuals.length;    i++)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  results	11	None	replace
367	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights;  ++i)  {  [CE]  cannot  find  symbol  remainingsWeights  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int    i    =    0;    i    <    this.rows);    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	22	None	replace
368	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    3;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
369	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.rows!=  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	80	None	replace
371	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  }	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=    null)    {    for(int    i    =    0;    i    <    this.rows;    ++i)    {    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	80	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows    +    1;    ++i)    {    if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
373	[BUG]  [BUGGY]  int  rows  =  Math.max(remainingsWeights.length,  chiSquare);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;      [BUGGY]  int  rows  =  Math.max(remainingsWeights.length,  chiSquare);  [BUGGY]      for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.max(remainingsWeights.length,  chiSquare);	  int    rows    =    Math.min(remainingsWeights.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
