bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  5;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  5;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  3;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  3;  ++i)  {	  for(int    i    =    0;    i    <    6;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  residuals.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residualsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  [CE]  cannot  find  symbol  remainingsWeights  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	7	None	replace
10	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	      	non-compiled	[CE]  cannot  find  symbol  remainings	8	None	replace
11	[BUG]  [BUGGY]  if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings  ==  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	      	non-compiled	[CE]  cannot  find  symbol  remainings	8	None	replace
12	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0,  len  =  residuals.length;  i  <  len;  i++)  {  chiSquare  +=  Math.max(remainings[i]);  }	      	non-compiled	[CE]  cannot  find  symbol  remainings	8	None	replace
13	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [CE]  cannot  find  symbol  remainings  [FE]                      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  residuals.length;  i++)  {  chiSquare  +=  Math.max(remainings[i]  *  period);  }	      	non-compiled	[CE]  cannot  find  symbol  remainings	8	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  4;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  4;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  1;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  1;  ++i)  {	  for(int    i    =    0;    i    <    2;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int  i  =  0;  i  <  this.rows;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  For(int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    For(int  i  =  0;  i  <  this.rows;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    int  i  =  0;  i  <  this.rows;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.rows);  ++i)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  for(int  i  =  0;  i  <  this.rows);  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    for(int  i  =  0;  i  <  this.rows);  ++i)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    for(int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  For(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    For(int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  for(int  i  =  0;  i  <  this.cols);  ++i)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  for(int  i  =  0;  i  <  this.cols);  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    for(int  i  =  0;  i  <  this.cols);  ++i)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
27	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(results.length,  0);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  0);	      int    rows    =    Math.min(remainings.length,    0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainings.length,  1);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  1);	      int    rows    =    Math.min(remainings.length,    0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainings.length,  2);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  2);	      int    rows    =    Math.min(remainings.length,    0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  double[][]  rows  =  jf.getRows();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  jf.getRows();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jf.getRows();	      double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  Double[][]  rows  =  jF.getRows();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  Double[][]  rows  =  jF.getRows();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Double[][]  rows  =  jF.getRows();	      double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    for(int  i  =  0;  i  <  6;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  For(int  i  =  0;  i  <  6;  ++i)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  For(int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    For(int  i  =  0;  i  <  6;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	19	None	add
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  7;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    for(int  i  =  0;  i  <  7;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  int  i  =  0;  i  <  6;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    int  i  =  0;  i  <  6;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  5;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    for(int  i  =  0;  i  <  5;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
37	[BUG]  [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
38	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  '.class'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols  ==  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residuals.length;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  int  rows  =  getRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  getRowCount()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getRowCount()  -  1;	      int    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  int  rows  =  getRowCount()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  getRowCount()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getRowCount()  +  1;	      int    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  int  rows  =  getRowCount()  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  getRowCount()  -  2;  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getRowCount()  -  2;	      int    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
44	[BUG]  [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(results.length,  chiSquare);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(results.length,  chiSquare);	      int    rows    =    Math.min(remainings.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  chiSquare);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  chiSquare);	      int    rows    =    Math.min(remainings.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residuals.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(chiSquare.length,  residuals.length);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(chiSquare.length,  residuals.length);	      int    rows    =    Math.min(remainings.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  double[][]  rows  =  jF,  cols.getColumns();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  jF,  cols.getColumns();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF,  cols.getColumns();	      double[][]    rows    =    jF.getColumns();    	non-compiled	[CE]  ';'  expected	18	None	replace
48	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	For(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  '.class'  expected	10	None	replace
49	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	10	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  cannot  find  symbol  remainings	10	None	replace
52	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare  +  1);	      int    rows    =    Math.min(remainders.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainders.length,  chiSquare,  0);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainders.length,  chiSquare,  0);	      int    rows    =    Math.min(remainders.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols.length;  ++i)  {  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols.length;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.cols  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  1;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
58	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  1;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  1;  i  <  this.cols;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
59	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	12	None	replace
60	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(cols!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	12	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    for(int  i  =  0;  i  <  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  2;  ++i)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  For(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    For(int  i  =  0;  i  <  2;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    int  i  =  0;  i  <  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  for(int  i  =  0;  i  <  3;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    for(int  i  =  0;  i  <  3;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    VectorialConvergenceChecker  convergenceChecker  =  getVisibilityChecker();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	add	for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.rows  +  1;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
69	[BUG]  [BUGGY]  Integer  rows  =  getRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  Integer  rows  =  getRowCount()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getRowCount()  -  1;	      Integer    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  Integer  rows  =  getRowCount()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  Integer  rows  =  getRowCount()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getRowCount()  +  1;	      Integer    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
71	[BUG]  [BUGGY]  Integer  rows  =  getColumnCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  Integer  rows  =  getColumnCount();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	Integer  rows  =  getColumnCount();	      Integer    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double  chiSquare  =  Math.min(results.length,  i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  i);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results.length,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double  chiSquare  =  Math.max(results.length,  0);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(results.length,  0);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results.length,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double  chiSquare  =  Math.min(results.length,  0);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.min(results.length,  0);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results.length,  i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double  chiSquare  =  Math.max(results.length,  i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double  chiSquare  =  Math.max(results.length,  i);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  }  for(int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
79	[BUG]  [BUGGY]  double[][]  rows  =  this.jF.getRows();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  this.jF.getRows();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  this.jF.getRows();	      double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows  ==  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.rows;  ++i)  {  if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.rows;    ++i)    {    if(this.rows!=  null)  {  for(int  i  =  0;  i  <  this.rows;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  [CE]  cannot  find  symbol  periods  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.periods.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.periods.length;  ++i)  {	  for(int    i    =    0;    i    <    this.cols;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  periods	4	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.max(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  if(results[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    if(results[i]  >  0)  {  for(int  i  =  0;  i  <  6;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  <  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  <  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]  <  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    2;    ++i)    {    if(remainings[i]  >  0)  {  for(int  i  =  0;  i  <  2;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
91	[BUG]  [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainingsWeights.length,  0);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainingsWeights.length,  0);	      int    rows    =    Math.min(remainings.length,    0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  [CE]  cannot  find  symbol  resultsWeights  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.resultsWeights.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	7	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainings.length;  ++i)  {  [CE]  cannot  find  symbol  remainings  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.remainings.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.remainings.length;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  remainings	2	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.ranges;  ++i)  {  [CE]  cannot  find  symbol  ranges  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.ranges;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.ranges;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  ranges	2	None	replace
95	[BUG]  [BUGGY]  double[][]  rows  =  this.jF.getColumns();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  this.jF.getColumns();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  this.jF.getColumns();	      double[][]    rows    =    jF.getColumns();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  int  rows  =  getColumnCount();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  getColumnCount();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  getColumnCount();	      int    rows    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.cols;  ++i)  {  if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    this.cols;    ++i)    {    if(this.cols!=  null)  {  for(int  i  =  0;  i  <  this.cols;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  residualsWidths.length;  ++i)  {  [CE]  cannot  find  symbol  residualsWidths  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  residualsWidths.length;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  residualsWidths.length;  ++i)  {	  for(int    i    =    0;    i    <    remainings.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  residualsWidths	7	None	replace
99	[BUG]  [BUGGY]  double[][]  rows  =  jf.getColumns();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  jf.getColumns();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jf.getColumns();	      double[][]    rows    =    jF.getColumns();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.fields;  ++i)  {  [CE]  cannot  find  symbol  fields  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.fields;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int  i  =  0;  i  <  this.fields;  ++i)  {	  for(int    i    =    0;    i    <    this.rows;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  fields	2	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  for(int  i  =  0;  i  <  6;  ++i)  {  for(int  i  =  0;  i  <  8;  ++i)  {  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	for(int    i    =    0;    i    <    6;    ++i)    {    for(int  i  =  0;  i  <  8;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
102	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  residuals  =  jF.getRemainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getRemainders();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainders();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  residuals  =  getRemainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainders();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
104	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  residuals  =  jF.getVariables();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  jF.getVariables();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
105	[BUG]  [BUGGY]  double[][]  residuals  =  getRemainings();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  residuals  =  getRemainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  residuals  =  getRemainings();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
106	[BUG]  [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]);  }	      if(rows!=    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	10	None	replace
107	[BUG]  [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	if(rows!=  null)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainings[i]  *  jF,  cols);  }	      if(rows    ==    null)    {    for(int    i    =    0;    i    <    rows;    ++i)    {    chiSquare    +=    Math.max(remainings[i]    *    jF,    cols);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
108	[BUG]  [BUGGY]  double[][]  rows  =  jF.getRemainders();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  double[][]  rows  =  jF.getRemainders();  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	double[][]  rows  =  jF.getRemainders();	      double[][]    rows    =    jF.getRows();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
109	[BUG]  [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;    [BUGGY]  int  rows  =  Math.min(remainings.length,  chiSquare  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	256	256	1	replace	int  rows  =  Math.min(remainings.length,  chiSquare  +  1);	      int    rows    =    Math.min(remainings.length,    chiSquare);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
