projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(int.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getRowCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceVisibilityVisibilityVisibilityVisibilityVisibilityVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(value));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker();setOptional(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker();setOptional(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceVisibilityVisibilityVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceVisibilityVisibilityVisibilityVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceVisibilityVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFrame.this.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.addOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMinIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(targetValues));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(resultsWeights));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MAX_VALUE,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMinEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialValueCheckerjF=newVectorialVectorialValueChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian,cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getRowCount()-1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=this.function.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(int.MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimizerEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MAX_VALUE,MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function,jacobian.evaluate(this));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,checker.setOptionalValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());this.remainings=newVectorialRemainingChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialRemainingChecker());this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOptimizer(checker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("Invalid
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(checker,newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(checker!=null){jF.setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialResults();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);Set<Integer>objectiveEvaluations=newHashSet<Integer>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialFunction(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=this.function.getRowCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jFrame.setOptionalValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValues(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(jacobian.evaluate(function));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(checker==null){jF.setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(newVectorialVectorialFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setmaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(values));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(target));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(remainingsWeights));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=functions.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialConvergenceChecker(),checker,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialConvergenceChecker(),checker,function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialConvergenceChecker(),checker,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(true,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.results=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.results=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(maxEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getColumnCount()-1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getColumnCount()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectEvaluations=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.addOptimizer(newVectorialMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOptimizer(checker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOptimizer(checker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOpti
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true,cost,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialConvergenceCheckerjF=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setVectorialValue(newVectorialVectorialFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectEvaluations=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValues(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValues(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValues(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimizerEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian,cost),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFrame.this.setOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMinEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MIN_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMinEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(deFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(DeFAULT_MAX_ITERATIONS),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialConvergenceCheckerjF=newVectorialVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jacobian.setOptionalValue(jF.evaluate(function));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jf.setOptionalValue(function.evaluate(jacobian));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MIN_VALUE);setMinIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialFunction(),function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+1);setMaxIterations(Integer.MAX_VALUE+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+1);setMinIterations(Integer.MAX_VALUE+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+1);setMaxIterations(Integer.MIN_VALUE+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+1);setMaxIterations(Integer.MAX_VALUE+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialVectorialVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MESSAGE_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119Set<Integer>objectiveEvaluations=newHashSet<Integer>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS);Set<Integer>objectiveEvaluations=newHashSet<Integer>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);ArrayList<Integer>objectiveEvaluations=newArrayList<Integer>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(newVectorialMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialMatrixFunction(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MAX_VALUE));setMaxIterations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MAX_VALUE));setMinIterations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MAX_VALUE));setMaxIterations(newInteger(Integer.MIN_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MIN_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Definable.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(totals));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MIN_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(newInteger(Integer.MAX_VALUE),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,checker.setVectorialValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectEvaluations=newVectorialConvergenceChecker();setOptional(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectEvaluations=newVectorialConvergenceChecker();setOptional(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMinEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MAX_VALUE),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(newInteger(Integer.MIN_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(true,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestrictionEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimization(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFrame.setOptionalValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MIN_VALUE,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=function.getRowCount()/1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119For(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119For(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIl
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIl
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.value,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(),checker,function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(),checker,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialConvergenceChecker(),checker,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MAX_VALUE,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MIN_VALUE,MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.remainings=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);setMinEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);SetMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);setMaxEvaluations(DEFAULT_MIN_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function,cost.evaluate(this));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function,jacobian.evaluate(this),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119For(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119For(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(Integer.MAX_VALUE,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialRemainingChecker());this.remainings=newVectorialRemainingChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialConvergenceVisibilityVisibilityVisible.setOptimizer(newVectorialConvergenceVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFrame.setOptimizer(newVectorialConvergenceVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(targetValues),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(targetValues,cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectorialFunction(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectorialFunction().getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectorialFunction(function.doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("Invalid
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("Invalid
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);setMaxIterations(Integer.MIN_VALUE);setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);setMinIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialValueCheckerjF=newVectorialVectorialValueChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialValueCheckerjF=newVectorialVectorialValueChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialValueCheckerjF=newVectorialVectorialValueChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMinimumIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMinIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MIN_VALUE,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(this,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialVectorialFunction(),function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=(VectorialVectorialFunction)newVectorialVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorFunctionjF=newVectorialVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(newInteger(Integer.MAX_VALUE),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimizerEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function,jacobian.evaluate(cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian,targetValues));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setRemainders(Integer.MAX_VALUE);setRemainders(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setMinIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFramejFrame=newVectorialVectorialValueChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,checker.setOptionalValue(newVectorialMultivariateVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,checker.setOptionalValue(newVectorialLeastSquareValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.remainings=checker.newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.addOptimizer(checker,newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.addOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setRestriction(DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.value,this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS+1);setMaxEvaluations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=checker.newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.targetValues=newVectorialConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialMatrixFunction(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(newVectorialSquareMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setRemainders(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setRestriction(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setRestriction(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(newVectorialMultivariateVectorialFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(targetEvaluations==null){setMaxIterations(Integer.MAX_VALUE);}else{setMaxIterations(Integer.MAX_VALUE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(targetEvaluations==null){setMaxIterations(Integer.MAX_VALUE);}else{setMinIterations(Integer.MAX_VALUE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(targetEvaluations==null){setMaxIterations(Integer.MAX_VALUE);}else{setMaxIterations(Integer.MIN_VALUE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(SECONDS_DEFAULT);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(Integer.MAX_VALUE+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DeFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFrame.this.setOptimizer(checker,newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinIterations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialRemainingChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119ArrayList<Integer>objectiveEvaluations=newArrayList<Integer>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialPrecisionChecker());this.remainings=newVectorialRemainingChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalStateException("
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=functions.getRowCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(totalsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MIN_VALUE);setMinIterations(Integer.MIN_VALUE);setMaxIterations(Integer.MIN_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOptimizer(checker);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOpti
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){setOptimizer
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jacobian.setOptionalValue(jacobian.evaluate(function));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Decimal.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost,this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(Integer.MAX_VALUE,MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119null=newVectorialConvergenceChecker();this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MIN_VALUE,MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,checker.setOptionalValue(newVectorialVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true,cost,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(true,cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker();setOptional(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119JFunctionjF=newVectorialConvergenceVisibilityVisible();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker();setOptional(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialResults());this.results=newVectorialResults();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptimizer(newVectorialOptimizer());this.results=newVectorialResults();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.results=newVectorialResults();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.value,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.remainings=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(Integer.MIN_VALUE,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectorialFunction(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialFunctionjF=newVectorialVectororialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.results=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_IMAGES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(DEFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jf.setOptionalValue(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalValues(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF,function.setOptionalValue(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost,this.remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(this.cost,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(Integer.MAX_VALUE,DEFAULT_MASK_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jFrame.setOptimizer(newVectorialRemainingChecker());this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(newInteger(Integer.MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinEvaluations(Integer.MAX_VALUE,DEFAULT_MIN_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(function.getOptimizer()!=null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIl
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119if(remainings==null){for(inti=0;i<function.size();i++){VectorialConvergenceCheckerchecker=function.getOptimizer();if(checker!=null){thrownewIl
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jf.setOptimizer(newVectorialConvergenceVisibilityVisible());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimizerEvaluations(DEFAULT_IMAGES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptimizerEvaluations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectiveEvaluations=newVectorialConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMinimumIterations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119VectorialVectorialValueCheckerjF=newVectorialVectorialValueChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(true,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(totals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(Integer.MAX_VALUE);setMaxIterations(Integer.MAX_VALUE);setStandardEvaluations(Integer.MAX_VALUE);setStandardEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jacobian.setOptionalValue(function.evaluate(jacobian));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119intcols=this.function.getRowCount()-1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119this.objectionEvaluations=newVectorialConvergenceChecker(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setOptionalEvaluations(DeFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(false,cost,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setStandardEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxIterations(DEFAULT_MAX_ITERATIONS);setOptionalEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setStandardEvaluations(DEFAULT_MASK_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setMaxEvaluations(DEFAULT_MAX_ITERATIONS);setOptionalEvaluations(DEFAULT_MAX_ITERATIONS);setOptionalEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian,cost),jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java119jF.setOptionalValue(function.evaluate(jacobian,jacobianEvaluations));
