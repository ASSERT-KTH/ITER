bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
3	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;	  int    resultEvaluations    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
4	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;	  int    resultEvaluations    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
5	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  +  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  +  1;	  int    resultEvaluations    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	51	None	replace
8	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
9	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  >  expected	12	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  i++)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  i++)  {  incrementIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations.length;  i++)  {  incrementIterationsCounter();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  int[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
13	[BUG]  [BUGGY]  long[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  long[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	long[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
15	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  >  expected	34	None	replace
16	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
17	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  /  2][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  /  2][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  /  2][0];	  this.resultEvaluations    =    new    double[iterations.size()    *    2][0];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	92	None	replace
20	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
21	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  throw  new  OptimizationException( " ");  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  throw  new  OptimizationException( " ");  }	  double    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    throw    new    OptimizationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  ';'  expected	42	None	replace
26	[BUG]  [BUGGY]  For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  '.class'  expected	42	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
29	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  int    result    =    this.results.length;    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
30	[BUG]  [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.getMaxIterations()  +  1;	  int    maxIterations    =    iterations.getMaxIterations();    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
31	[BUG]  [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.getMaxIterations()  -  1;	  int    maxIterations    =    iterations.getMaxIterations();    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
32	[BUG]  [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  *  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.getMaxIterations()  *  2;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.getMaxIterations()  *  2;	  int    maxIterations    =    iterations.getMaxIterations();    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
34	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	75	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    ++i)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    ++i)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
37	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  ++cols)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  ++cols)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  iterations.length;  ++cols)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    ++i)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
39	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
40	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  cost);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  ')'  expected	83	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	141	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
51	[BUG]  [BUGGY]  int  cost  =  Math.min(results.size(),  iterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.min(results.size(),  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.min(results.size(),  iterations);	  int    cost    =    Math.min(results.size(),    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
52	[BUG]  [BUGGY]  int  cost  =  Math.max(results.size(),  iterations);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.max(results.size(),  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.max(results.size(),  iterations);	  int    cost    =    Math.min(results.size(),    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
53	[BUG]  [BUGGY]  int  cost  =  Math.min(results.length(),  iterations);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.min(results.length(),  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.min(results.length(),  iterations);	  int    cost    =    Math.min(results.size(),    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
54	[BUG]  [BUGGY]  double  cost  =  Math.min(results.size(),  maxIterations);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  cost  =  Math.min(results.size(),  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  cost  =  Math.min(results.size(),  maxIterations);	  int    cost    =    Math.min(results.size(),    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
55	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainingsCounter,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainingsCounter,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainingsCounter,  maxIterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
56	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainings.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainings.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainings.length,  maxIterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
57	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainings,  iterations);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainings,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainings,  iterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
58	[BUG]  [BUGGY]  int  residualsWeights  =  Math.max(remainings,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.max(remainings,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.max(remainings,  maxIterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
59	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues    	non-compiled	[CE]  ')'  expected	153	None	replace
60	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  <  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues    	non-compiled	[CE]  ')'  expected	153	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
62	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
65	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  checker.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  checker.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  checker.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	46	None	replace
66	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getRawConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getRawConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getRawConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	46	None	replace
67	[BUG]  [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targets.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  <identifier>  expected	144	None	replace
72	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    	non-compiled	[CE]  '.class'  expected	98	None	replace
73	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;	  int    result    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
74	[BUG]  [BUGGY]  int  result  =  iterations.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;	  int    result    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
75	[BUG]  [BUGGY]  int  result  =  this.results.length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  +  1;	  int    result    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
76	[BUG]  [BUGGY]  int  result  =  this.results.length  -  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  2;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  2;	  int    result    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  not  a  statement	89	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
82	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
83	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(targetValues);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(targetValues);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(targetValues);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
84	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(objectives);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(objectives);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(objectives);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
85	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(totals);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(totals);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(totals);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
86	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(values);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(values);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(values);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
87	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    this.cols.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	111	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length  -  1;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length  -  1;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length  -  1;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    this.cols.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	111	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  ')'  expected	64	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  ')'  expected	64	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  ';'  expected	28	None	replace
99	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
100	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  iterations.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  iterations.length;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  iterations.length;	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
101	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  +  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  this.resultEvaluations.length  +  1;	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  '.class'  expected	160	None	replace
103	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	160	None	replace
104	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
105	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
106	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
107	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
108	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  2);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  2);	  this.resultEvaluations    =    Math.max(this.result,    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
109	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  0,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  0,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  0,  maxIterations);	  this.resultEvaluations    =    Math.max(this.result,    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
110	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
112	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  '.class'  expected	140	None	replace
113	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  >  expected	10	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations.length;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations.length;  i++)  {  increaseIterationsCounter();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is!=    	non-compiled	[CE]  ')'  expected	105	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is!=    	non-compiled	[CE]  ')'  expected	105	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is!=    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(vari  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(vari  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(vari	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  ')'  expected	56	None	replace
122	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
125	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  >  expected	109	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
130	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  maxIterations);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.min(this.result,  maxIterations);	  this.resultEvaluations    =    Math.min(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
131	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  MAX_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.min(this.result,  MAX_ITERATIONS);	  this.resultEvaluations    =    Math.min(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
132	[BUG]  [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    iterations    =    maxIterations.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  1][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  1][1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  +  1][1];	  this.resultEvaluations    =    new    double[iterations.size()    ][1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
135	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  throw  new  OptimizationException( " ");  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  throw  new  OptimizationException( " ");  }	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    1)    {    throw    new    OptimizationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  ')'  expected	55	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
143	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
144	[BUG]  [BUGGY]  Integer  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluationsCounter  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
145	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  1][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  1][2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  +  1][2];	  this.resultEvaluations    =    new    double[iterations.size()    ][2];    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
146	[BUG]  [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }	  long    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    throw    new    OptimizationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	33	None	replace
148	[BUG]  [BUGGY]  int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  >  expected	33	None	replace
149	[BUG]  [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  result  =  this.results.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
150	[BUG]  [BUGGY]  int  cost  =  this.results.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  this.results.length  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  this.results.length  -  1;	  int    cost    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
151	[BUG]  [BUGGY]  int  cost  =  iterations.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  iterations.length;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  iterations.length;	  int    cost    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
152	[BUG]  [BUGGY]  double  cost  =  this.results.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  cost  =  this.results.length;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  cost  =  this.results.length;	  int    cost    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
153	[BUG]  [BUGGY]  int  cost  =  this.results.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  this.results.length  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  this.results.length  +  1;	  int    cost    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
155	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
156	[BUG]  [BUGGY]  int  cost  =  Math.max(results.length,  iterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.max(results.length,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.max(results.length,  iterations);	  int    cost    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
157	[BUG]  [BUGGY]  int  cost  =  Math.min(results.length,  iterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.min(results.length,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.min(results.length,  iterations);	  int    cost    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
158	[BUG]  [BUGGY]  double  cost  =  Math.max(results.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  cost  =  Math.max(results.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  cost  =  Math.max(results.length,  maxIterations);	  int    cost    =    Math.max(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
159	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations()  *  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations()  *  1;	  int    objectiveEvaluations    =    function.incrementIterations()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
163	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
164	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(results.length,  iterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(results.length,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(results.length,  iterations);	  int    residualsWeights    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
165	[BUG]  [BUGGY]  int  residualsWeights  =  Math.max(results.length,  iterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.max(results.length,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.max(results.length,  iterations);	  int    residualsWeights    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
166	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainings.length,  iterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainings.length,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainings.length,  iterations);	  int    residualsWeights    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
168	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations()  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations()  /  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations()  /  1;	  int    objectiveEvaluations    =    function.incrementIterations()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations.length;  i  <  len;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    0,    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  not  a  statement	142	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  not  a  statement	142	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
175	[BUG]  [BUGGY]  int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	76	None	replace
176	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  '.class'  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  '.class'  expected	76	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
181	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increasingIterationsCounter();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increasingIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increasingIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increasingIterationsCounter();    }    	non-compiled	[CE]  ';'  expected	99	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increasingIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increasingIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increasingIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increasingIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
183	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i]  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i]	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues[i]    	non-compiled	[CE]  ')'  expected	152	None	replace
184	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues[i]    	non-compiled	[CE]  ']'  expected	152	None	replace
185	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	26	None	replace
186	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	26	None	replace
187	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0]);	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
188	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[0],  targetValues[1]);	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
189	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(maxIterations);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(maxIterations);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
190	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(totals);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(totals);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(totals);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
191	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(this.maxIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(this.maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(this.maxIterations);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
192	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  this.targetValues.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  this.targetValues.iterator();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  this.targetValues.iterator();	  Iterator    <    Integer>    iterations    =    this.results.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
193	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  super.incrementIterationsCounter();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  super.incrementIterationsCounter();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  super.incrementIterationsCounter();	  Iterator    <    Integer>    iterations    =    this.results.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
194	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  this.rows.iterator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  this.rows.iterator();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  this.rows.iterator();	  Iterator    <    Integer>    iterations    =    this.results.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
195	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  maxIterations.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  maxIterations.iterator();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  maxIterations.iterator();	  Iterator    <    Integer>    iterations    =    this.resultEvaluations.iterator();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
196	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  >  expected	24	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i  +  1);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i  +  1);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
200	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  MAX_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  MAX_ITERATIONS);	  this.resultEvaluations    =    Math.max(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  incrementIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
202	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  incrementIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  ';'  expected	40	None	replace
203	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  increaseIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
204	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  *  2;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  *  2;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  *  2;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
208	[BUG]  [BUGGY]  For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  '.class'  expected	6	None	replace
209	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
210	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  >  expected	35	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
213	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
214	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(true);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(true);	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
215	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
216	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  >  expected	81	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i  +  1);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i  +  1);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
218	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  >  expected	125	None	replace
219	[BUG]  [BUGGY]  int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    cols    =    0;    cols    <    iterations.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  >  expected	63	None	replace
220	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  iterations.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    cols    =    0;    cols    <    iterations.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  ')'  expected	85	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
225	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  0,  iterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  0,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  0,  iterations);	  this.resultEvaluations    =    Math.max(this.result,    0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
229	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  >  expected	21	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  maxIterations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  maxIterations);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  maxIterations);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
231	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterationsCounter()  -  1;	  int    objectiveEvaluations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
232	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter(iterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter(iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterationsCounter(iterations);	  int    objectiveEvaluations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
233	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterationsCounter();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterationsCounter();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterationsCounter();	  int    objectiveEvaluations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
234	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  }	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    increaseIterations(objectitiveEvaluations[i]    	non-compiled	[CE]  ')'  expected	126	None	replace
235	[BUG]  [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    increaseIterations(objectitiveEvaluations[i]    	non-compiled	[CE]  ')'  expected	126	None	replace
236	[BUG]  [BUGGY]  this.targetValues.clear();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.clear();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.clear();	  this.targetValues.incrementIterations();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
237	[BUG]  [BUGGY]  this.targetValues.remove(iterations);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.remove(iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.remove(iterations);	  this.targetValues.incrementIterations();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
238	[BUG]  [BUGGY]  iterations  =  this.results.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  iterations  =  this.results.iterator();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	iterations  =  this.results.iterator();	  iterations    =    this.results.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
239	[BUG]  [BUGGY]  iterations  =  this.results.iterator().next()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  iterations  =  this.results.iterator().next()  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	iterations  =  this.results.iterator().next()  -  1;	  iterations    =    this.results.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
241	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(0,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(0,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
243	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
244	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
245	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
246	[BUG]  [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }	  long    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    throw    new    OptimizationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
247	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  int    result    =    this.resultEvaluations.size();    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
248	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
249	[BUG]  [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  resultEvaluations  =  this.resultEvaluations.length;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
250	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  '.class'  expected	131	None	replace
251	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
252	[BUG]  [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  result  =  this.results.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  result  =  this.results.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(1);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(1);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
254	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  ++i)  {  increaseIterationsCounter(0);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(0);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is!=  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is!=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is!=	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  not  a  statement	5	None	replace
259	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size()  -  1;	  int    resultEvaluations    =    this.resultEvaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
260	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.size();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.size();	  int    resultEvaluations    =    this.resultEvaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
261	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  +  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size()  +  1;	  int    resultEvaluations    =    this.resultEvaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
262	[BUG]  [BUGGY]  int  maxIterations  =  iterations.iterator().next()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.iterator().next()  -  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.iterator().next()  -  1;	  int    maxIterations    =    iterations.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
263	[BUG]  [BUGGY]  int  maxIterations  =  iterations.iterator().next()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.iterator().next()  +  1;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.iterator().next()  +  1;	  int    maxIterations    =    iterations.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.resultEvaluations.length;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
266	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  0,  isIterations  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  isIterations  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  isIterations  =  iterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
269	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
270	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  >  expected	7	None	replace
271	[BUG]  [BUGGY]  int  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  int    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  >  expected	48	None	replace
272	[BUG]  [BUGGY]  int  cols  =  iterations.length  -  1;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length  -  1;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length  -  1;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  int    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  >  expected	48	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations  +  1;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0,  isIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  isIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  isIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
275	[BUG]  [BUGGY]  For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  '.class'  expected	30	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
277	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
278	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  >  expected	110	None	replace
279	[BUG]  [BUGGY]  this.targetValues.incrementIterations(maxIterations);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(maxIterations);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
280	[BUG]  [BUGGY]  this.targetValues.incrementIterations(remainings);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(remainings);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(remainings);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
281	[BUG]  [BUGGY]  this.targetValues.incrementIterations(totals);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(totals);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(totals);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
282	[BUG]  [BUGGY]  this.targetValues.incrementIterations(maxIterations,  iterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(maxIterations,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(maxIterations,  iterations);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  convergenceChecker.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  convergenceChecker.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  convergenceChecker.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	47	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
285	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
286	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker  ==  null)  {	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
287	[BUG]  [BUGGY]  convergenceChecker  =  function.getVectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  convergenceChecker  =  function.getVectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	convergenceChecker  =  function.getVectorialConvergenceChecker();	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
288	[BUG]  [BUGGY]  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	32	None	replace
289	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(converenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(converenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(converenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	32	None	replace
290	[BUG]  [BUGGY]  int  residualsWeights  =  this.results.length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  this.results.length  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  this.results.length  -  1;	  int    residualsWeights    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
291	[BUG]  [BUGGY]  int  residualsWeights  =  this.results.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  this.results.length  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  this.results.length  +  1;	  int    residualsWeights    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
292	[BUG]  [BUGGY]  int  residualsWeights  =  iterations.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  iterations.length;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  iterations.length;	  int    residualsWeights    =    this.results.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0,  colsCount  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  colsCount  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  colsCount  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
296	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results.length;  i++)  {  incrementIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
297	[BUG]  [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.length  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
298	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.results.length;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.length;    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
299	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  this.resultEvaluations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  int    result    =    this.resultEvaluations.length;    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
300	[BUG]  [BUGGY]  int  cost  =  Math.min(maxIterations,  results.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.min(maxIterations,  results.length);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.min(maxIterations,  results.length);	  int    cost    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
301	[BUG]  [BUGGY]  double  cost  =  Math.min(results.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  cost  =  Math.min(results.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  cost  =  Math.min(results.length,  maxIterations);	  int    cost    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
302	[BUG]  [BUGGY]  int  result  =  this.results.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.size()  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.size()  -  1;	  int    result    =    this.results.size();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
303	[BUG]  [BUGGY]  int  result  =  this.results.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.size()  -  2;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.size()  -  2;	  int    result    =    this.results.size();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
304	[BUG]  [BUGGY]  int  result  =  this.results.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.size()  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.size()  +  1;	  int    result    =    this.results.size();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  this.data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  this.data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
306	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  DEFAULT_MAX_ITERATIONS);	  this.resultEvaluations    =    Math.max(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
307	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  int    result    =    this.resultEvaluations.length;    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
308	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  int    result    =    this.results.length;    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  parameters.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  parameters.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  parameters.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length;  ++i)  {	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
312	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  >  expected	28	None	replace
313	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
314	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(0,  this.resultEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(0,  this.resultEvaluations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(0,  this.resultEvaluations);	  this.resultEvaluations    =    Math.max(this.result,    0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  not  a  statement	4	None	replace
317	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.min(this.result,  0);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.min(this.result,  0);	  this.resultEvaluations    =    Math.min(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
318	[BUG]  [BUGGY]  int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  >  expected	143	None	replace
319	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(results[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(results[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(results[i]);	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
320	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(this);  convergenceChecker.addAll(convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	32	None	replace
321	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(variables.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(variables.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(variables.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	32	None	replace
322	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    	non-compiled	[CE]  ')'  expected	8	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  ')'  expected	109	None	replace
324	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  >  expected	33	None	replace
325	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  '.class'  expected	33	None	replace
326	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	76	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targets.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
328	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
329	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
330	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  true);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
334	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  1  +  iterations);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  1  +  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  1  +  iterations);	  this.resultEvaluations    =    Math.max(this.result,    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
335	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
336	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targets.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targets.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  ')'  expected	55	None	replace
338	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  ';'  expected	64	None	replace
339	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
340	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  ')'  expected	102	None	replace
342	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  1];  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  1];	  this.resultEvaluations    =    new    double[iterations.size()    -    1];    	non-compiled	[CE]  ']'  expected	19	None	replace
343	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  objectives.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  objectives.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  objectives.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
345	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  data.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
346	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  >  expected	104	None	replace
347	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >=  }	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
348	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  jacobianEvaluations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  jacobianEvaluations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  jacobianEvaluations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    cols    =    0;    cols    <    iterations.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
349	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    >=    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
351	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergence  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergence  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergence	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
356	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    iterations    =    targets.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(1);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations  +  1;  ++i)  {  increaseIterationsCounter(1);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
359	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  not  a  statement	5	None	replace
360	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  <identifier>  expected	5	None	replace
361	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceCheck	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  not  a  statement	5	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	100	None	replace
363	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	140	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
365	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  >  expected	27	None	replace
366	[BUG]  [BUGGY]  int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  iterations  =  targetValues.length;  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  >  expected	7	None	replace
367	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targets.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
368	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  1][0];  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  1][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  1][0];	  this.resultEvaluations    =    new    double[iterations.size()    +    1][0];    	non-compiled	[CE]  ']'  expected	2	None	replace
369	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainingsWeights,  iterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainingsWeights,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainingsWeights,  iterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
370	[BUG]  [BUGGY]  int  residualsWeights  =  Math.max(remainingsWeights,  iterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.max(remainingsWeights,  iterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.max(remainingsWeights,  iterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
371	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues[i]    	non-compiled	[CE]  not  a  statement	152	None	replace
372	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValue  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValue  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValue	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues[i]    	non-compiled	[CE]  ')'  expected	152	None	replace
373	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
374	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  2][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  +  2][2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  +  2][2];	  this.resultEvaluations    =    new    double[iterations.size()    ][2];    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
375	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  false);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
376	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  true);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  true);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter(i,  true);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
377	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  function.results.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  function.results.iterator();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  function.results.iterator();	  Iterator    <    Integer>    iterations    =    this.results.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
378	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter();  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  >  expected	40	None	replace
379	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(value);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(value);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
380	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(remainingsWeights);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(remainingsWeights);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(remainingsWeights);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
381	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getRangeConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getRangeConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getRangeConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	46	None	replace
382	[BUG]  [BUGGY]  Iterator  <  Integer>  iterations  =  function.resultEvaluations.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Iterator  <  Integer>  iterations  =  function.resultEvaluations.iterator();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Iterator  <  Integer>  iterations  =  function.resultEvaluations.iterator();	  Iterator    <    Integer>    iterations    =    this.resultEvaluations.iterator();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
384	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	47	None	replace
385	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  ';'  expected	47	None	replace
386	[BUG]  [BUGGY]  int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	93	None	replace
387	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  1)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }	  double    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    increaseIterations(objectitiveEvaluations[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
388	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(0,  this.resultIterations);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(0,  this.resultIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(0,  this.resultIterations);	  this.resultEvaluations    =    Math.max(this.result,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
390	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  >  expected	113	None	replace
391	[BUG]  [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  incrementIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
392	[BUG]  [BUGGY]  iterations  =  this.targetValues.iterator().next();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  iterations  =  this.targetValues.iterator().next();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	iterations  =  this.targetValues.iterator().next();	  iterations    =    this.results.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
393	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  1;	  int    objectiveEvaluations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
394	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  iterations;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  iterations;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterationsCounter()  +  iterations;	  int    objectiveEvaluations    =    function.incrementIterationsCounter();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
395	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValu  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValu	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues    	non-compiled	[CE]  ')'  expected	153	None	replace
396	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
397	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  >  expected	70	None	replace
398	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increasingIterationsCounter();    }    	non-compiled	[CE]  >  expected	99	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increasingIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increasingIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increasingIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increasingIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    this.cols.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  ')'  expected	111	None	replace
401	[BUG]  [BUGGY]  int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  >  expected	124	None	replace
402	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
403	[BUG]  [BUGGY]  this.targetValues.incrementIterations(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(value);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(value);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
404	[BUG]  [BUGGY]  this.targetValues.incrementIterations(remainingsWeights);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterations(remainingsWeights);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterations(remainingsWeights);	  this.targetValues.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.iterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.iterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.iterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
408	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(remainings);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(remainings);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(remainings);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
409	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(totalIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations(totalIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations(totalIterations);	  int    objectiveEvaluations    =    function.incrementIterations(iterations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
410	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size();  for(int  i  =  0;  i  <  maxIterations;  i++)  {  increaseIterationsCounter(i,  false);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
411	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(variance);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(variance);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker(variance);	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
412	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
413	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  ==  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
414	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	75	None	replace
415	[BUG]  [BUGGY]  int  cols  =  0;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  0;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  0;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  int    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  >  expected	48	None	replace
416	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  >  expected	17	None	replace
417	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
418	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    ++i)    {    	non-compiled	[CE]  '.class'  expected	96	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  function.getIterations();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  >>	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is!=    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
420	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  maxIterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  maxIterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  maxIterations.length;  ++i)  {	  double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
421	[BUG]  [BUGGY]  For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  '.class'  expected	15	None	replace
422	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  nu  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  nu  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  nu	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
423	[BUG]  [BUGGY]  int  result  =  iterations.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();	  int    result    =    this.results.size();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
424	[BUG]  [BUGGY]  int  result  =  this.results.size()  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.size()  /  2;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.size()  /  2;	  int    result    =    this.results.size();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
425	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.maxIterations;  i  <  iterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
426	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  cols.length;  ++i)  {	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    ++i)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
428	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
429	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  '.class'  expected	159	None	replace
430	[BUG]  [BUGGY]  int  maxIterations  =  iterations.incrementIterations();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  maxIterations  =  iterations.incrementIterations();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  maxIterations  =  iterations.incrementIterations();	  int    maxIterations    =    iterations.getMaxIterations();    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
431	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  >  expected	42	None	replace
432	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	  int    resultEvaluations    =    this.resultEvaluations.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
433	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxEvaluations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
434	[BUG]  [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.size();  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  int    result    =    this.resultEvaluations.size();    for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
435	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  maxIterations);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  maxIterations);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  maxIterations);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
436	[BUG]  [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  Integer  objectiveEvaluations  =  function.incrementIterations();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	Integer  objectiveEvaluations  =  function.incrementIterations();	  Integer    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    increaseIterations(objectitiveEvaluations[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
437	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	51	None	replace
438	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	For(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	95	None	replace
439	[BUG]  [BUGGY]  int  resultEvaluations  =(this.resultEvaluations  >  0)?  this.resultEvaluations.length  :  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =(this.resultEvaluations  >  0)?  this.resultEvaluations.length  :  0;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =(this.resultEvaluations  >  0)?  this.resultEvaluations.length  :  0;	  int    resultEvaluations    =    this.resultEvaluations.length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
440	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
441	[BUG]  [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  cols  =  iterations.length;  i  <  maxIterations;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  >  expected	34	None	replace
442	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations()  +  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations()  +  1;	  int    objectiveEvaluations    =    function.incrementIterations()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
443	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
444	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iter	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  ';'  expected	64	None	replace
446	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  iterations.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  ')'  expected	64	None	replace
447	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
448	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations()  -  1;  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations()  -  1;	  int    objectiveEvaluations    =    function.incrementIterations()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
449	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    maxIterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
450	[BUG]  [BUGGY]  int  cols  =  iterations.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  iterations.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  iterations.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  ';'  expected	49	None	replace
451	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  cost);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
452	[BUG]  [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  /  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluations  =  this.resultEvaluations.size()  /  2;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluations  =  this.resultEvaluations.size()  /  2;	  int    resultEvaluations    =    this.resultEvaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
453	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.resultEvaluations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.resultEvaluations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
454	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	4	None	replace
455	[BUG]  [BUGGY]  int  residualsWeights  =  Math.max(remainings.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.max(remainings.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.max(remainings.length,  maxIterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
456	[BUG]  [BUGGY]  int  residualsWeights  =  Math.min(remainings,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.min(remainings,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.min(remainings,  maxIterations);	  int    residualsWeights    =    Math.min(remainingsWeights,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
457	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
458	[BUG]  [BUGGY]  int  cols  =  function.getColumnsCount();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  function.getColumnsCount();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  function.getColumnsCount();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    cols    =    0;    cols    <    iterations.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
459	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  data.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  ')'  expected	94	None	replace
461	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
462	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
463	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceCheck    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
464	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    0,    	non-compiled	[CE]  ')'  expected	57	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(values,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    0,    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
466	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(0,  cost);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(0,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  incrementIterationsCounter(0,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
467	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  totalIterations);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  totalIterations);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(0,  totalIterations);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(0,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
468	[BUG]  [BUGGY]  int  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    sumIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	160	None	replace
469	[BUG]  [BUGGY]  for(int  cols  =  0;  cols  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  cols  =  0;  cols  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  cols  =  0;  cols  <  cols.length;  ++i)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    ++i)    {    double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
470	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterations();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterations();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations;  i++)  {  incrementIterations();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
471	[BUG]  [BUGGY]  int  resultEvaluationsCounter  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  resultEvaluationsCounter  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  resultEvaluationsCounter  =  iterations.length;  for(int  i  =  0;  i  <  this.resultEvaluations;  i++)  {  increaseIterationsCounter();  }	  int    resultEvaluationsCounter    =    this.resultEvaluations.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
472	[BUG]  [BUGGY]  int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  iterations  =  function.getIterationsCount();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {	  for(int    i    =    0,    iterations    =    function.getIterationsCount();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker!=    null)    {    	non-compiled	[CE]  >  expected	113	None	replace
473	[BUG]  [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  true);  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    true);    }    	non-compiled	[CE]  >  expected	131	None	replace
474	[BUG]  [BUGGY]  double  residualsWeights  =  Math.min(results.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  residualsWeights  =  Math.min(results.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  residualsWeights  =  Math.min(results.length,  maxIterations);	  int    residualsWeights    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
475	[BUG]  [BUGGY]  int  residualsWeights  =  Math.max(results.length,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  residualsWeights  =  Math.max(results.length,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  residualsWeights  =  Math.max(results.length,  maxIterations);	  int    residualsWeights    =    Math.min(results.length,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
476	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0;  i  <  iterations;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
477	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
478	[BUG]  [BUGGY]  int  result  =(this.results!=  null?  this.results.length  :  0);  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =(this.results!=  null?  this.results.length  :  0);  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =(this.results!=  null?  this.results.length  :  0);  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
479	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  maxIterations;  i  <  this.maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
480	[BUG]  [BUGGY]  for(int  i  =  0,  this.maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  this.maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  this.maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    this.maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
481	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]	  for(int    i    =    0,    iterations    =    this.targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  ')'  expected	143	None	replace
482	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    >=    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
483	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
484	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  sumIterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceCheck	  for(int    i    =    0,    cols    =    iterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceCheck    	non-compiled	[CE]  ')'  expected	110	None	replace
485	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[0]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[0]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[0]  =  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	46	None	replace
486	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(variables[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(variables[i]);  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(variables[i]);  convergenceChecker.	  VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	26	None	replace
487	[BUG]  [BUGGY]  int  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  data.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    data.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	93	None	replace
488	[BUG]  [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  maxIterations  =  function.getIterations();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();	  for(int    i    =    0,    iterations    =    function.getIterations();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    }    	non-compiled	[CE]  >  expected	104	None	replace
489	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ][5];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ][5];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  ][5];	  this.resultEvaluations    =    new    double[iterations.size()    ][2];    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
492	[BUG]  [BUGGY]  int  cost  =  Math.max(results.size(),  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cost  =  Math.max(results.size(),  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cost  =  Math.max(results.size(),  maxIterations);	  int    cost    =    Math.min(results.size(),    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  ')'  expected	33	None	replace
494	[BUG]  [BUGGY]  int  i  =  0,  iterations  =  targetValues.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  i  =  0,  iterations  =  targetValues.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  i  =  0,  iterations  =  targetValues.length;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
495	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.remainingsWeights.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.remainingsWeights.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.remainingsWeights.length;  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  }	  for(int    i    =    0,    iterations    =    targetValues.length;    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
496	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  iterations,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  iterations,  maxIterations);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  iterations,  maxIterations);	  this.resultEvaluations    =    Math.max(this.result,    iterations);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
497	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  this.targets.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add	  for(int    i    =    0,    iterations    =    targets.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(targetValues[i]);    convergenceChecker.add    	non-compiled	[CE]  not  a  statement	144	None	replace
498	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
499	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  increaseIterationsCounter(i,  cost);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increaseIterationsCounter(i,    cost);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
500	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  maxIterations;  i  <  cols;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    iterations.length;    i    <    maxIterations;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
501	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter();  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
502	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
503	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter(i);  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
504	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.size();  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[iterations.size()  ]);  System.arraycopy(variant,  0,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
505	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(variant,  0,  jacobianEvaluations,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(variant,  0,  jacobianEvaluations,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(variant,  0,  jacobianEvaluations,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(variant,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
506	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    0)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    increaseIterations(objectitiveEvaluations[i]    	non-compiled	[CE]  ')'  expected	126	None	replace
507	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter(remainings);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.targetValues.incrementIterationsCounter(remainings);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter(remainings);	  this.targetValues.incrementIterationsCounter(iterations);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
508	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  len  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  len  =  iterations;  i  <  maxIterations;  ++i)  {  increasingIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    increasingIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
509	[BUG]  [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues[i	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues[i]    	non-compiled	[CE]  ']'  expected	152	None	replace
510	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.size();  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  iterations.size();  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  iterations.size();  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    maxIterations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
511	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.	  for(int    i    =    0,    cols    =    jacobianEvaluations.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    targetValues[i]    =    convergenceChecker.    	non-compiled	[CE]  <identifier>  expected	100	None	replace
512	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(values,  0,  jacobianEvaluations,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(values,  0,  jacobianEvaluations,  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.toArray(new  double[0]);  System.arraycopy(values,  0,  jacobianEvaluations,	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.toArray(new    double[iterations.size()    ]);    System.arraycopy(values,    0,    jacobianEvaluations,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
513	[BUG]  [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  iterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    iterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    new    VectorialConvergenceChecker(this,    targetValues[i]);    }    	non-compiled	[CE]  ')'  expected	124	None	replace
514	[BUG]  [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter(i);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  iterations.length;  for(int  i  =  0;  i  <  this.results;  i++)  {  incrementIterationsCounter(i);  }	  int    result    =    this.results.length;    for(int    i    =    0;    i    <    iterations;    i++)    {    incrementIterationsCounter(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
515	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iters.size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  this.resultEvaluations  =  new  double[iters.size()  ];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iters.size()  ];	  this.resultEvaluations    =    new    double[maxIterations.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
516	[BUG]  [BUGGY]  int  result  =  this.results.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  result  =  this.results.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  result  =  this.results.size()  -  1;  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  result);  }	  int    result    =    this.results.size();    for(int    i    =    0;    i    <    iterations;    i++)    {    increaseIterationsCounter(i,    result);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
517	[BUG]  [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getconvergentorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  VectorialConvergenceChecker  convergenceChecker  =  function.getconvergentorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	VectorialConvergenceChecker  convergenceChecker  =  function.getconvergentorialConvergenceChecker();	  VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
518	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  cols  =  this.cols.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker	  for(int    i    =    0,    cols    =    this.cols.length;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker.    	non-compiled	[CE]  ')'  expected	111	None	replace
519	[BUG]  [BUGGY]  float  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  float  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	float  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  multiplieMultivariateVectorialFunction(targetValues	  int    objectiveEvaluations    =    function.incrementIterations();    if(objectitiveEvaluations    >    maxIterations)    {    for(int    i    =    0;    i    <    objectiveEvaluations;    ++i)    {    multiplieMultivariateVectorialFunction(targetValues    	non-compiled	[CE]  ')'  expected	153	None	replace
520	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {	  double[][]    jacobianEvaluations    =    function.getVariableValues();    for(int    i    =    0;    i    <    iterations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
521	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  {  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  targetValues.size();  i  <  maxIterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  {	  for(int    i    =    0,    iterations    =    targetValues.size();    i    <    maxIterations;    ++i)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVarianceChecker();    if(convergenceChecker.is    ==    	non-compiled	[CE]  ')'  expected	83	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  DEFAULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
523	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations;  i  <  defULT_MAX_ITERATIONS;  ++i)  {  incrementIterationsCounter();  }	  for(int    i    =    0,    maxIterations    =    iterations;    i    <    maxIterations;    ++i)    {    incrementIterationsCounter();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
524	[BUG]  [BUGGY]  int  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  int  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  cols  =  maxIterations;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  }	  for(int    i    =    0,    cols    =    maxIterations;    i    <    cols.length;    i++)    {    VectorialConvergenceChecker    convergenceChecker    =    function.getVectorialConvergenceChecker();    convergenceChecker.addAll(convergenceChecker);    }    	non-compiled	[CE]  >  expected	76	None	replace
525	[BUG]  [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }      [BUGGY]  for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	for(int  i  =  0,  maxIterations  =  iterations.length;  i  <  maxIterations;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariables();  for(int  i  =  0;  i  <  jacobianEvaluations.length	  for(int    i    =    0,    maxIterations    =    iterations.length;    i    <    maxIterations;    i++)    {    double[][]    jacobianEvaluations    =    function.getVariables();    for(int    i    =    0;    i    <    jacobianEvaluations.length;    ++i)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
