bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
2	[BUG]  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  cost);  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
3	[BUG]  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	if(this.results!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
4	[BUG]  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  if(this.results!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	if(this.results!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i,  cost);  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
6	[BUG]  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  targetValues[i]  =  convergenceChecker.		non-compiled	[CE]  <identifier>  expected	86	None	add
7	[BUG]  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  double[][]  jacobianEvaluations  =  function.getVariableValues();  for(int  i  =  0;  i  <  iterations.length;  ++i)  {		non-compiled	[CE]  illegal  start  of  expression	86	None	add
8	[BUG]  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker.		non-compiled	[CE]  <identifier>  expected	86	None	add
9	[BUG]  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();		non-compiled	[CE]  illegal  start  of  expression	86	None	add
10	[BUG]  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  cols  =  iterations.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVectorialConvergenceChecker();  convergenceChecker.addAll(convergenceChecker);		non-compiled	[CE]  illegal  start  of  expression	86	None	add
11	[BUG]  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter();  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
12	[BUG]  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i);  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
13	[BUG]  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter();  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
14	[BUG]  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    if(this.resultEvaluations!=  null)  {  for(int  i  =  0,  maxIterations  =  iterations;  i  <  maxIterations;  ++i)  {  increaseIterationsCounter(i);  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
15	[BUG]  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    if(this.resultEvaluations!=  null)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  increaseIterationsCounter(i,  false);  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
16	[BUG]  [BUGGY]  this.targetValues.incrementIterationsCounter();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  this.targetValues.incrementIterationsCounter();  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.targetValues.incrementIterationsCounter();	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
17	[BUG]  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  objectiveEvaluations);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  this.resultEvaluations  =  Math.max(this.result,  objectiveEvaluations);  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  Math.max(this.result,  objectiveEvaluations);	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
18	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ][0];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ][0];  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  ][0];	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
19	[BUG]  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  this.resultEvaluations  =  new  double[iterations.size()  ];  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	this.resultEvaluations  =  new  double[iterations.size()  ];	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
20	[BUG]  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(this,  targetValues[i]);		non-compiled	[CE]  illegal  start  of  expression	86	None	add
21	[BUG]  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.add		non-compiled	[CE]  not  a  statement	86	None	add
22	[BUG]  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  new  VectorialConvergenceChecker(targetValues[i]);  convergenceChecker.		non-compiled	[CE]  <identifier>  expected	86	None	add
23	[BUG]  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker.is		non-compiled	[CE]  ')'  expected	86	None	add
24	[BUG]  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	    for(int  i  =  0,  iterations  =  targetValues.size();  i  <  iterations;  ++i)  {  VectorialConvergenceChecker  convergenceChecker  =  function.getVarianceChecker();  if(convergenceChecker!=  null)  {		non-compiled	[CE]  illegal  start  of  expression	86	None	add
25	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  maxIterations)  {  throw  new  OptimizationException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
26	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  throw  new  OptimizationException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
27	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
28	[BUG]  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  void  incrementIterationsCounter()  throws  OptimizationException  {  if  (++iterations  >  maxIterations)  {  throw  new  OptimizationException(new  MaxIterationsExceededException(maxIterations));  }  [BUGGY]  int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  incrementIterationsCounter  [RETURN_TYPE]  void  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	176	176	1	replace	int  objectiveEvaluations  =  function.incrementIterations();  if(objectitiveEvaluations  >  0)  {  for(int  i  =  0;  i  <  objectiveEvaluations;  ++i)  {  increaseIterations(objectitiveEvaluations[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
