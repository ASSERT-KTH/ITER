projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116protectedAbstractLeastSquaresOptimizer(){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker());setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker());setConvergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super();setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),false);setConvergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleValueChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function==null);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setError(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgs();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibilityChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getDefaultOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setResults(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemainings(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemaining(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setVariablePoints(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),true);setConvergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setErrors(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariance();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116if(this.targetValues!=null){super();setConvergenceChecker(newSimpleVectorialValueChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116if(this.targetValues!=null){super();setConvergenceChecker(newSimpleVectorialValueChecker());}else{returnnewVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116if(this.targetValues!=null){super();setConvergenceChecker(newSimpleVectorialValueChecker());}else{for(inti=0;i<targetValues.size();++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116if(this.targetValues!=null){super();setConvergenceChecker(newSimpleVectorialValueChecker());}else{thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleInvariant();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemainings(targetValues,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues()-1;setRemainings(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setRemainings(targetValues,getTargetValues());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function==null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function>=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());setRestrictionChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());setResistanceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),jacobianEvaluations,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),jacobianEvaluations,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setResults(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setResults(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setResults(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newAbstractLeastSquaresOptimizer(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newAbstractLeastSquaresOptimizer(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setError(newSimpleVectorialValueChecker(),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116Error(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemaining(targetValues,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemaining(targetValues,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setRemaining(targetValues,getTargetValues());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues()-1;setRemaining(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariance().checkState();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariance().checkError();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newVectorialConvergenceChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newVectorialConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this,Cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleFunction().checkState();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleFunction().checkState(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function!=null);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable().checkState();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable().checkError();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable().checker;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newSimpleVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgs(),type);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgs(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgs(),cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setNullValueChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setRemainingValueChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setStandardEvaluations(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setNumberOfIterations(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker();setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker();setRestrictionChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.this.remainingsWeights=newVectorialConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.this.remainingsWeights=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(this.targetValues!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.this.targetValues=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibilityChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibilityChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibilityChecker().checkState();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleFunctionChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleTypeChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(function.getMatrix());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variance,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variance,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116doubletargetValues=getTargetValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues()-1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues().length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),cost,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setVariablePoints(targetValues,getTargetValues());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues()-1;setVariablePoints(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(newVectorialConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(newVectorialConvergenceChecker(),this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(newVectorialConvergenceChecker(),type);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),false);setRestrictionChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),false);setVergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(newSimpleVectorialFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(this.targetValues==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),true);setOptimizer(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newVectorialConvergenceChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setErrors(newSimpleVectorialValueChecker(),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setErrors(newSimpleVectorialValueChecker(),newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newBasicVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variable,function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker(),true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setErrorChecker(newSimpleVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setError(newSimpleVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables,scope);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=targetValues.get(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(targetValues.size()>0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.this.resultsWeights=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleError();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setNumberValueChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setResults(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker());setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker());setMaxIterations(DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleFunction().checkError();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),0,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(variables,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116((VectorialConvergenceChecker)checker).remainingsWeights=newdouble[remainingsWeights.size()];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(newVectorialConvergenceChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(false,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setError(newSimpleVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgs(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVarArgsOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),false);setConvergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newVectorialConvergenceChecker(),true);setConvergenceChecker(newAbstractLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getImplicitVisibilityChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116((VectorialConvergenceChecker)checker).setResultsWeights(remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariance(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setRemainings(remainingsWeights,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemainings(targetValues,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizer(function,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=checker.newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116IntegertargetValues=getTargetValues();setRemaining(targetValues,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemaining(targetValues,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());setErrors(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setVariablePoints(targetValues,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newVectorialFunctionChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116inttargetValues=getTargetValues();setRemainings(remainings,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(variable,type);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker());setRevergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),false);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),cost,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariable(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariables();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newSimpleVectorialValueChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newBasicVectorialValueChecker(),newSimpleVectorialValueChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=targetValues.get(i);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(newSimpleSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker(newSimpleVectorialFunctionValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptionalConvergenceChecker(function,valueType);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVectorialConvergenceChecker(function,this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(this);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116if(function==null){AssertionFailedError.checkState(function==null);setConvergenceChecker(newSimpleVectorialValueChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(this.targetValues!=null);setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrornested=newAssertionFailedError();setConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116nested=newVectorialConvergenceChecker();setVarianceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(function,valueType);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setRemaining(remainingsWeights,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newBasicVectorialValueChecker(),jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleInvariantFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVectorialConvergenceChecker(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedError.checkState(function==null||function.isInterface());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(function,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newAbstractLeastSquaresOptimizer(),null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(false,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setConvergenceChecker(newSimpleVectorialValueChecker(),false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=newVectorialConvergenceChecker(function,valueType);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVariableConvergenceChecker(false,type);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisiblePartialValueChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getVisibleInvalidValueChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=getOptimizationChecker(false,type);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this.targetValues=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116AssertionFailedErrort=newAssertionFailedError(jF.getMessage());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newVectorialConvergenceChecker(),newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116super(newVectorialConvergenceChecker(),newBasicVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116setWarnings(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116VectorialConvergenceCheckerchecker=createVisibleConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java116this(newSimpleVectorialValueChecker(),newSimpleVectorialValueChecker(),cost,jacobianEvaluations);
