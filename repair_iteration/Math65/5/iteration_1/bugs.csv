bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  residual;  [CE]  cannot  find  symbol  residual  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  residual;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  residual;	return  chiSquare;  	non-compiled	[CE]  cannot  find  symbol  residual	9	None	replace
2	[BUG]  [BUGGY]  return  chiSquare  +  residual;  [CE]  cannot  find  symbol  residual  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  residual;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  chiSquare  +  residual;	return  chiSquare;  	non-compiled	[CE]  cannot  find  symbol  residual	9	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  1;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	add	return  chiSquare  +  1;	return  chiSquare;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
4	[BUG]  [BUGGY]  return  chiSquare  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  1;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  chiSquare  +  1;	return  chiSquare;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]          AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	  	return  chiSquare;  	non-compiled	[CE]  missing  return  statement	9	None	replace
6	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  residual  *  /  residualsWeights[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  residual  *  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  residual  *  /  residualsWeights[i];  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
7	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
8	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining  *  residual);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining  *  residual);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remaining  *  residual);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
9	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.log(remaining  *  chiSquare);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.log(remaining  *  chiSquare);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.log(remaining  *  chiSquare);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
10	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.max(remaining  *  chiSquare);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.max(remaining  *  chiSquare);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  residuals[i];  chiSquare  +=  Math.max(remaining  *  chiSquare);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
11	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainder,  i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainder,  i);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.min(remainder,  i);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
12	[BUG]  [BUGGY]    double  chiSquare  =  Math.sqrt(remainder);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    double  chiSquare  =  Math.sqrt(remainder);  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    double  chiSquare  =  Math.sqrt(remainder);		non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	10	None	add
13	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remainder  *  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remainder  *  i);  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  chiSquare  +=  Math.sqrt(remainder  *  i);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
14	[BUG]  [BUGGY]    double  chiSquare  =  Math.sqrt(remaining);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    double  chiSquare  =  Math.sqrt(remaining);  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    double  chiSquare  =  Math.sqrt(remaining);		non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	10	None	add
15	[BUG]  [BUGGY]  return  chiSquare  /  residual;  [CE]  cannot  find  symbol  residual  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  /  residual;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  chiSquare  /  residual;	return  chiSquare;  	non-compiled	[CE]  cannot  find  symbol  residual	9	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  2;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	add	return  chiSquare  +  2;	return  chiSquare;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
17	[BUG]  [BUGGY]  return  chiSquare  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  2;  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  chiSquare  +  2;	return  chiSquare;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
18	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiS  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiS  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiS		non-compiled	[CE]  not  a  statement	10	None	add
19	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  0;  }  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
20	[BUG]  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiSquare  +=  jSquare  *  /  residuals  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiSquare  +=  jSquare  *  /  residuals  [BUGGY]  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	    if(remaining  >  0)  {  for(int  i  =  0;  i  <  rows;  ++i)  {  final  double  chiSquare  =  Math.sqrt(remainder  *  chiSquare);  chiSquare  +=  jSquare  *  /  residuals		non-compiled	[CE]  illegal  start  of  expression	10	None	add
21	[BUG]  [BUGGY]  return  chiSquare  +  Math.sqrt(remainder);  [CE]  cannot  find  symbol  remainder  [FE]    AssertionFailedError  [CONTEXT]  public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {  final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  [BUGGY]  return  chiSquare  +  Math.sqrt(remainder);  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	260	260	1	replace	return  chiSquare  +  Math.sqrt(remainder);	return  chiSquare;  	non-compiled	[CE]  cannot  find  symbol  remainder	9	None	replace
