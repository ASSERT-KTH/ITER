projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(period);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(totalValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variateValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,range);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.value,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(totals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker().variables;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jcobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);cols=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);Jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(field,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getVector();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getObject().clone();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols].length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(colons,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jf=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(last,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jf.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(remainings);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.valueToJava2D(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols],jF.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variatesWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variableFunction);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(variate);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(last);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variate);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables.clone());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,jF.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,jF.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185Jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185n=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);jacobian=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);jcobian=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);cols=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);Jacobian=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);if(jF.value(residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(false,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows-1].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows],cost.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,parameters);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,null,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,null,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(row,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.targetValues;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getKey();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.target;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.residualsWeights;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.valueToJava2D(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jf.valueToJava2D(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(branch);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.object.clone();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(variate,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(random);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jf.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newDouble(this.value.doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(colons,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,cost,iterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(tokens,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cost,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(last,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.fields.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(token);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1],cost.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols*1].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.value(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=cols.value(this.value,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.value,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISM
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF.value(this.residualsWeights)!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights==null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,dataArea,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jcobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185ji=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.target();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jacobian.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length-1].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length-2].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length+1].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1,jF.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols],cols.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows],jF.getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker().variables,cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker().variables|this.variables;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,this.convergenceChecker.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows].length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1].length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length-1].length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_S
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,null,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,row,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,dataArea,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=variables.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variableFunction,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variableFunction,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variableFunction,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,this.point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,jF,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,jF,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jF);jf.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jf.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getSector();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getSecond();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows,cost,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(fields,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variable,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variable,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=residualsWeights.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=_residualsWeights.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=residualsWeights.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights*2-cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights*3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights*2+cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,cols+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights+1,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(rows,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables.size());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185null=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.resultualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(fields,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,targetValues,Cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols*2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length+1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jf=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[0],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[1],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[2],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols/1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols*4];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cols,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cols,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185cols=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185cols=this.residualsWeights.value(jF.value(this.residualsWeights));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);cols=jf.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,column.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,columns.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newDouble(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newdouble[this.value];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variable,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variable,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jcobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);Jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);cols=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);Jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variate,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jf);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights==null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights==null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights*2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variablesWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(false,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,this.multivariateVectorialFunction);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,ji);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);cols=jF.value(this.residualsWeights,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);cols=jF.value(this.residualsWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.residuals;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=cols.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(function,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(column,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables.cloneTree());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=VariableMultivariateVectorialFunction.value(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker().variables.variables;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(colons,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variables,rows,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getEvalValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);jacobian=JF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);jf=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[rows][0].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getImplicitReturn();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF.value());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols],cols.length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}for(inti=0;i<cols;++i){if(jF.value(this.residualsWeights[i])!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}for(inti=0;i<cols;++i){if(jF.value(this.residualsWeights[i])!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_S
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}jacobian=jF.value(this.residualsWeights);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(tokens);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights[0].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.valueToJava2D(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.toJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols*3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getObject().values();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getObject().intermediate();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MIS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jf.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1].values();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jF+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,targetValues.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variable,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variables,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.rows-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);ji=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);if(this.residualsWeights>cols){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols-1,cols.length].getValues();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(this.residualsWeights!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF!=null){jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIM
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(residualsWeights);jf.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.residualsWeights.value(jF*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables,coefficients);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(tokens,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cols,cols,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.field,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(toJacobian());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[jF.length*2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getEvaluator();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.residualsWeights().value(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.residualsWeights.value(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[3],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.value(jFactory.value,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,this.cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,0,this.coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker(function.getVisibilityChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(this.residualsWeights!=null){for(inti=0;i<cols;++i){jacobian=jF.value(this.residualsWeights);if(jF.value(this.
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(this.residualsWeights);if(jF.value(this.residualsWeights)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(this.residualsWeights!=null){for(inti=0;i<cols;++i){jacobian=jF.value(this.residualsWeights);if(jF.value(this.resi
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(cost,ji);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost,null,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(point,null,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jf.value(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,rows.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.values.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=this.value.toString();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=_value.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateVectorialFunction[][]jacobian=newMultivariateVectorialFunction[cols/2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185if(jF!=null){jacobian=jF.value(this.residualsWeights);jacobian=jF.value(this.residualsWeights);}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,cols.length+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jcobian=this.residualsWeights.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(variables,rows,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=cols.value(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=coales.value(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=coles.value(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,jF,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,this.residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,null,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.value(random,rows,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185intcols=Math.min(cols.length,jf.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)getObject().evaluate(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=jF.valueToJava2D(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=Variables.value(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185cols=this.residualsWeights.value(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185Cols=cols.value(this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185cols=this.residualsWeights.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(variables),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=getVisibilityChecker().variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,jF,this.residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java185jacobian=newMultivariateMatrixFunction(this.value,jF,this.residualsIterations);
