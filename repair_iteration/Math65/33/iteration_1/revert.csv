projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunction.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMinIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);intDEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_VALUES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMinIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MIN_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(function==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.results!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.results==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());}else{setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setConvergenceChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.this.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+1][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setResults(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MIN_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unknownvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unexpectedvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}else{for(VectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DeFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(deFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results!=null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
