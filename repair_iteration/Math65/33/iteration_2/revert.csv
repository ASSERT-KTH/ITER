projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunction.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMinIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);intDEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_VALUES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMinIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MIN_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(function==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.results!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.results==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());}else{setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variant);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setConvergenceChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.this.setOptimizer(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+1][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setResults(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MIN_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unknownvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unexpectedvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}else{for(VectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DeFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(deFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results!=null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(results==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.targetValues==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newint[]{0});
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newint[]{1});
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.restrictionEvaluations=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS*1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS*2));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118taskFrame.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118tooltips.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(true,"Unexpectedvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,true,"Unexpectedvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MIN_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_TERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(deFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.value,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118VectorialLeastSquaresOptimizerjF=newVectorialLeastSquaresOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+2][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length+3][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);setMaxIterations(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);setMaxIterations(DEFAULT_MAX_ITERATIONS*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);setMinIterations(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*1);setMaxIterations(DEFAULT_MIN_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newInteger(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(Integer.MAX_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newInteger(0),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newInteger(DEFAULT_MAX_ITERATIONS),newInteger(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0L/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(1/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}else{for(VectorialConvergenceChecker
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(deFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118taskFrame.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118luate(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118luate(newVectorialConvergenceChecker()));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS),DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMinIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMaxIterations(DEFAULT_MIN_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setOptimizer(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setOptimizer(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(deFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS/1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function.doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Set<VectorialConvergenceCheck>setOptimizer=newHashSet<VectorialConvergenceChecker>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Set<VectorialConvergenceChecker>setOptimizer=newHashSet<VectorialConvergenceChecker>();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,cost+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(true,"Unknownvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unknownvalue.");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);setMaxIterations(this.maxIterations-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}else{this.maxIterations=Integer.MAX_VALUE;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}else{thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,cost-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS/1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(deFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMinIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MIN_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMinIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS),objectiveEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(),checker,function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(),checker,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(),checker,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(results!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.targetValues!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(values*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(remainingsWeights*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(deFAULT_MAX_ITERATIONS*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(remainingsWeights/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(variate/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.results=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.results=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));intmaxIterations=newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardValues(newVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialValueChecker(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(newValueInstantiator(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(deFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118intDEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);intDEFAULT_MAX_ITERATIONS=DEFAULT_MAX_ITERATIONS;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118intDEFAULT_MAX_ITERATIONS=newint[DEFAULT_MAX_ITERATIONS];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);intDEFAULT_MAX_ITERATIONS-=DEFAULT_MAX_ITERATIONS;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length][2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(function!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.function==null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(function==null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118SetOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialLeastSquaresOptimizer(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getFunctionOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getStandardOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMinIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MIN_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMinimumIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=newVectorialConvergenceChecker(newSimpleVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));intmaxIterations=newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MIN_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(deFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(remainingsWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(values+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setResults(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setResults(newVectorialConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setDecimalEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialConvergenceChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialConvergenceChecker(),false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length/2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrameframe=newValueInstantiator();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restrictions-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(deFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restrictions*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setMatrixValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(newValueInstantiator(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(function,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);setMaxIterations(DEFAULT_MAX_ITERATIONS/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);setMinIterations(DEFAULT_MAX_ITERATIONS/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);setMaxIterations(DEFAULT_MAX_ITERATIONS/3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newValueInstantiator(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(function,newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newIntegerInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(value,DEFAULT_VALUES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(0,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(deFAULT_MAX_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker(1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results==null){setOptimizer(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMinIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MIN_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(results);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMinIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MIN_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(Integer.MAX_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DateTimeUtils.currentTimeMillis());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);setMaxIterations(0/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);setMinIterations(0/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);setMaxIterations(0/DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);setMaxIterations(0/deFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length/1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.this.setOptimizer(newVectorialConvergenceChecker(),checker);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.remainings!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(remainings>0.0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0,this.maxIterations>0.0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>1.0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(true,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS);setMinIterations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVectorialVergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newint[][]{0});
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(remainings!=null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MIN_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setOptimizer(newInteger(DEFAULT_MAX_ITERATIONS));setOptimizer(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(variable,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(variable!=null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length+1][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWights.length][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunction.setOptionalValue(newValueInstantiator(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunction.setOptionalValue(newValueInstantiator(),function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(value,DEFAULT_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(Integer.MIN_VALUE,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(maxIterations,DEFAULT_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}else{Preconditions.checkNotNull(this.maxIterations);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);setMinIterations(this.maxIterations-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(checker!=null){setOptimizer(newVectorialConvergenceChecker());}else{setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(checker!=null){checker=newVectorialConvergenceChecker();}else{setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=checker.newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-2);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.jFrame.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(MAX_VALUE));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(targetValues==null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(targetValues==null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}else{setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(targetValues==null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}else{setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS));}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setVisible(true,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS+2));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(intValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118luate(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newValueInstantiator(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newInteger());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialConvergenceChecker(2));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMinIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(resultsWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,true,"Unknownvalue");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(newValueMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(newValueOutstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0,this.maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS+1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialVectorialFunctionValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restrictionWeights+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(REGULAR_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restriction/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restriction*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/2);setMaxIterations(DEFAULT_MIN_ITERATIONS/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.results==null){setStandardEvaluations(newVectorialConvergenceChecker());this.results=newVectorialConvergenceChecker();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.value,this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(DEFAULT_MAX_ITERATIONS*2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setOptimization(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setOptimization(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118null=newVectorialConvergenceChecker();this.results=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(value-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(remainingsWeights-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(resultsWeights-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MIN_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFrame.this.setOptimizer(checker,newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newIntegerConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(checker!=null){setOptimizer(newVectorialConvergenceChecker());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(this.remainings==null){setStandardEvaluations(newVectorialConvergenceChecker());this.remainings=newVectorialConvergenceChecker();}else{for(VectorialConvergenceCheck
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setOptimization(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setOptimization(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setResults(newVectorialRestrictionChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS-2));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MIN_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118JFunctionjF=newVectorialLeastSquaresOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(results*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(result);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(function,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MIN_ITERATIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_SIZE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setOptionalValue(newValueInstantiator(),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setOptionalValue(newValueOutstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialVectorialValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setOptimization(DEFAULT_MAX_ITERATIONS-1);setOptimization(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkNotNull(targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*4);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setOptimization(newInteger(DEFAULT_MAX_ITERATIONS));setOptimization(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost,this.resultsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);setMaxIterations(1/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(REGULAR_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(newVectorialLeastSquaresOptimizer()!=null){setOptimizer(newVectorialLeastSquaresOptimizer());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(newVectorialLeastSquaresOptimizer()!=null){setOptimizer(newVectorialLeastSquaresOptimizer());}else{setOptimizer(newVectorialLeastSquaresOptimizer());}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS-1));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(newInteger(DEFAULT_MAX_ITERATIONS),0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118intDEFAULT_MAX_ITERATIONS=0;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118intDEFAULT_MAX_ITERATIONS=1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(targetEvaluations!=null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(objectialEvaluations!=null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118if(targetEvaluations!=null){setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));Set<Integer>objectiveEvaluations=Sets.newHashSet();setMaxIterations(newInteger(DEFAULT_MA
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsFunction.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(newValueMatrixFunction());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.setOptionalValue(newValueOutstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(false,DEFAULT_VALUES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(newInteger(DEFAULT_MAX_ITERATIONS),DEFAULT_VALUES);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.results=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(resultsWeights/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,checker.setOptionalValue(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length*2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionfunction=newValueInstantiator();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(value,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(Decimal.MAX_ITERATIONS,DEFAULT_VALUE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length*1][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(deFAULT_MAX_ITERATIONS/DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.remainings>0.0,this.cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118tooltips.setVisible(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxEvaluations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(this.results==null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWeights=newdouble[RemainingsWeights.length*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);setMaxIterations(DEFAULT_MAX_ITERATIONS+2);setMaxIterations(DEFAULT_MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(newValueInstantiator(),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF,function.addOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_ELEMENTS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_ORIENTATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(DEFAULT_MAX_ITERATIONS,DEFAULT_LOAD_SIZE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newint[]{DEFAULT_MAX_ITERATIONS});
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainings=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.cost,this.remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(DEFAULT_MAX_ITERATIONS));setMinIterations(newInteger(DEFAULT_MIN_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(totals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.remainingsWights=newdouble[RemainingsWights.length][];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialLeastSquaresOptimizer();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialLeastSquaresOptimulizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,DEFAULT_SECONDS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restriction/DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(this.value,this.remainingsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118this.function=function.getPartialValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestrictionEvaluations(newBasicVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS*DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptimizer(newVectorialVectorialFunctionValueChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMinIterations(0,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptionalValue(true,cost,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}else{setMaxIterations(this.maxIterations-1);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations-1);if(this.maxIterations>0){setMaxIterations(this.maxIterations-1);}else{this.maxIterations=newdouble[this.maxIterations-1];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(maxIterations/DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRemainings(newVectorialConvergenceChecker().remainings);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS*DEFAULT_MIN_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(0/DEFAULT_MAX_ITERATIONS);0/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jF.setOptimizer(newVectorialConvergenceChecker(2));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118try{jFrame.setVisible(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Preconditions.checkState(false,"Unexpectedvalue.");
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118Set<VectorialConvergenceChecker>setMaxIterations=Sets.newHashSet();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(newVectorialVectorialValueChecker(0));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_RERESULTIONS,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_TERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS,DEFAULT_REGULARS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMinIterations(DEFAULT_MIN_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(this.maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalConvergenceChecker(newVectorialConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalValues(value,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(MAX_ITERATIONS+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setMaxIterations(DEFAULT_MAX_ITERATIONS-1);setOptionalEvaluations(DEFAULT_MAX_ITERATIONS-1);setOptionalEvaluations(DEFAULT_MAX_ITERATIONS-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jf.setOptionalValue(newValueInstantiator());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118MultivariateMatrixFunctionjF=newMultivariateMatrixFunction(this.function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(newInteger(MatrixFunction.DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jFrame.setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118jf.setOptimizer(newVectorialLeastSquaresOptimizer());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setOptionalEvaluations(newInteger(DEFAULT_MAX_ITERATIONS));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(restrictions+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setRestriction(DEFAULT_MAX_ITERATIONS+3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(last);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MAX_ITERATIONS/DEFAULT_MAX_ITERATIONS);setMaxIterations(DEFAULT_MIN_ITERATIONS/DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java118setStandardEvaluations(DEFAULT_MAX_ITERATIONS*DEFAULT_MAX_ITERATIONS);
