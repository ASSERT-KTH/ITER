bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	91	None	replace
2	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	91	None	replace
3	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValu  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValu	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	91	None	replace
4	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	37	None	replace
5	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	37	None	replace
6	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	37	None	replace
7	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  2);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  2);	  this.targetValues    =    Math.max(this.targetValues,    cost,    2);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  2);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  2);	  this.targetValues    =    Math.max(this.targetValues,    cost,    2);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	26	None	replace
15	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	26	None	replace
16	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
17	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
18	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
19	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length][1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.length][1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length][1];	  this.targetValues    =    new    double[this.targetValues.length][0];    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
20	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  -  1][0];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  -  1][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length  -  1][0];	  this.targetValues    =    new    double[this.targetValues.length][0];    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
21	[BUG]  [BUGGY]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
22	[BUG]  [BUGGY]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
23	[BUG]  [BUGGY]  VectorialConvergenceChecker  residuals  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  residuals  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  residuals  =  new  VectorialConvergenceChecker();	  if(remainingsWeights!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
24	[BUG]  [BUGGY]  remainingsWeights  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  remainingsWeights  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	remainingsWeights  =  new  VectorialConvergenceChecker();	  if(remainingsWeights!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
25	[BUG]  [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  cost);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  cost);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(resultsWeights,  cost);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
26	[BUG]  [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  2);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(resultsWeights,  2);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
27	[BUG]  [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(resultsWeights,  0);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
28	[BUG]  [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  cost  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  cost  -  1);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(resultsWeights,  cost  -  1);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
29	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  targetValues.length  -  2;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  For(int  i  =  0,  cols  =  targetValues.length  -  2;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	For(int  i  =  0,  cols  =  targetValues.length  -  2;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  For(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  '.class'  expected	14	None	replace
30	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker()  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker()  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker()	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
33	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	50	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targets.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targets.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
37	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	89	None	replace
38	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	89	None	replace
39	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(true);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(true);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(false);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(false);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(checker!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	121	None	replace
46	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  1);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  1);	  this.targetValues    =    Math.max(this.targetValues,    cost,    1);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
49	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	122	None	replace
50	[BUG]  [BUGGY]  Set  <  VectorialConvergenceChecker>  checker  =  new  HashSet  <  VectorialConvergenceChecker>();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Set  <  VectorialConvergenceChecker>  checker  =  new  HashSet  <  VectorialConvergenceChecker>();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Set  <  VectorialConvergenceChecker>  checker  =  new  HashSet  <  VectorialConvergenceChecker>();	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
51	[BUG]  [BUGGY]  FixedVectorialValueChecker  checker  =  new  FixedVectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  FixedVectorialValueChecker  checker  =  new  FixedVectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	FixedVectorialValueChecker  checker  =  new  FixedVectorialConvergenceChecker();	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
52	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
53	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
54	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
55	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	55	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	55	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	55	None	replace
60	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][5];    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targets.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
62	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	25	None	replace
63	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  +  1];	  this.targetValues    =    new    double[this.targetValues.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
64	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  2];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  +  2];	  this.targetValues    =    new    double[this.targetValues.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
65	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  *  2];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  *  2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  *  2];	  this.targetValues    =    new    double[this.targetValues.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
66	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][0];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[2][0];	  double[][]    jacobianEvaluations    =    new    double[2][1];    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
67	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[3][1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[3][1];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[3][1];	  double[][]    jacobianEvaluations    =    new    double[2][1];    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
68	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[1][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[1][2];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[1][2];	  double[][]    jacobianEvaluations    =    new    double[2][1];    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
69	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
70	[BUG]  [BUGGY]  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
73	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  +  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length  +  1];	  this.targetValues    =    new    double[this.targetValues.length];    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
74	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  -  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length  -  1];	  this.targetValues    =    new    double[this.targetValues.length];    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
75	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  *  2];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.length  *  2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length  *  2];	  this.targetValues    =    new    double[this.targetValues.length];    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
76	[BUG]  [BUGGY]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }	  if(targetValues    ==    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
78	[BUG]  [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[remainingsWeights.length][1];	  this.targetValues    =    new    double[remainingsWeights.length][0];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
79	[BUG]  [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length  -  1][0];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length  -  1][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[remainingsWeights.length  -  1][0];	  this.targetValues    =    new    double[remainingsWeights.length][0];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
80	[BUG]  [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length  +  1][0];  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length  +  1][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[remainingsWeights.length  +  1][0];	  this.targetValues    =    new    double[remainingsWeights.length][0];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
81	[BUG]  [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  this.targetValues);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  this.targetValues);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(resultsWeights,  this.targetValues);	  this.targetValues    =    Math.max(this.targetValues,    residualsWeights);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
82	[BUG]  [BUGGY]  this.targetValues  =  Math.max(remainingsWeights,  this.targetValues);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(remainingsWeights,  this.targetValues);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(remainingsWeights,  this.targetValues);	  this.targetValues    =    Math.max(this.targetValues,    residualsWeights);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
83	[BUG]  [BUGGY]  this.targetValues  =  Math.min(remainingsWeights,  this.targetValues);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(remainingsWeights,  this.targetValues);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(remainingsWeights,  this.targetValues);	  this.targetValues    =    Math.max(this.targetValues,    residualsWeights);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
84	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	94	None	replace
85	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	94	None	replace
86	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	94	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
89	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  '.class'  expected	49	None	replace
90	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
91	[BUG]  [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(this);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  VectorialConvergenceChecker(this);	  this.targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
92	[BUG]  [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(variance);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(variance);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  VectorialConvergenceChecker(variance);	  this.targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
93	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  '.class'  expected	52	None	replace
94	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
95	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[4][1];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  1);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  1);	  this.targetValues    =    Math.max(this.targetValues,    0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
99	[BUG]  [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  0);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(this.targetValues,  0);	  this.targetValues    =    Math.max(this.targetValues,    0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
100	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
101	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
102	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    }    	non-compiled	[CE]  not  a  statement	34	None	replace
104	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
105	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  ']'  expected	77	None	replace
106	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	90	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	90	None	replace
108	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	90	None	replace
109	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
110	[BUG]  [BUGGY]  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
111	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
112	[BUG]  [BUGGY]  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
113	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
115	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
116	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
117	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	118	None	replace
118	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	118	None	replace
119	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	118	None	replace
120	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  0.0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  0.0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
121	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0.0,  cost);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0.0,  cost);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0.0,  cost);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
122	[BUG]  [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  cost,  0.0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  cost,  0.0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(this.targetValues,  cost,  0.0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
123	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	56	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
127	[BUG]  [BUGGY]  jF.addOptimizer(new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  jF.addOptimizer(new  VectorialConvergenceChecker());  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jF.addOptimizer(new  VectorialConvergenceChecker());	  jF.setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
128	[BUG]  [BUGGY]  jf.setOptimizer(new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  jf.setOptimizer(new  VectorialConvergenceChecker());  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jf.setOptimizer(new  VectorialConvergenceChecker());	  jF.setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
130	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ][1];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ][1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  ][1];	  this.targetValues    =    new    double[this.targetValues.size()    ][0];    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
131	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  1][0];  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  +  1][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  +  1][0];	  this.targetValues    =    new    double[this.targetValues.size()    ][0];    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
133	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
134	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(checker!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    }    	non-compiled	[CE]  not  a  statement	125	None	replace
135	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValu    	non-compiled	[CE]  not  a  statement	23	None	replace
136	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValu    	non-compiled	[CE]  not  a  statement	23	None	replace
137	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetVal	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValu    	non-compiled	[CE]  not  a  statement	23	None	replace
138	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][3];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
141	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][3];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
142	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
143	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	132	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
147	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVisible(checker);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVisible(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVisible(checker);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
148	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setFactory(checker);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setFactory(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setFactory(checker);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
149	[BUG]  [BUGGY]  setConvergenceChecker(new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setConvergenceChecker(new  VectorialConvergenceChecker());  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setConvergenceChecker(new  VectorialConvergenceChecker());	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
150	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(true);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(true);	  VectorialConvergenceChecker    targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
151	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(this);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(this);	  VectorialConvergenceChecker    targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
152	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variance);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variance);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variance);	  VectorialConvergenceChecker    targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
153	[BUG]  [BUGGY]  setRestriction(DateTimeUtils.currentTimeMillis());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setRestriction(DateTimeUtils.currentTimeMillis());  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(DateTimeUtils.currentTimeMillis());	  setRestriction(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
154	[BUG]  [BUGGY]  setRestriction(RERESULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setRestriction(RERESULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(RERESULT_MAX_ITERATIONS);	  setRestriction(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][5];    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][4];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][4];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][4];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][5];    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
157	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
158	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
159	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
160	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	24	None	replace
161	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWeights);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWeights);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWeights);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
162	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.resultsWeights);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.resultsWeights);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.resultsWeights);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
163	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.valuesWeights);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.valuesWeights);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.valuesWeights);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
164	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  jacobianEvaluations);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  jacobianEvaluations);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  jacobianEvaluations);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  2;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(this);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker(this);	  targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
168	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  targetValues[i]  =	  =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
169	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][4];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][4];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][4];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
171	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	29	None	replace
172	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	29	None	replace
173	[BUG]  [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  setOptimizer(new  VectorialConvergenceChecker());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  setOptimizer(new  VectorialConvergenceChecker());  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  setOptimizer(new  VectorialConvergenceChecker());  }	  setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
174	[BUG]  [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }	  setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
175	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  Values[]    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	31	None	replace
176	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  Values[]    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	31	None	replace
177	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  Values[]    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	31	None	replace
178	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
179	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
180	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	22	None	replace
181	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	22	None	replace
182	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
183	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	9	None	replace
185	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.results.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
186	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1]  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1]	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  ';'  expected	80	None	replace
187	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
188	[BUG]  [BUGGY]  if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
189	[BUG]  [BUGGY]  if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  residuals  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  }	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
190	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	65	None	replace
191	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
192	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainings.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
193	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
194	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
195	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	21	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	51	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.length;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.length;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.length;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	51	None	replace
198	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	88	None	replace
199	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	88	None	replace
200	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	78	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
204	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	120	None	replace
205	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	120	None	replace
206	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
207	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	45	None	replace
208	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	For(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  '.class'  expected	53	None	replace
209	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length][0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length][0];	  this.remainingsWeights    =    new    double[RemainingsWeights.length][];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
210	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1][];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1][];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1][];	  this.remainingsWeights    =    new    double[RemainingsWeights.length][];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
211	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1][];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1][];	  this.remainingsWeights    =    new    double[RemainingsWeights.length][];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
212	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	107	None	replace
213	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  residuals.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
214	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  +  1];	  this.remainingsWeights    =    new    double[RemainingsWeights.length];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
215	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  -  1];	  this.remainingsWeights    =    new    double[RemainingsWeights.length];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
216	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  2];  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  +  2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  +  2];	  this.remainingsWeights    =    new    double[RemainingsWeights.length];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
217	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	30	None	replace
218	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	30	None	replace
219	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	84	None	replace
220	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	36	None	replace
221	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	36	None	replace
222	[BUG]  [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
223	[BUG]  [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
224	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  Values[]    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	31	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
227	[BUG]  [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	58	None	replace
228	[BUG]  [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	58	None	replace
229	[BUG]  [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
230	[BUG]  [BUGGY]  TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	30	None	replace
231	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	118	None	replace
232	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setPrefix(checker);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setPrefix(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setPrefix(checker);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
233	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRestriction(checker);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRestriction(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRestriction(checker);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
234	[BUG]  [BUGGY]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
235	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
236	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
237	[BUG]  [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	124	None	replace
238	[BUG]  [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
239	[BUG]  [BUGGY]  int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	27	None	replace
240	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	132	None	replace
241	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	132	None	replace
242	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	132	None	replace
243	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	91	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	55	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
246	[BUG]  [BUGGY]  int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	28	None	replace
247	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(checker!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	121	None	replace
248	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	94	None	replace
249	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	83	None	replace
250	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	83	None	replace
251	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  Vectorial  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  Vectorial  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setRemainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  Vectorial	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	83	None	replace
252	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2];    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
253	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2];    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
254	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValu  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValu	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	93	None	replace
255	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  ']'  expected	93	None	replace
256	[BUG]  [BUGGY]  Set  <  VectorialConvergenceChecker>  checker  =  new  SetupVectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Set  <  VectorialConvergenceChecker>  checker  =  new  SetupVectorialConvergenceChecker();  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Set  <  VectorialConvergenceChecker>  checker  =  new  SetupVectorialConvergenceChecker();	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	57	None	replace
260	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
261	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
262	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
263	[BUG]  [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
264	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
266	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[4][1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[4][1];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[4][1];	  double[][]    jacobianEvaluations    =    new    double[2][1];    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
267	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length  -  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
268	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	56	None	replace
269	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
270	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
271	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
272	[BUG]  [BUGGY]  if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainings!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	89	None	replace
273	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][1];  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
274	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(variance);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(variance);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(variance);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
275	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  residualsWeights.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  residualsWeights.length);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  residualsWeights.length);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
276	[BUG]  [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  0,  cost);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  0,  cost);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(resultsWeights,  0,  cost);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
277	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	37	None	replace
278	[BUG]  [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
279	[BUG]  [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
280	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(checker);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker(checker);	  targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
281	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(target);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(target);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker(target);	  targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
282	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checkeder    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
285	[BUG]  [BUGGY]  if(this.remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1];    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
286	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	74	None	replace
287	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.size()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.size()  ];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.remainingsWeights.size()  ];	  this.targetValues    =    new    double[this.targetValues.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
288	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.resultsWeights.size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.resultsWeights.size()  ];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.resultsWeights.size()  ];	  this.targetValues    =    new    double[this.targetValues.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
289	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
290	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	22	None	replace
291	[BUG]  [BUGGY]  setOptimizer(new  VectorialVectorialValueChecker());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setOptimizer(new  VectorialVectorialValueChecker());  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setOptimizer(new  VectorialVectorialValueChecker());	  setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
292	[BUG]  [BUGGY]  setOptimizer(new  VectorialConvergenceChecker(),  checker);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setOptimizer(new  VectorialConvergenceChecker(),  checker);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setOptimizer(new  VectorialConvergenceChecker(),  checker);	  setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
293	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	73	None	replace
294	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	73	None	replace
295	[BUG]  [BUGGY]  this.targetValues  =  Math.max(remaindersWeights,  this.targetValues);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(remaindersWeights,  this.targetValues);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(remaindersWeights,  this.targetValues);	  this.targetValues    =    Math.max(this.targetValues,    residualsWeights);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
296	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
297	[BUG]  [BUGGY]  targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
298	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  ']'  expected	136	None	replace
299	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
300	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	24	None	replace
301	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValu  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValu  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValu	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	72	None	replace
302	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length  +  i];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length  +  i];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length  +  i];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
303	[BUG]  [BUGGY]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
304	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
305	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
306	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.length][0];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.length][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.remainingsWeights.length][0];	  this.targetValues    =    new    double[this.targetValues.length][0];    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
307	[BUG]  [BUGGY]  Integer  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Integer  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Integer  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  For(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  >  expected	14	None	replace
308	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targets.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
309	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence  [CE]  '('  or  '['  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergence	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  '('  or  '['  expected	87	None	replace
310	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConverg  [CE]  '('  or  '['  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConverg  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConverg	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  '('  or  '['  expected	87	None	replace
311	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceCheck  [CE]  '('  or  '['  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceCheck  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceCheck	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  '('  or  '['  expected	87	None	replace
312	[BUG]  [BUGGY]  this.targetValues  =  checker.newVectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  checker.newVectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  checker.newVectorialConvergenceChecker();	  this.targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
313	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
314	[BUG]  [BUGGY]  targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[resultsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
315	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  ']'  expected	117	None	replace
316	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainings!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	66	None	replace
317	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.resultsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.resultsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	51	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][2];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][2];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][2];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[1][5];    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
321	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
322	[BUG]  [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  0,  0.0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(this.targetValues,  0,  0.0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
323	[BUG]  [BUGGY]  setRestriction(DEFAULT_MIN_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setRestriction(DEFAULT_MIN_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(DEFAULT_MIN_ITERATIONS);	  setRestriction(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
324	[BUG]  [BUGGY]  setRestriction(DEFAULT_MAX_ITERATIONS  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setRestriction(DEFAULT_MAX_ITERATIONS  +  1);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(DEFAULT_MAX_ITERATIONS  +  1);	  setRestriction(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
325	[BUG]  [BUGGY]  jF.setOptimizer(checker);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  jF.setOptimizer(checker);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jF.setOptimizer(checker);	  jF.setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
326	[BUG]  [BUGGY]  jF.setOptimizer(checker,  new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  jF.setOptimizer(checker,  new  VectorialConvergenceChecker());  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jF.setOptimizer(checker,  new  VectorialConvergenceChecker());	  jF.setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
327	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    }    	non-compiled	[CE]  not  a  statement	34	None	replace
328	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
329	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	26	None	replace
330	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
332	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	65	None	replace
333	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	29	None	replace
334	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targets.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
335	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.length];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.remainingsWeights.length];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.remainingsWeights.length];	  this.targetValues    =    new    double[this.targetValues.length];    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
336	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.resultsWeights.length];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.resultsWeights.length];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.resultsWeights.length];	  this.targetValues    =    new    double[this.targetValues.length];    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
337	[BUG]  [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	115	None	replace
338	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValu    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
339	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  target  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  target  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  target	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValu    	non-compiled	[CE]  not  a  statement	23	None	replace
340	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][3];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
341	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][3];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
342	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
343	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.remainingsWeights,  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.remainingsWeights,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.remainingsWeights,  0);	  this.targetValues    =    Math.max(this.targetValues,    0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
344	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.resultsWeights,  0);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.resultsWeights,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.resultsWeights,  0);	  this.targetValues    =    Math.max(this.targetValues,    0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
345	[BUG]  [BUGGY]  TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	TargetValues  targetValues  =  new  Double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	25	None	replace
346	[BUG]  [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(resultsWeights,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(resultsWeights,  0);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
347	[BUG]  [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][2];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[remainingsWeights.length][2];	  this.targetValues    =    new    double[remainingsWeights.length][0];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
348	[BUG]  [BUGGY]  this.targetValues  =  new  double[RemainingsWeights.length][0];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[RemainingsWeights.length][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[RemainingsWeights.length][0];	  this.targetValues    =    new    double[remainingsWeights.length][0];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
349	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(target);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(target);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(target);	  VectorialConvergenceChecker    targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
350	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptim  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptim  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptim	  if(remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	88	None	replace
351	[BUG]  [BUGGY]  remainingsWeights  =  targetValues.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  remainingsWeights  =  targetValues.length;  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	remainingsWeights  =  targetValues.length;	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
352	[BUG]  [BUGGY]  RemainingsWeights  residuals  =  targetValues.get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  RemainingsWeights  residuals  =  targetValues.get(i);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	RemainingsWeights  residuals  =  targetValues.get(i);	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
353	[BUG]  [BUGGY]  remainingsWeights  =  new  double[targetValues.length][cols];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  remainingsWeights  =  new  double[targetValues.length][cols];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	remainingsWeights  =  new  double[targetValues.length][cols];	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  residuals.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	10	None	replace
357	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][5];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][5];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[2][5];	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
358	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
359	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.remainingsWeights.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	89	None	replace
360	[BUG]  [BUGGY]  if(objectives!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(objectives!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(objectives!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	65	None	replace
361	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
362	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
363	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  --i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  --i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  --i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
364	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
365	[BUG]  [BUGGY]  targetValues  =  new  double[cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	26	None	replace
366	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][3];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][3];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
367	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  *  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length  *  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length  *  2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  Values[]    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	31	None	replace
368	[BUG]  [BUGGY]  if(remainings  >  0)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(remainings  >  0)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainings  >  0)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }	  if(remainingsWeights    ==    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
369	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
370	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	73	None	replace
371	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  *  2][0];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  *  2][0];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  *  2][0];	  this.targetValues    =    new    double[this.targetValues.size()    ][0];    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
372	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	132	None	replace
373	[BUG]  [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(results!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
374	[BUG]  [BUGGY]  this.targetValues  =  Math.max(remainingsWeights,  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(remainingsWeights,  0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(remainingsWeights,  0);	  this.targetValues    =    Math.max(this.targetValues,    0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
375	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][3];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][3];  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[2][3];	  double[][]    jacobianEvaluations    =    new    double[2][1];    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
376	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	84	None	replace
377	[BUG]  [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	84	None	replace
378	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	84	None	replace
379	[BUG]  [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	124	None	replace
380	[BUG]  [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.targetValues    ==    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	124	None	replace
381	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  *  2];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length  *  2];  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length  *  2];	  this.remainingsWeights    =    new    double[RemainingsWeights.length];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
382	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
383	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer    	non-compiled	[CE]  not  a  statement	116	None	replace
384	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
385	[BUG]  [BUGGY]  targetValues  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
386	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0.0,  0.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0.0,  0.0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0.0,  0.0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
387	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  1.0,  0.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  1.0,  0.0);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  1.0,  0.0);	  this.targetValues    =    Math.max(this.targetValues,    cost,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
388	[BUG]  [BUGGY]  targetValues  =  new  double[targetIterations.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetIterations.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetIterations.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	29	None	replace
389	[BUG]  [BUGGY]  targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	29	None	replace
390	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(checker!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	121	None	replace
391	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	83	None	replace
392	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
393	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
394	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[0];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.remainingsWeights  =  new  double[0];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[0];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  this.remainingsWeights    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
395	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWights);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWights);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.remainingsWights);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
396	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remaindersWeights);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.remaindersWeights);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.remaindersWeights);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
397	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.cost);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  this.cost);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  this.cost);	  this.targetValues    =    Math.max(this.targetValues,    0,    cost);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
398	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	56	None	replace
399	[BUG]  [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	56	None	replace
400	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	56	None	replace
401	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOpti    	non-compiled	[CE]  not  a  statement	50	None	replace
402	[BUG]  [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  cost);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(this.targetValues,  cost);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(this.targetValues,  cost);	  this.targetValues    =    Math.max(resultsWeights,    cost);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
403	[BUG]  [BUGGY]  jF.setOptimizer(new  VectorialConvergenceChecker(0));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  jF.setOptimizer(new  VectorialConvergenceChecker(0));  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jF.setOptimizer(new  VectorialConvergenceChecker(0));	  jF.setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
404	[BUG]  [BUGGY]  setRestriction(DEFAULT_RERESULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  setRestriction(DEFAULT_RERESULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(DEFAULT_RERESULT_MAX_ITERATIONS);	  setRestriction(DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
405	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remaindersWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remaindersWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remaindersWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
406	[BUG]  [BUGGY]  targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	117	None	replace
407	[BUG]  [BUGGY]  this.targetValues  =  Math.min(remaindersWeights,  this.targetValues);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  Math.min(remaindersWeights,  this.targetValues);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.min(remaindersWeights,  this.targetValues);	  this.targetValues    =    Math.max(this.targetValues,    residualsWeights);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
408	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  not  a  statement	93	None	replace
409	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[2][	  if(this.remainingsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
410	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVariable(checker);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVariable(checker);  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setVariable(checker);  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
411	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  iterations.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  iterations.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  iterations.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	55	None	replace
412	[BUG]  [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(true);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker(true);  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  VectorialConvergenceChecker(true);	  this.targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
413	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols;  i++)  {  targetValues[i]  =	  =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
414	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  jacobianEvaluations.length;  i  <  cols;  i++)  {  targetValues[i]  =	  =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
415	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	122	None	replace
416	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	122	None	replace
417	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	122	None	replace
418	[BUG]  [BUGGY]  if(cols!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    cols.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
419	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variables);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variables);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker(variables);	  VectorialConvergenceChecker    targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
420	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
421	[BUG]  [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	58	None	replace
422	[BUG]  [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(targetValues    ==    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	58	None	replace
423	[BUG]  [BUGGY]  targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetCount];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	24	None	replace
424	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  }	  if(this.resultsWeights!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
425	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	9	None	replace
426	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  this.remainingsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	9	None	replace
427	[BUG]  [BUGGY]  int  residualsWeights  =  targetValues.length;  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  int  residualsWeights  =  targetValues.length;  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	int  residualsWeights  =  targetValues.length;  for(int  i  =  0,  cols  =  residualsWeights.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(remainingsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
428	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
429	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	120	None	replace
430	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(checker!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
431	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  2;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  2;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  2;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  For(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
432	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    }    	non-compiled	[CE]  not  a  statement	25	None	replace
433	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(resultsWeights!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
434	[BUG]  [BUGGY]  targetValues[i]  =  new  double[this.remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[this.remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[this.remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
435	[BUG]  [BUGGY]  targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[2];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	  targetValues[i]    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	136	None	replace
436	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[cols.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length    +    1];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
437	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][2];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][2];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][2];  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[3][1];    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
438	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);  setOptimizer(checker);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);  setOptimizer(checker);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(function);  setOptimizer(checker);	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
439	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(variant);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  VectorialConvergenceChecker(variant);  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker(variant);	  targetValues    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
440	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][0];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][0];  }  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][0];  }	  for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
441	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainings.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(remainingsWeights!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
442	[BUG]  [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker  ==  null)  {  setOptimizer(new  VectorialConvergenceChecker());  }  else  {  checker  =  new  VectorialConvergenceChecker();  }	  setOptimizer(new    VectorialConvergenceChecker());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
443	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(new  BasicVectorialValueChecker());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(new  BasicVectorialValueChecker());  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker(new  BasicVectorialValueChecker());	  VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
444	[BUG]  [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(cols!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	128	None	replace
445	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);      [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]        [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  jacobian.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
