bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  For(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	For(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  '.class'  expected	12	None	replace
15	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  }	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  0);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  cost,  0);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
18	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  2);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  cost,  2);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
19	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  cost);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0,  cost);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0,  cost);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  0);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  0);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	16	None	replace
22	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	16	None	replace
23	[BUG]  [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValu	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	16	None	replace
24	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	6	None	replace
25	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	6	None	replace
26	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  }	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	6	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	7	None	replace
30	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  }	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	7	None	replace
31	[BUG]  [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	Values[]  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	18	None	replace
35	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	14	None	replace
37	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  }	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	14	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
41	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker();  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	VectorialConvergenceChecker  targetValues  =  new  VectorialConvergenceChecker();	      if(targetValues!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  if(remainingsWeights  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights  ==  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  targetValues  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  VectorialConvergenceChecker();  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  VectorialConvergenceChecker();	      if(targetValues!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
47	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[6];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	19	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checkeder  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	13	None	replace
56	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	13	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
58	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
59	[BUG]  [BUGGY]  setOptimizer(new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  setOptimizer(new  VectorialConvergenceChecker());  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setOptimizer(new  VectorialConvergenceChecker());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length][];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length][];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.remainingsWeights  =  new  double[RemainingsWeights.length];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[RemainingsWeights.length];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  VectorialConvergenceChecker();  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  VectorialConvergenceChecker();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
64	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][3];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
65	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	13	None	replace
66	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	13	None	replace
67	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
70	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
71	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
74	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
75	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[5];    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
80	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[3][1];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
82	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
83	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
84	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
85	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    targetValues    =    new    VectorialConvergenceChecker();    }    else    {    targetValues    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
88	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
89	[BUG]  [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOpti	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
90	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
91	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	14	None	replace
92	[BUG]  [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length  +  cols.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
94	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	16	None	replace
95	[BUG]  [BUGGY]  setRestriction(DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  setRestriction(DEFAULT_MAX_ITERATIONS);  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	setRestriction(DEFAULT_MAX_ITERATIONS);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  jF.setOptimizer(new  VectorialConvergenceChecker());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  jF.setOptimizer(new  VectorialConvergenceChecker());  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	jF.setOptimizer(new  VectorialConvergenceChecker());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  double[remainingsWeights.length][0];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[remainingsWeights.length][0];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targets.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  residualsWeights);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  residualsWeights);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  residualsWeights);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
102	[BUG]  [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  cost);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(resultsWeights,  cost);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(resultsWeights,  cost);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
103	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
104	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][5];  }	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][5];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
106	[BUG]  [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	19	None	replace
107	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	19	None	replace
108	[BUG]  [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.resultsWeights!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
109	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
110	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  ];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
111	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  double[this.targetValues.length];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.length][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  double[this.targetValues.length][0];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.length][0];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ][0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  new  double[this.targetValues.size()  ][0];  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  new  double[this.targetValues.size()  ][0];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
117	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	7	None	replace
118	[BUG]  [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	14	None	replace
119	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	16	None	replace
121	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
122	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	11	None	replace
123	[BUG]  [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	=  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues  ==  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	18	None	replace
125	[BUG]  [BUGGY]  if(checker!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(checker!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(checker!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  }	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    set    	non-compiled	[CE]  not  a  statement	18	None	replace
126	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
127	[BUG]  [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(remainingsWeights!=  null)  {  targetValues  =  new  double[remainingsWeights.length  +  1];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	  if(targetValues!=    null)    {    targetValues    =    new    double[remainingsWeights.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols;    i++)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(cols!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	      if(targetValues!=    null)    {    for(int    i    =    0,    cols    =    targetValues.size();    i    <    cols;    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	13	None	replace
129	[BUG]  [BUGGY]  if(this.optional!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.optional!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.optional!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptional    	non-compiled	[CE]  not  a  statement	19	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[1][	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
131	[BUG]  [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  double[][]  jacobianEvaluations  =  new  double[2][1];  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	double[][]  jacobianEvaluations  =  new  double[2][1];	      if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    double[][]    jacobianEvaluations    =    new    double[2][1];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
132	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer	  if(this.targetValues!=    null)    {    for(int    i    =    0;    i    <    this.targetValues.size();    ++i)    {    VectorialConvergenceChecker    checker    =    new    VectorialConvergenceChecker();    setOptimizer(checker);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
133	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  1);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  cost,  1);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
134	[BUG]  [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  0.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.targetValues  =  Math.max(this.targetValues,  cost,  0.0);  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.targetValues  =  Math.max(this.targetValues,  cost,  0.0);	      this.targetValues    =    Math.max(this.targetValues,    cost);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
135	[BUG]  [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]      [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	this.remainingsWeights  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	  if(targetValues    ==    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    =    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
136	[BUG]  [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);    [BUGGY]  targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]    }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	targetValues[i]  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]	      if(targetValues!=    null)    {    targetValues    =    new    double[targetValues.length];    for(int    i    =    0,    cols    =    targetValues.length;    i    <    cols.length;    ++i)    {    targetValues[i]    	non-compiled	[CE]  not  a  statement	6	None	replace
