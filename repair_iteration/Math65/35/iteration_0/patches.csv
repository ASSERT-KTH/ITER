bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
2	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  =	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
3	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
4	[BUG]  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues  ==  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  =	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
6	[BUG]  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  ++i)  {  targetValues[i]		non-compiled	[CE]  not  a  statement	70	None	add
7	[BUG]  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  targetValues  =  new  double[targetValues.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols.length;  i++)  {  targetValues[i]		non-compiled	[CE]  not  a  statement	70	None	add
8	[BUG]  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [CE]  VectorialConvergenceChecker  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  targetValues  =  new  VectorialConvergenceChecker();  }  else  {  targetValues  =  new  VectorialConvergenceChecker();  }		non-compiled	[CE]  VectorialConvergenceChecker  is  abstract;  cannot  be  instantiated	70	None	add
9	[BUG]  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }		non-compiled	[CE]  illegal  start  of  expression	70	None	add
10	[BUG]  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }		non-compiled	[CE]  illegal  start  of  expression	70	None	add
11	[BUG]  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional		non-compiled	[CE]  not  a  statement	70	None	add
12	[BUG]  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();		non-compiled	[CE]  illegal  start  of  expression	70	None	add
13	[BUG]  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional		non-compiled	[CE]  not  a  statement	70	None	add
14	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  ++i)  {  targetValues[i]	}  	non-compiled	[CE]  not  a  statement	69	None	replace
15	[BUG]  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  for(int  i  =  0,  cols  =  targetValues.size();  i  <  cols;  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  }	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
16	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]	}  	non-compiled	[CE]  not  a  statement	69	None	replace
17	[BUG]  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(targetValues!=  null)  {  targetValues  =  new  double[remainingsWeights.length];  for(int  i  =  0,  cols  =  targetValues.length;  i  <  cols;  i++)  {  targetValues[i]  =	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
18	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  set	}  	non-compiled	[CE]  not  a  statement	69	None	replace
19	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptional	}  	non-compiled	[CE]  not  a  statement	69	None	replace
20	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  setOptimizer(checker);  }	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
21	[BUG]  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]  if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();  [BUGGY]    [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  VectorialConvergenceChecker  checker  =  new  VectorialConvergenceChecker();	}  	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
22	[BUG]  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][1];  }		non-compiled	[CE]  illegal  start  of  expression	70	None	add
23	[BUG]  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[5];  }		non-compiled	[CE]  illegal  start  of  expression	70	None	add
24	[BUG]  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][5];  }		non-compiled	[CE]  illegal  start  of  expression	70	None	add
25	[BUG]  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    if(this.targetValues!=  null)  {  for(int  i  =  0;  i  <  this.targetValues.size();  ++i)  {  double[][]  jacobianEvaluations  =  new  double[2][		non-compiled	[CE]  illegal  start  of  expression	70	None	add
26	[BUG]  [BUGGY]    this.targetValues  =  Math.max(this.targetValues,  cost);  [CE]  no  suitable  method  found  for  max(double[],double)  [FE]            AssertionFailedError  [CONTEXT]  protected  AbstractLeastSquaresOptimizer()  {  setConvergenceChecker(new  SimpleVectorialValueChecker());  setMaxIterations(DEFAULT_MAX_ITERATIONS);  setMaxEvaluations(Integer.MAX_VALUE);  [BUGGY]    this.targetValues  =  Math.max(this.targetValues,  cost);  [BUGGY]  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  <init>  [RETURN_TYPE]  AbstractLeastSquaresOptimizer()  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  double[]  objective  point  residuals  residualsWeights  targetValues  double  cost  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  iterations  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	0.25	120	120	1	replace	    this.targetValues  =  Math.max(this.targetValues,  cost);		non-compiled	[CE]  no  suitable  method  found  for  max(double[],double)	70	None	add
