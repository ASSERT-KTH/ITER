projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];Finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker().variant;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+1)];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols,residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols,i.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residualsIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(period);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=this.jacobian[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.sqrt(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(rows,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jacobian,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i+1],cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(results[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-1,-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jacobianEvaluations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,null,jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i,iterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows[i].value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows.value(jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cost,-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cost-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cost,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];Finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];finaldouble[]ji=jacobian[i+3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0,rows-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],points-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows-1,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],ji,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,i,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,ji,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i+1][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1][1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],residualsWeights[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]+1],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[cols.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=jf.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i]-residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],fieldValues[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],ji,residuals[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],dataArea[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost,residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(targetValues,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[cols.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[residualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[cols.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(rows,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value(jacobian[i],jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value(jacobian,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows[i].value(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],ji,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Double[]cols=jF.value(cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],Cost.MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],residualsWeights[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]-1],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],Cost.MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=this.checker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=jF.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=convergenceChecker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1],cost.doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i+1].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost,jacobian.length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost,jacobian;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length,i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-1,-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0,-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows,i.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows,i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,i,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(colon,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(i,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(point,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols,i.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols,i.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols,i.length-2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i][1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i].length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i].length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,point,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,DEFAULT_MAX_ITERATIONS,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker().variant(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]*1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]-1+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=this.jacobian[i].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables,i;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.sqrt(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.sqrt(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.sqrt(residuals[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(residualsWeights[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(residuals[i].value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(cols[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(residuals[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];finaldouble[]ji=jacobian[i*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];Finaldouble[]ji=jacobian[i*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];finaldouble[]ji=jacobian[i*2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];finaldouble[]ji=jacobian[i*1)];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-1,-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0,-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=residuals[i].value(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point,residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=residualsWeights[i].value(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian.value(jf.value(i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]*residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/field,cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Double[]cols=jF.value(i,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];finaldouble[]ji=newdouble[residualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];Finaldouble[]ji=newdouble[residualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];finaldouble[]ji=newdouble[ResidualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];finaldouble[]ji=newdouble[redualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+3];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191floatcols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].doubleValue().toArray(newdouble[cols.length]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights,cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(residuals[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(residuals[i]/2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],coefficients[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i,residuals[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,residuals[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=(VariableConvergenceChecker)getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],point,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],field,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,iterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,this.residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,dataIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]+1],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=getVariableConvergenceCheckerInstance(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=jacobian[i].value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=jacobian[i].value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=jacobian[i].value(ji);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(residuals[i].value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(residualsWeights[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(residuals[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],columns[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i,rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,range);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jF.value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-1,-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191longcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191Doublecols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jacobian,i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jf,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,point,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=residuals.value(i,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,field,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],value-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost-range[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],columns[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],colons[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],polymorphics[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=f.value(jacobian[i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],0,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],resins[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,values);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length-1+i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(total);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(period,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],2-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(0,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows,i].length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,0,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i],row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost.doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,i,negatives);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],columns));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[len,i.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],rows[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jF.value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i,negatives);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,dataArea,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=columns[i].value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],row,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[ji.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(params,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/range[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/parameters[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/polygons[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(ji[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*4];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=f.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],columns[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=checker.generateVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],value,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i,jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i-1,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=this.jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1][2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols,residualsWeights[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],coefficient));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(rows,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(rows,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jacobian,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i.next);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,cols,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];finaldouble[]ji=jacobian[i+4];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],parameters[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jF.value(i).length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-1-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],2,-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],level-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights,columns[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],1,rows-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+11];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i]*cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,graph);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],row,cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights,columnValues[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(rows,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,points);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i],residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],polymorphics[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residuals[i],jacobian[i]-residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,points);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].getValue(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(residuals[i].value());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows[i].value(jacobian,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],column,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=method.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[jacobian.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=this.jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jacobian,i+1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=rows[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=columns[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables,cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],jacobian.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value,jacobian.length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=polymorphics[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,row,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(residualsWeights,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].getValue(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].getValue(i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=columnValues[i].value(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],factor-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i+1,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];finaldouble[]ji=newdouble[residualsWeights.length].;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-jacobian[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],data[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,cols[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],columns[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],this.value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(ji,residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.min(residualsWeights[i],reziduals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=createVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jF.value(cols,i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jF.value(rows,i));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[len,cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[2+cols,i.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,cols[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker().variant,jacobian;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jacobian,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,point.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights[i]];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,i,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point.residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[len+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],factor);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],rows[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(residuals,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],coefficient));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i],residuals[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-rows[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length-1];
