projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols.length-1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[rows.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]cols=newdouble[cols.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i*1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i]/cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols[i],residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(point,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i]+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VariableConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];Finaldouble[]ji=jacobian[i+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+2];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker().variant;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1];finaldouble[]ji=jacobian[i+1)];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(cols,residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[cols,i.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-cols[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=getVariableConvergenceChecker().variables;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(i,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],rows[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i].length,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jf.value(jacobian[i].doubleValue());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],-Math.sqrt(jacobian[i]));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(cols,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residualsIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191double[]cols=jF.value(i,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i]-jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(period);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=this.jacobian[i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.sqrt(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191doublecols=Math.sqrt(residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i+1][0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=newdouble[residualsWeights.length];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],row,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=jacobian[i].value(rows,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights[i],residuals[i].length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191intcols=Math.min(residualsWeights,jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191cols=Math.min(residualsWeights[i],jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i],cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191finaldouble[]ji=cols[i].value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jacobian,i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java191VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,point);
