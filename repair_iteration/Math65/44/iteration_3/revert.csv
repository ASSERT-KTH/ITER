projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.size();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++jacobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetValues;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWeights;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getRows();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jf.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(point,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.max(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().getVisibleMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(rows,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(jF.value(rows),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(rows,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()*2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.cols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.length();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(point));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residuals;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.colonEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.updateJacobianEvaluation();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMP
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultSquares;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols.length;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.removeVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorialFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.valueEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultSize;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.valueIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.setVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultualsWeights;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWeights+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.results;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(rows,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(cols,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(rows,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(0,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,2-cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1,points);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()*1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()*2+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormat
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.updateMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)factor.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()/2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols<0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jF.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.setVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-1,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations+2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.setVectorialFunction(jF,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.setVectorialFunction(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.setVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows),cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows,cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=this.getMultivariateMatrixFunction().getVisibleMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(columns,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows),cost,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows),cost,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(cols),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.fields.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,cost,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(colons,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(field,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.cols()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=this.jF.cols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,2-cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,fields);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(colons);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(field);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,cost,iterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}if(cols>=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)jF.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)this.super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)super.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}If(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_S
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMP
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols.length;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jacobian.length,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,ji.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184rows>0){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,0,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.function.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.clone();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jF==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}If(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(null,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(null,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length==rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIM
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(cols>=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null||cols.length<2){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<1){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)factor.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(point),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(point),coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormat
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateVector();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateRow();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length+1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),ROI);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point,cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormat
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,Localized
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){if(jacobian!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){if(jacobian==null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columnCount()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.columnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columnCount()*2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows>=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}if(cols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}If(cols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}intcols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;++cols;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;++cols;++cols;this.residuals=newVectorialConvergenceChecker(this,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;++cols;++cols;this.residuals=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;++cols;++cols;this.residuals=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;++cols;++cols;this.residualsWeights=newdouble[Columns.length][1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}if(cols!=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}if(cols>=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}if(cols==cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}if(cols>>cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,0,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(point,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=f.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=f.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184doublecols=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jF.length,js.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length-1,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.removeVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.updateVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(rows,jF.value(cols),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(rows,cols,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;++rows;++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;++cols;++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;int++rows;++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;++rows;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;intcols;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[1]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jcobian!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jcobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.getColumnCount()-1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,Localized
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations+2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations*1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184rows>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols<0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184||cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)super.updateJacobianEvaluation();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateJacobianEvaluation();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.updateJacobianEvaluation();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsIterations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columns()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=(this.jF!=null)?this.jF.getColumns():0;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getCols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.cols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf==null){thrownewFunctionEvaluationException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateMatrixFunctionjf=getMultivariateMatrixFunction();if(jf!=null){thrownewFunctionEvaluationException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}If(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){if(jacobian==null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.target();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(point,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS,maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWights;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows<cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jF.updateMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jF.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jF.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jF.updateRow();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==0){++cols;++cols;}else{thrownewFunctionEvaluationException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==0){++cols;++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;++cols;}else{thrownewIllegalArgumentException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,cost,iterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,cost,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.length()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=this.jF.length();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetValues.length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetValues[0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,columns.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jcobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jcobian!=null){++jcobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point,rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations+2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations*1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.max(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.max(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.max(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,fields);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,columns.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorialFunction)getValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.updateMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.updateJacobianEvaluator();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWheel;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWeights[0];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultValues;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,0,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;++cols;}else{thrownewFunctionEvaluationException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvalu
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultSIMPLE;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.result;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(points));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols),0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this,function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.getVectorFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(point,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().getSelectedMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().getVisibilityMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.colonEvaluations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols)-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols)+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations*1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,row);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(column,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(residualsWeights,jf.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=getMultivariateMatrixFunction(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(residualsWeights,-Math.sqrt(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jacobian.columnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-1,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184AssertionFailedErrorjf=newAssertionFailedError(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(columns,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(columns+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jacobian.length();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jf.length();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.updateVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols.length;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,fields);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}If(cols!=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jf.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;intcols=Math.min(cols,jF.value(cols));}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point)-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}when(cols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(colon);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jf.cols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,fields);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.max(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIM
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()*4;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(jF.value(rows),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=getMultivariateVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(residualsWeights,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(!jF.value(cols[i])){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(!jF.value(cols[i])){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(!jF.value(cols[i])){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(!jF.value(cols[i])){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=(MutableMultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=(MutableMultivariateVectorialFunction)this.targetValues.get(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=(MutableMultivariateVectorialFunction)super.getVectoria();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jf.updateMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jf.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols=Math.min(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols=Math.min(cols,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=cols.substring(0,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=cols.substring(0,cols.length()-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=cols.value();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=JFactory.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jacobian.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(last);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=(this.jF!=null)?this.jF:this.jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(column,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(column.length,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,0,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;++rows;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;++rows;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;++rows;}else{thrownewFunctionEvaluationException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;++rows;}else{thrownewFunctionEvaluationException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.updateJacobianEvaluator();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols.length;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(0,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(rows,jF.value(cols)-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(field));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultualsIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.D
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH)!=null){++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,1,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MutableMultivariateVectorialFunctionjf=getMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jf.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWidth;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWeight;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows==null){++rows;}else{thrownewFunctionEvaluationException(Point.MISMATCH_SIMPLE,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point),residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(random);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(multivariateFunction);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.updateStandardJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,baseUri,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWidths;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols,cost));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormat
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++cols;++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++cols;++cols;}else{thrownewFunctionEvaluationException("");}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=null){++rows;++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,Local
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<cols.length){++cols.length;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateStandardJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.colonIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jf.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.cols(jF.cols());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null&&cols.length>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jf.clone();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(point!=null){++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=nu
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(point!=null){++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownew
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(point!=null){++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(point!=null){++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunction
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)==0){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols<cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.removeVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,Local
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.columnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.function.updateMatrix();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.function.update();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this,jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,baseUri,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,coefficient);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().withVisibleMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)this.function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jacobian.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jF.value(cols,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null&&cols.length>0){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorFunction)this.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorFunction)this.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}If(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(false,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jcobian==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jcobian==null){++jcobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,2-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null&&cols.length>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,2-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(jacobian.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(colons,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(row,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++jcobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.getVectorianFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols=Math.min(cols,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;intcols=Math.min(cols,jF.length());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=(this.jF!=null)?this.jF.getColumns():Collections.EMPTY_LIST;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.max(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(point),jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(bracobianEvaluations!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++bracobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(bracobianEvaluations!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(bracobianEvaluations!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,residuals);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations==null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,rows.length-1,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,COMMA);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184introws=Math.min(rows,jF.value(cols),DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getImplicitValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorialFunction)this.object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.update();
