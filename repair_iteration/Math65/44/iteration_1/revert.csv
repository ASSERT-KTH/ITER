projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.size();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++jacobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetValues;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsWeights;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getRows();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residualsIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)jf.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(point,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.max(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().getVisibleMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(rows,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(jF.value(rows),cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;introws=Math.min(rows,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobian==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=this.jF.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount()*2;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.cols();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.length();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jcobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(point));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(point));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionsuper=(MultivariateMatrixFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)this.super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionsuper=(MultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)function.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.object();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.residuals;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.colonEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.updateJacobianEvaluation();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,null);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction(i);if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){MultivariateVectorialFunctionjf=getMultivariateVectorialFunction();if(jf!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMP
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().value(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultSquares;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++cols.length;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.value(columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.columnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.removeVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=cols){++cols;}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorFunctionjf=(MultivariateVectorialFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,columns);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.function.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){double[][]jacobian=jF.value(point);if(jacobian.length!=rows){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){if(jF.value(cols,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;for(inti=0;i<cols;++i){jF.value(point);if(jF.value(rows)!=null){thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.valueEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultSize;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null||cols.length<2){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;intcols=Math.min(cols.length,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.valueIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.targetIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)this.object;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jacobianEvaluations!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(jF!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++bracobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction().evaluate(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.setVectorialFunction(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jf.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++cols;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols[0]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows>cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols>0){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(rows!=cols){++rows;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
