projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.size();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++jacobianEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++rows;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols!=null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184if(cols==null){++jacobianEvaluations;}else{thrownewFunctionEvaluationException(point,LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,rows);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=(MultivariateMatrixFunction)super.updateJacobian();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)super.getVectorialFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateMatrixFunctionjf=getMultivariateMatrixFunction();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184MultivariateVectorialFunctionjf=(MultivariateVectorialFunction)getObject();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultEvaluations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.resultIterations;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++cols;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumns();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184Integercols=jF.getColumnCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184intcols=Math.min(cols.length,jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java184++this.cobianEvaluations;
