projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(intj=i;j<cols;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(intj=0;j<cols;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(intj=i;j<rows;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){jTj[i][i]=jTj[i].doubleValue();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280double[][]rows=jTj.getRows();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){double[][]jTj=newdouble[cols][i];for(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){rows[i][i]=jTj[i].doubleValue();}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){double[][]jTj=newdouble[cols][i];for(inti=0;i<cols;++i){rows+=jacobian[
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280double[][]jTj=newdouble[cols][i].doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280double[][]jTj=newdouble[cols][i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280double[][]rows=jTj.doubleValue();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){jTj[i][i]=jTj[i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280for(inti=0;i<cols;++i){if(jTj[i][i]<=0){returnnewdouble[cols][i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280For(intj=0;j<cols;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280introws=Math.min(cols,jTj.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280introws=getRowCount();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280introws=jTj.size();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java280introws=jTj.length;
