projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=Math.sqrt(remaining*residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=residuals[i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=residuals[i];criterion+=Math.rint(remainder*residualsWeights[i]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0.0){for(inti=0;i<rows;++i){finaldoublecriterion=residuals[i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=residuals[i];criterion+=Math.sqrt(remaining*criterion);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*residual*residualsWeights[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*/residuals[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*2*residuals[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*Math.rint(remainder*residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*remaining*residuals[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=Math.sqrt(remainder*residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.min(remainder,criterion);criterion+=gram*residualsWeights[i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.min(remainder,criterion);criterion+=jF*residualsWeights[i];}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.rint(remainder[i]);criterion+=Math.sqrt(remainder*residualsWeights[i]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.rint(remainder[i]);criterion+=Math.sqrt(remainder*residualsWeights[i]
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*Math.sqrt(remainder*residuals[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243criterion+=residual*ji*residuals[i];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243for(inti=0;i<rows;++i){finaldoublecriterion=Math.sqrt(remainder*residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243for(inti=0;i<rows;++i){finaldoublecriterion=Math.sqrt(remainder*residualsWidths[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243for(inti=0;i<rows;++i){finaldoublecriterion=Math.min(remainder,criterion);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.rint(remainder);criterion+=Math.sqrt(remainder*residualsWeights[i]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java243if(remaining>0){for(inti=0;i<rows;++i){finaldoublecriterion=Math.sqrt(remainder*residualsWeights[i]);}
