projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[j][i]=sum;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[i][j]=sum;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[i][j]=total;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[i][j]=sum+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(inti=0;i<cols;++i){for(intj=0;j<cols;++j){sum+=jacobian[
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(inti=0;i<cols;++i){for(intj=0;j<rows;++j){sum+=jacobian[
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(intj=0;j<cols;++j){for(intj=0;j<rows;++j){sum+=jacobian[
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[i][j]=value;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[i][0]=sum;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(inti=0;i<cols;++i){for(intj=i;j<cols;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(inti=0;i<cols;++i){for(intj=i;j<cols;++j){sum+=jacobian[
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(inti=0;i<cols;++i){for(intj=i;j<cols;++j){sum+=j
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[cols][cols+1];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj[0][i]=sum;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286jTj=newdouble[rows][cols];
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]jTj=newdouble[rows][cols];for(intj=0;j<cols;++j){for(intj=0;j<rows;++j){sum+=j
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java286double[][]rows=sum.doubleValue();
