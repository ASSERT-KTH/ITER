bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  remaining  =  residuals[i]  -  1;  [CE]  cannot  find  symbol  residual  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  residuals[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  residuals[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    final    double    remaining    =    residuals[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  residual	27	None	replace
2	[BUG]  [BUGGY]  final  double  residuals[]  =  residuals[i]  -  1;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residuals[]  =  residuals[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residuals[]  =  residuals[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    final    double    remaining    =    residuals[i]    -    1;    	non-compiled	[CE]  incompatible  types	27	None	replace
3	[BUG]  [BUGGY]  double  residuals[][]  =  jf.remaining();  [CE]  cannot  find  symbol  jf  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.remaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.remaining();	  double    residuals[][]    =    jF.remaining();    	non-compiled	[CE]  cannot  find  symbol  jf	89	None	replace
4	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remaining()  +  i;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.remaining()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remaining()  +  i;	  double    residuals[][]    =    jF.remaining();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
5	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remaining()  *  i;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.remaining()  *  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remaining()  *  i;	  double    residuals[][]    =    jF.remaining();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
6	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  /  2;  [CE]  cannot  find  symbol  residues  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  /  2;	  final    double    residual    =    residuals[i]    /    2;    final    double    residual    =    residues[i]    /    2;    	non-compiled	[CE]  cannot  find  symbol  residues	111	None	replace
7	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  *  2;  [CE]  cannot  find  symbol  residues  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  *  2;	  final    double    residual    =    residuals[i]    /    2;    final    double    residual    =    residues[i]    /    2;    	non-compiled	[CE]  cannot  find  symbol  residues	111	None	replace
8	[BUG]  [BUGGY]  final  double  chiSquare  =  residuals[i]  *  chiSquare;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  residuals[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residuals[i]  *  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    final    double    residual    =    residuals[i]    *    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	18	None	replace
9	[BUG]  [BUGGY]  double[][]  residuals  =  jf.remainders();  [CE]  cannot  find  symbol  jf  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jf.remainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.remainders();	  double[][]    residuals    =    jF.remainders();    	non-compiled	[CE]  cannot  find  symbol  jf	87	None	replace
10	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  residuals.remainders();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  residuals.remainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  residuals.remainders();	  double[][]    residuals    =    jF.remainders();    	non-compiled	[CE]  ';'  expected	87	None	replace
11	[BUG]  [BUGGY]  double[][]  residuals  =  jF.remainders(i);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.remainders(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.remainders(i);	  double[][]    residuals    =    jF.remainders();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
12	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  3);  [CE]  cannot  find  symbol  results  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  3);	  chiSquare    =    Math.max(results[i],    2);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
13	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  4);  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  4);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  4);	  chiSquare    =    Math.max(results[i],    2);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
14	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  rows);	  double    chiSquare    =    Math.min(results[i],    0);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	4	None	replace
15	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)remainings[i]).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)remainings[i]).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)remainings[i]).remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)filter).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  remainings	128	None	replace
16	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)varianceChecker).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  varianceChecker  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)varianceChecker).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)varianceChecker).remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)filter).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  varianceChecker	128	None	replace
17	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variable).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variable).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variable).remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)filter).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  	128	None	replace
18	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)remainings[i].remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)remainings[i].remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)remainings[i].remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)filter).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  ')'  expected	128	None	replace
19	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  residualsWeights[i];  [CE]  array  required,  but  double  found  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  *  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  residualsWeights[i];	  final    double    residual    =    chiSquare[i]    *    residuals;    	non-compiled	[CE]  array  required,  but  double  found	106	None	replace
20	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare;  [CE]  cannot  find  symbol  residues  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  *  chiSquare;	  final    double    residual    =    chiSquare[i]    *    residuals;    	non-compiled	[CE]  cannot  find  symbol  residues	106	None	replace
21	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  i  +  2);	  double    chiSquare    =    Math.min(results[i],    i    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	2	None	replace
22	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  *  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  *  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  i  *  1);	  double    chiSquare    =    Math.min(results[i],    i    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	2	None	replace
23	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  1]);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  1]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  i  +  1]);	  double    chiSquare    =    Math.min(results[i],    i    +    1);    	non-compiled	[CE]  ')'  expected	2	None	replace
24	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues.get(i  -  1);	  double[][]    residuals    =(double[][])this.values.get(i    -    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
25	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  *  i  -  1);  [CE]  cannot  find  symbol  values  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  *  i  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.values.get(i  *  i  -  1);	  double[][]    residuals    =(double[][])this.values.get(i    -    1);    	non-compiled	[CE]  cannot  find  symbol  values	57	None	replace
26	[BUG]  [BUGGY]  final  double  residual  =  remainingsWeights[i];  [CE]  cannot  find  symbol  remainingsWeights  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  remainingsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  remainingsWeights[i];	  final    double    residual    =    residualsWeights[i];    final    double    residual    =    remainingsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	125	None	replace
27	[BUG]  [BUGGY]  final  double  residual  =  remaindersWeights[i];  [CE]  cannot  find  symbol  remaindersWeights  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  remaindersWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  remaindersWeights[i];	  final    double    residual    =    residualsWeights[i];    final    double    residual    =    remainingsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  remaindersWeights	125	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  4;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
29	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  4;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  3;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
31	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  3;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2.0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  2.0;	  final    double    residual    =    residuals[i]    /    2;    final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	58	1	replace
33	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2.0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  2.0;	  final    double    residual    =    residuals[i]    /    2;    final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	58	1	replace
34	[BUG]  [BUGGY]  double  residuals[][]  =  jF.evaluate(variable,  cost);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.evaluate(variable,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.evaluate(variable,  cost);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  	143	None	replace
35	[BUG]  [BUGGY]  double  residuals[][]  =  jF.evaluate(variants,  cost);  [CE]  cannot  find  symbol  variants  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.evaluate(variants,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.evaluate(variants,  cost);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  variants	143	None	replace
36	[BUG]  [BUGGY]  double  residuals[][]  =  jF.evaluate(variante,  cost);  [CE]  cannot  find  symbol  variante  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.evaluate(variante,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.evaluate(variante,  cost);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  variante	143	None	replace
37	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  2);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    /    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	46	None	replace
38	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  2);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    /    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	46	None	replace
39	[BUG]  [BUGGY]  final  double  residual  =  jF.remainders[i];  [CE]  cannot  find  symbol  remainders  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.remainders[i];	  final    double    residual    =    ji.remainders[i];    	non-compiled	[CE]  cannot  find  symbol  remainders	123	None	replace
40	[BUG]  [BUGGY]  final  double  residual  =  jf.remainders[i];  [CE]  cannot  find  symbol  jf  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jf.remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.remainders[i];	  final    double    residual    =    ji.remainders[i];    	non-compiled	[CE]  cannot  find  symbol  jf	123	None	replace
41	[BUG]  [BUGGY]  final  double  residual  =  i.remainders[i];  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i.remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i.remainders[i];	  final    double    residual    =    ji.remainders[i];    	non-compiled	[CE]  int  cannot  be  dereferenced	123	None	replace
42	[BUG]  [BUGGY]  double  residuals[][]  =  ji.getRows();  [CE]  cannot  find  symbol  ji  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  ji.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  ji.getRows();	  double    residuals[][]    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol  ji	63	None	replace
43	[BUG]  [BUGGY]  double  residuals[][]  =  i.getRows();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  i.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  i.getRows();	  double    residuals[][]    =    jf.getRows();    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
44	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chiSquare  *  i;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chiSquare  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    final  double  residual  =  chiSquare  *  i;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	53	None	add
45	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  Final  double  residual  =  chiSquare  *  i;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  Final  double  residual  =  chiSquare  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    Final  double  residual  =  chiSquare  *  i;	  	non-compiled	[CE]  not  a  statement	53	None	add
46	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chiSquare  *  i);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chiSquare  *  i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    final  double  residual  =  chiSquare  *  i);	  	non-compiled	[CE]  ';'  expected	53	None	add
47	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  remaining  =  chiSquare  *  i;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  remaining  =  chiSquare  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    final  double  remaining  =  chiSquare  *  i;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	53	None	add
48	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  jF[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  jF[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  jF[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	16	None	replace
49	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  *  chiSquares[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i]  *  chiSquares[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  *  chiSquares[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	16	None	replace
50	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  *  residualsWeights[i]  +  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i]  *  residualsWeights[i]  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  *  residualsWeights[i]  +  1;	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	16	None	replace
51	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  /  residuals[i];  [CE]  array  required,  but  double  found  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  /  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  /  residuals[i];	  final    double    residual    =    residuals[i]    /    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	74	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  chiSquare  +  1;	  final    double    residual    =    residuals[i]    /    chiSquare;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
53	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  chiSquare  +  1;	  final    double    residual    =    residuals[i]    /    chiSquare;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
54	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  /  chiSquare;  [CE]  array  required,  but  int  found  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  rows[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  /  chiSquare;	  final    double    residual    =    residuals[i]    /    chiSquare;    	non-compiled	[CE]  array  required,  but  int  found	74	None	replace
55	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  /  1;  [CE]  array  required,  but  int  found  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  rows[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  /  1;	  final    double    residual    =    rows[i]    -    1;    	non-compiled	[CE]  array  required,  but  int  found	140	None	replace
56	[BUG]  [BUGGY]  final  double  residual  =  jF,  rows[i]  -  1;  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF,  rows[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF,  rows[i]  -  1;	  final    double    residual    =    rows[i]    -    1;    	non-compiled	[CE]  ']'  expected	140	None	replace
57	[BUG]  [BUGGY]  final  double  residual  =  this.rows[i]  -  1;  [CE]  array  required,  but  int  found  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.rows[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.rows[i]  -  1;	  final    double    residual    =    rows[i]    -    1;    	non-compiled	[CE]  array  required,  but  int  found	140	None	replace
58	[BUG]  [BUGGY]  final  double  remaining  =  residuals[i];  [CE]  cannot  find  symbol  residual  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  residuals[i];	  final    double    residual    =    residualsWeights[i];    final    double    remaining    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residual	15	None	replace
59	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  cost);  [CE]  cannot  find  symbol  variate  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  cost);	  ((    VectorialConvergenceChecker)variate).getChiSquare(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	9	None	replace
60	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  i);  [CE]  cannot  find  symbol  variate  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  i);	  ((    VectorialConvergenceChecker)variate).getChiSquare(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	9	None	replace
61	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  coefficient);  [CE]  cannot  find  symbol  coefficient  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  coefficient);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare,  coefficient);	  ((    VectorialConvergenceChecker)variate).getChiSquare(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  coefficient	9	None	replace
62	[BUG]  [BUGGY]  double  residuals[][]  =  ji.getRemainings();  [CE]  cannot  find  symbol  ji  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  ji.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  ji.getRemainings();	  double    residuals[][]    =    jf.getRemainings();    	non-compiled	[CE]  cannot  find  symbol  ji	83	None	replace
63	[BUG]  [BUGGY]  double  residuals[][]  =  i.getRemainings();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  i.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  i.getRemainings();	  double    residuals[][]    =    jf.getRemainings();    	non-compiled	[CE]  int  cannot  be  dereferenced	83	None	replace
64	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  remainings[i];  [CE]  cannot  find  symbol  remainings  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  remainings[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  remainings[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	non-compiled	[CE]  cannot  find  symbol  remainings	108	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  residuals[i]  +  1;	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
66	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  residuals[i]  +  1;	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
67	[BUG]  [BUGGY]  final  double  remaining  =  residuals[i]  *  chiSquare;  [CE]  cannot  find  symbol  residual  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  residuals[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  residuals[i]  *  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    final    double    remaining    =    residuals[i]    *    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  residual	20	None	replace
68	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare);  [CE]  cannot  find  symbol  variate  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialRemainingChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	118	None	replace
69	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(period);  [CE]  cannot  find  symbol  variate  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(period);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(period);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialRemainingChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	118	None	replace
70	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare,  i);  [CE]  cannot  find  symbol  variate  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker(chiSquare,  i);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialRemainingChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	118	None	replace
71	[BUG]  [BUGGY]  final  double  residual  =  0;  final  double  residual  =  0;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  final  double  residual  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    final  double  residual  =  0;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	49	None	add
72	[BUG]  [BUGGY]  final  double  residual  =  0;  Final  double  residual  =  0;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  Final  double  residual  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    Final  double  residual  =  0;	  	non-compiled	[CE]  not  a  statement	49	None	add
73	[BUG]  [BUGGY]  final  double  residual  =  0;  static  final  double  residual  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  static  final  double  residual  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    static  final  double  residual  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
74	[BUG]  [BUGGY]  final  double  residual  =  0;  final  double  residue  =  0;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  final  double  residue  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    final  double  residue  =  0;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	49	None	add
75	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residuals[i]  /  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residuals[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    1;    final  double  residual  =  residuals[i]  /  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	35	None	add
76	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  Final  double  residual  =  residuals[i]  /  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  1;  Final  double  residual  =  residuals[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    1;    Final  double  residual  =  residuals[i]  /  1;	  	non-compiled	[CE]  not  a  statement	35	None	add
77	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residuals[i]  /  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residuals[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    1;    final  double  residual  =  residuals[i]  /  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	35	None	add
78	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  remaining  =  residuals[i]  /  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  remaining  =  residuals[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    1;    final  double  remaining  =  residuals[i]  /  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	35	None	add
79	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRemainders();  [CE]  cannot  find  symbol  jf  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRemainders();	  double    residuals[][]    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol  jf	112	None	replace
80	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remainders();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.remainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remainders();	  double    residuals[][]    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
81	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  function.getRemainders();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  function.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  function.getRemainders();	  double    residuals[][]    =    jF.getRemainders();    	non-compiled	[CE]  ';'  expected	112	None	replace
82	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.results.clone();  [CE]  cannot  find  symbol  results  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.results.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.results.clone();	  double[][]    residuals    =(double[][])values.clone();    	non-compiled	[CE]  cannot  find  symbol  results	69	None	replace
83	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.resistances.clone();  [CE]  cannot  find  symbol  resistances  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.resistances.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.resistances.clone();	  double[][]    residuals    =(double[][])values.clone();    	non-compiled	[CE]  cannot  find  symbol  resistances	69	None	replace
84	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1,  rows);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1,  rows);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	104	None	replace
85	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length  -  1);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	104	None	replace
86	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(chiSquare);  [CE]  inconvertible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).getChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  inconvertible  types	11	None	replace
87	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(this.convergenceChecker);  [CE]  cannot  find  symbol  convergenceChecker  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(this.convergenceChecker);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).getChiSquare(this.convergenceChecker);	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol  convergenceChecker	11	None	replace
88	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(ji);  [CE]  cannot  find  symbol  ji  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(ji);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).getChiSquare(ji);	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol  ji	11	None	replace
89	[BUG]  [BUGGY]  double  residuals[][]  =  ji.getRemaining();  [CE]  cannot  find  symbol  ji  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  ji.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  ji.getRemaining();	  double    residuals[][]    =    jf.getRemaining();    	non-compiled	[CE]  cannot  find  symbol  ji	90	None	replace
90	[BUG]  [BUGGY]  double  residuals[][]  =  i.getRemaining();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  i.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  i.getRemaining();	  double    residuals[][]    =    jf.getRemaining();    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
91	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(jF,  i);  [CE]  cannot  find  symbol  variate  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(jF,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(jF,  i);	  ((    VectorialConvergenceChecker)variate).getChiSquare(i);    	non-compiled	[CE]  cannot  find  symbol  variate	10	None	replace
92	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)convergenceChecker).getChiSquare(i);  [CE]  cannot  find  symbol  convergenceChecker  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)convergenceChecker).getChiSquare(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)convergenceChecker).getChiSquare(i);	  ((    VectorialConvergenceChecker)variate).getChiSquare(i);    	non-compiled	[CE]  cannot  find  symbol  convergenceChecker	10	None	replace
93	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])targetValues.get(i);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])targetValues.get(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])targetValues.get(i);	  double[][]    residuals    =(double[][])this.targetValues.get(i);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
94	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues.get(i  +  1);	  double[][]    residuals    =(double[][])this.targetValues.get(i);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
95	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).convergents[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  convergents  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).convergents[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).convergents[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  convergents	117	None	replace
96	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).constraints[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  constraints  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).constraints[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).constraints[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  constraints	117	None	replace
97	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).redefinitions[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  redefinitions  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).redefinitions[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).redefinitions[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  redefinitions	117	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  i  +  1;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
99	[BUG]  [BUGGY]  final  double  residual  =  i  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i  +  1;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  2;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
101	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  2;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  1;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
103	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  1;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
104	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)period).remainings[i]  =  new  VectorialConvergenceChecker(variate);  [CE]  cannot  find  symbol  period  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)period).remainings[i]  =  new  VectorialConvergenceChecker(variate);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)period).remainings[i]  =  new  VectorialConvergenceChecker(variate);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(period);    	non-compiled	[CE]  cannot  find  symbol  period	32	None	replace
105	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period,  i);  [CE]  cannot  find  symbol  variate  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period,  i);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(period);    	non-compiled	[CE]  cannot  find  symbol  variate	32	None	replace
106	[BUG]  [BUGGY]  final  double  residual  =  jF.getRemainder()  *  i;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.getRemainder()  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRemainder()  *  i;	  final    double    residual    =    jF.getRemainder()    +    i;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
107	[BUG]  [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRemainder()  +  i  +  1;	  final    double    residual    =    jF.getRemainder()    +    i;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
108	[BUG]  [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i  +  2;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRemainder()  +  i  +  2;	  final    double    residual    =    jF.getRemainder()    +    i;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
109	[BUG]  [BUGGY]  final  double  residual  =  jF.remainder(i);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.remainder(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.remainder(i);	  final    double    residual    =    jF.remainder();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
110	[BUG]  [BUGGY]  final  double  residual  =  jF.remainder()  +  i;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.remainder()  +  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.remainder()  +  i;	  final    double    residual    =    jF.remainder();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
111	[BUG]  [BUGGY]  final  double  residual  =  jf.remainder();  [CE]  cannot  find  symbol  jf  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jf.remainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.remainder();	  final    double    residual    =    jF.remainder();    	non-compiled	[CE]  cannot  find  symbol  jf	31	None	replace
112	[BUG]  [BUGGY]  final  double  residue  =  chiSquare;  [CE]  cannot  find  symbol  residual  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residue  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residue  =  chiSquare;	  final    double    residual    =    chiSquare;    final    double    residue    =    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  residual	96	None	replace
113	[BUG]  [BUGGY]  final  double  chiSquare  =  chiSquare;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  chiSquare;	  final    double    residual    =    chiSquare;    final    double    residue    =    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	96	None	replace
114	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  1);	  double    chiSquare    =    Math.min(results[i],    jF.getValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	7	None	replace
115	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jf.getValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jf.getValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jf.getValue());	  double    chiSquare    =    Math.min(results[i],    jF.getValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	7	None	replace
116	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length  +  1);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	97	None	replace
117	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  2);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	97	None	replace
118	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  rows);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  rows);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	97	None	replace
119	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  row);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  row);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1,  row);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	97	None	replace
120	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  residual  =  residuals[i]  -  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  residual  =  residuals[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    2;    final  double  residual  =  residuals[i]  -  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	39	None	add
121	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  Final  double  residual  =  residuals[i]  -  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  2;  Final  double  residual  =  residuals[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    2;    Final  double  residual  =  residuals[i]  -  2;	  	non-compiled	[CE]  not  a  statement	39	None	add
122	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  remaining  =  residuals[i]  -  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  remaining  =  residuals[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    2;    final  double  remaining  =  residuals[i]  -  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	39	None	add
123	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  residual  =  residues[i]  -  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  2;  final  double  residual  =  residues[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    2;    final  double  residual  =  residues[i]  -  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	39	None	add
124	[BUG]  [BUGGY]  final  double  residual  =  chiSquare.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare.doubleValue();	  final    double    residual    =    chiSquare;    final    double    residual    =    chiSquare;    	non-compiled	[CE]  double  cannot  be  dereferenced	92	None	replace
125	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  *  2);	  double    chiSquare    =    Math.min(results[i],    jF.getValue()    /    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	8	None	replace
126	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  -  1;  [CE]  cannot  find  symbol  residues  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residuals[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  residues	25	None	replace
127	[BUG]  [BUGGY]  final  double  residual  =  remainings[i]  -  1;  [CE]  cannot  find  symbol  remainings  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  remainings[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  remainings[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residuals[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  remainings	25	None	replace
128	[BUG]  [BUGGY]  last  double  residual  =  residuals[i]  /  2;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  residuals[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  residuals[i]  /  2;	  final    double    residual    =    residuals[i]    /    2;    last    double    residual    =    residuals[i]    /    2;    	non-compiled	[CE]  not  a  statement	139	None	replace
129	[BUG]  [BUGGY]  last  double  residual  =  residuals[i]  *  2;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  residuals[i]  *  2;	  final    double    residual    =    residuals[i]    /    2;    last    double    residual    =    residuals[i]    /    2;    	non-compiled	[CE]  not  a  statement	139	None	replace
130	[BUG]  [BUGGY]  last  double  residual  =  residuals[i]  /  2.0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  residuals[i]  /  2.0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  residuals[i]  /  2.0;	  final    double    residual    =    residuals[i]    /    2;    last    double    residual    =    residuals[i]    /    2;    	non-compiled	[CE]  not  a  statement	139	None	replace
131	[BUG]  [BUGGY]  final  double  chiSquare  =  this.chiSquare[i];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  this.chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  this.chiSquare[i];	  final    double    residual    =    this.chiSquare[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	65	None	replace
132	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residuals[i]  /  4;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residuals[i]  /  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    final  double  residual  =  residuals[i]  /  4;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	81	None	add
133	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  Final  double  residual  =  residuals[i]  /  4;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  Final  double  residual  =  residuals[i]  /  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    Final  double  residual  =  residuals[i]  /  4;	  	non-compiled	[CE]  not  a  statement	81	None	add
134	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  remaining  =  residuals[i]  /  4;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  remaining  =  residuals[i]  /  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    final  double  remaining  =  residuals[i]  /  4;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	81	None	add
135	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residues[i]  /  4;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residues[i]  /  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    final  double  residual  =  residues[i]  /  4;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	81	None	add
136	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getRawVariables();  [CE]  cannot  find  symbol  jf  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jf.getRawVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getRawVariables();	  double[][]    residuals    =    jF.getRawVariables();    	non-compiled	[CE]  cannot  find  symbol  jf	102	None	replace
137	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRawVariables(i);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRawVariables(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRawVariables(i);	  double[][]    residuals    =    jF.getRawVariables();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
138	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  *  1);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	122	None	replace
139	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jf.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jf.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jf.doubleValue());	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	122	None	replace
140	[BUG]  [BUGGY]  final  double  chiSquare  =  residuals[i  +  1];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  residuals[i  +  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residuals[i  +  1];	  final    double    chiSquare    =    residuals[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	1	None	replace
141	[BUG]  [BUGGY]  final  double  chiSquare  =  residuals[i]  -  residualsWeights[i];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  residuals[i]  -  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residuals[i]  -  residualsWeights[i];	  final    double    chiSquare    =    residuals[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	1	None	replace
142	[BUG]  [BUGGY]  final  double  chiSquare  =  residuals[i]  /  2;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  residuals[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residuals[i]  /  2;	  final    double    chiSquare    =    residuals[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	1	None	replace
143	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.length);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.length);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  rows.length);	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
144	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  row,  jF.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  row,  jF.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  row,  jF.doubleValue());	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
145	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.length,  jF.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.length,  jF.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  rows.length,  jF.doubleValue());	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
146	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  &  residualsWeights[i];  [CE]  array  required,  but  double  found  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  &  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  &  residualsWeights[i];	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
147	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  /  chiSquare;  [CE]  array  required,  but  double  found  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  /  chiSquare;	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
148	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  -  chiSquare;  [CE]  array  required,  but  double  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  -  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  -  chiSquare;	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
149	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  chiSquare;  [CE]  array  required,  but  double  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  chiSquare;	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
150	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(rows[i]);  [CE]  array  required,  but  int  found  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(rows[i]);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.sqrt(rows[i]);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	non-compiled	[CE]  array  required,  but  int  found	131	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  Math.sqrt(i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
152	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  Math.sqrt(i);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  Math.sqrt(i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
153	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(rows,  i);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(rows,  i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.sqrt(rows,  i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	131	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i  +  1);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  Math.sqrt(i  +  1);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
155	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i  +  1);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.sqrt(i  +  1);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
156	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemaining()  *  i;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.getRemaining()  *  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemaining()  *  i;	  double    residuals[][]    =    jF.getRemaining()    +    i;    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
157	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  ji.getRemaining()  +  i;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  ji.getRemaining()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  ji.getRemaining()  +  i;	  double    residuals[][]    =    jF.getRemaining()    +    i;    	non-compiled	[CE]  ';'  expected	91	None	replace
158	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRemaining()  +  i;  [CE]  cannot  find  symbol  jf  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.getRemaining()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRemaining()  +  i;	  double    residuals[][]    =    jF.getRemaining()    +    i;    	non-compiled	[CE]  cannot  find  symbol  jf	91	None	replace
159	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  1);  [CE]  cannot  find  symbol  results  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  1);	  chiSquare    =    Math.max(results[i],    1);    	non-compiled	[CE]  cannot  find  symbol  results	22	None	replace
160	[BUG]  [BUGGY]  final  double  residual  =  jF.getRawRemainder()  +  i;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.getRawRemainder()  +  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRawRemainder()  +  i;	  final    double    residual    =    jF.getRawRemainder();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
161	[BUG]  [BUGGY]  final  double  residual  =  jf.getRawRemainder();  [CE]  cannot  find  symbol  jf  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jf.getRawRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.getRawRemainder();	  final    double    residual    =    jF.getRawRemainder();    	non-compiled	[CE]  cannot  find  symbol  jf	30	None	replace
162	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  1);	  double    chiSquare    =    Math.min(results[i],    jF.getItemCount());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	105	None	replace
163	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  +  1);	  double    chiSquare    =    Math.min(results[i],    jF.getItemCount());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	105	None	replace
164	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  -  2);	  double    chiSquare    =    Math.min(results[i],    jF.getItemCount());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	105	None	replace
165	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  /  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  /  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getItemCount()  /  2);	  double    chiSquare    =    Math.min(results[i],    jF.getItemCount());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	105	None	replace
166	[BUG]  [BUGGY]  final  double  residual  =  residuals[i].remainder;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i].remainder;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i].remainder;	  final    double    residual    =    jF[i].remainder;    	non-compiled	[CE]  double  cannot  be  dereferenced	114	None	replace
167	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remainder.doubleValue();  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remainder.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remainder.doubleValue();	  final    double    residual    =    jF[i].remainder;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	114	None	replace
168	[BUG]  [BUGGY]  final  double  residual  =  jF[i].getRemainder();  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].getRemainder();	  final    double    residual    =    jF[i].remainder;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	114	None	replace
169	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare(chiSquare);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).getChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)checker).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
170	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare(i);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).getChiSquare(i);	  ((    VectorialConvergenceChecker)checker).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
171	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).setChiSquare(chiSquare);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).setChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).setChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)checker).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
172	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])rows.clone();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])rows.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])rows.clone();	  double[][]    residuals    =(double[][])results.clone();    	non-compiled	[CE]  int  cannot  be  dereferenced	68	None	replace
173	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])ji.clone();  [CE]  cannot  find  symbol  ji  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])ji.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])ji.clone();	  double[][]    residuals    =(double[][])results.clone();    	non-compiled	[CE]  cannot  find  symbol  ji	68	None	replace
174	[BUG]  [BUGGY]  double[][]  residuals  =  jF.remainings();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.remainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.remainings();	  double[][]    residuals    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
175	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getRemainings();  [CE]  cannot  find  symbol  jf  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jf.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getRemainings();	  double[][]    residuals    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol  jf	42	None	replace
176	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  ji.getRemainings();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  ji.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  ji.getRemainings();	  double[][]    residuals    =    jF.getRemainings();    	non-compiled	[CE]  ';'  expected	42	None	replace
177	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  1);	  double    chiSquare    =    Math.min(results[i],    cost.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	44	None	replace
178	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  +  2);	  double    chiSquare    =    Math.min(results[i],    cost.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	44	None	replace
179	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  /  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  /  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  /  2);	  double    chiSquare    =    Math.min(results[i],    cost.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	44	None	replace
180	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length,  i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length,  i);	  double    chiSquare    =    Math.min(results[i]    *    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	98	None	replace
181	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length,  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length,  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length,  2);	  double    chiSquare    =    Math.min(results[i]    *    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	98	None	replace
182	[BUG]  [BUGGY]  final  double  residual  =  this.resultsWeights[i]  /  2;  [CE]  cannot  find  symbol  resultsWeights  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.resultsWeights[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.resultsWeights[i]  /  2;	  final    double    residual    =    this.resultsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	124	None	replace
183	[BUG]  [BUGGY]  final  double  residual  =  this.resultsWeights[i]  -  1;  [CE]  cannot  find  symbol  resultsWeights  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.resultsWeights[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.resultsWeights[i]  -  1;	  final    double    residual    =    this.resultsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	124	None	replace
184	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getColumns();  [CE]  cannot  find  symbol  jf  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.getColumns();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getColumns();	  double    residuals[][]    =    jF.getColumns();    	non-compiled	[CE]  cannot  find  symbol  jf	62	None	replace
185	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)results[i]).constraints[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  results  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)results[i]).constraints[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)results[i]).constraints[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)variate).constraints[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  results	34	None	replace
186	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)result).constraints[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)result).constraints[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)result).constraints[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)variate).constraints[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  result	34	None	replace
187	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  1);	  double    chiSquare    =    Math.min(results[i],    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	5	None	replace
188	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  i.getRemainings();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  i.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  i.getRemainings();	  double    residuals[][]    =    jF,    cost.getRemainings();    	non-compiled	[CE]  ';'  expected	109	None	replace
189	[BUG]  [BUGGY]  double  residuals[][]  =  cost,  jF.getRemainings();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  cost,  jF.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  cost,  jF.getRemainings();	  double    residuals[][]    =    jF,    cost.getRemainings();    	non-compiled	[CE]  ';'  expected	109	None	replace
190	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainings()  +  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainings()  +  1;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.getRemainings()  +  1;	  double    residuals[][]    =    jF,    cost.getRemainings();    	non-compiled	[CE]  ';'  expected	109	None	replace
191	[BUG]  [BUGGY]  double  residuals[][]  =  jf.remainings();  [CE]  cannot  find  symbol  jf  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.remainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.remainings();	  double    residuals[][]    =    jF.remainings();    	non-compiled	[CE]  cannot  find  symbol  jf	84	None	replace
192	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remainings(i);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.remainings(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remainings(i);	  double    residuals[][]    =    jF.remainings();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
193	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    2;    final  double  residual  =  residuals[i]  *  chiSquare  +  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	75	None	add
194	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  Final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  Final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    2;    Final  double  residual  =  residuals[i]  *  chiSquare  +  2;	  	non-compiled	[CE]  not  a  statement	75	None	add
195	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  remaining  =  residuals[i]  *  chiSquare  +  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  remaining  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    2;    final  double  remaining  =  residuals[i]  *  chiSquare  +  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	75	None	add
196	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residues[i]  *  chiSquare  +  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residues[i]  *  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    2;    final  double  residual  =  residues[i]  *  chiSquare  +  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	75	None	add
197	[BUG]  [BUGGY]  final  double  remaining  =  chiSquare;  [CE]  cannot  find  symbol  residual  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  chiSquare;	  final    double    residual    =    chiSquare;    final    double    remaining    =    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  residual	94	None	replace
198	[BUG]  [BUGGY]  double[][]  residuals  =  ji.getRemainders();  [CE]  cannot  find  symbol  ji  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  ji.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  ji.getRemainders();	  double[][]    residuals    =    jf.getRemainders();    	non-compiled	[CE]  cannot  find  symbol  ji	86	None	replace
199	[BUG]  [BUGGY]  double[][]  residuals  =  function.getRemainders();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  function.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  function.getRemainders();	  double[][]    residuals    =    jf.getRemainders();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
200	[BUG]  [BUGGY]  last  double  residual  =  chiSquare;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  chiSquare;	  final    double    residual    =    chiSquare;    last    double    residual    =    chiSquare;    	non-compiled	[CE]  not  a  statement	133	None	replace
201	[BUG]  [BUGGY]  last  double  chiSquare  =  chiSquare;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  chiSquare  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  chiSquare  =  chiSquare;	  final    double    residual    =    chiSquare;    last    double    residual    =    chiSquare;    	non-compiled	[CE]  not  a  statement	133	None	replace
202	[BUG]  [BUGGY]  last  double  residual  =  chiSquare.doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  chiSquare.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  chiSquare.doubleValue();	  final    double    residual    =    chiSquare;    last    double    residual    =    chiSquare;    	non-compiled	[CE]  not  a  statement	133	None	replace
203	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  cols.getColumns();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  cols.getColumns();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  cols.getColumns();	  double[][]    residuals    =    jF.getColumns();    	non-compiled	[CE]  ';'  expected	41	None	replace
204	[BUG]  [BUGGY]  final  double  residual  =  this.resistances[i];  [CE]  cannot  find  symbol  resistances  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.resistances[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.resistances[i];	  final    double    residual    =    this.chiSquares[i];    	non-compiled	[CE]  cannot  find  symbol  resistances	127	None	replace
205	[BUG]  [BUGGY]  final  double  residual  =(this.chiSquares[i]  <  =  0)?  this.period  :  this.chiSquares[i];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =(this.chiSquares[i]  <  =  0)?  this.period  :  this.chiSquares[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =(this.chiSquares[i]  <  =  0)?  this.period  :  this.chiSquares[i];	  final    double    residual    =    this.chiSquares[i];    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
206	[BUG]  [BUGGY]  final  double  remaining  =  residuals[i]  /  2;  [CE]  cannot  find  symbol  residual  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  residuals[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  residuals[i]  /  2;	  final    double    residual    =    residuals[i]    /    2;    final    double    remaining    =    residuals[i]    /    2;    	non-compiled	[CE]  cannot  find  symbol  residual	60	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  2  +  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
208	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  2  +  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  2  *  1  +  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
210	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  2  *  1  +  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  3;	  final    double    residual    =    residuals[i]    /    4;    	compilable	  [FE]  AssertionFailedError  	82	1	replace
212	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  3;	  final    double    residual    =    residuals[i]    /    4;    	compilable	  [FE]  AssertionFailedError  	82	1	replace
213	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRemainders(i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i  +  1);	  double[][]    residuals    =    jF.getRemainders(i);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
214	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  cols);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  cols);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i,  cols);	  double[][]    residuals    =    jF.getRemainders(i);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
215	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  ji);  [CE]  cannot  find  symbol  ji  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  ji);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i,  ji);	  double[][]    residuals    =    jF.getRemainders(i);    	non-compiled	[CE]  cannot  find  symbol  ji	88	None	replace
216	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  1);	  double    chiSquare    =    Math.min(results[i],    value.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	126	None	replace
217	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  value.doubleValue()  +  2);	  double    chiSquare    =    Math.min(results[i],    value.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	126	None	replace
218	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  /  1;  [CE]  cannot  find  symbol  residues  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  /  1;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residues[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  residues	28	None	replace
219	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residual  =  chiSquare  +  Math.sqrt(i);  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residual  =  chiSquare  +  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    final  double  residual  =  chiSquare  +  Math.sqrt(i);	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	130	None	add
220	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  Final  double  residual  =  chiSquare  +  Math.sqrt(i);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  Final  double  residual  =  chiSquare  +  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    Final  double  residual  =  chiSquare  +  Math.sqrt(i);	  	non-compiled	[CE]  not  a  statement	130	None	add
221	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  chiSquare  =  chiSquare  +  Math.sqrt(i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  chiSquare  =  chiSquare  +  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    final  double  chiSquare  =  chiSquare  +  Math.sqrt(i);	  	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	130	None	add
222	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  remaining  =  chiSquare  +  Math.sqrt(i);  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  remaining  =  chiSquare  +  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    final  double  remaining  =  chiSquare  +  Math.sqrt(i);	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	130	None	add
223	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residue  =  chiSquare  +  Math.sqrt(i);  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residue  =  chiSquare  +  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    final  double  residue  =  chiSquare  +  Math.sqrt(i);	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	130	None	add
224	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  residual  =  residuals[i]  /  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  residual  =  residuals[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    chiSquare;    final  double  residual  =  residuals[i]  /  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	73	None	add
225	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  Final  double  residual  =  residuals[i]  /  chiSquare;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  Final  double  residual  =  residuals[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    chiSquare;    Final  double  residual  =  residuals[i]  /  chiSquare;	  	non-compiled	[CE]  not  a  statement	73	None	add
226	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  remaining  =  residuals[i]  /  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  remaining  =  residuals[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    chiSquare;    final  double  remaining  =  residuals[i]  /  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	73	None	add
227	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  residual  =  residues[i]  /  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  final  double  residual  =  residues[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    chiSquare;    final  double  residual  =  residues[i]  /  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	73	None	add
228	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  2);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	99	None	replace
229	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  i  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  i  +  1);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	99	None	replace
230	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  i);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	99	None	replace
231	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare[i];  [CE]  array  required,  but  double  found  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  chiSquare[i];	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  double  found	115	None	replace
232	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i]  /  chiSquare[i];  [CE]  array  required,  but  double  found  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  /  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWeights[i]  /  chiSquare[i];	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  double  found	115	None	replace
233	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost  +  1);	  double    chiSquare    =    Math.min(results[i],    cost);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	3	None	replace
234	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  ji);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  ji);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  ji);	  double    chiSquare    =    Math.min(results[i],    cost);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	3	None	replace
235	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost  -  1);	  double    chiSquare    =    Math.min(results[i],    cost);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	3	None	replace
236	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  *  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost  *  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost  *  2);	  double    chiSquare    =    Math.min(results[i],    cost);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	3	None	replace
237	[BUG]  [BUGGY]  final  double  residual  =  jF.doubleValue()  +  i;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.doubleValue()  +  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.doubleValue()  +  i;	  final    double    residual    =    jF.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
238	[BUG]  [BUGGY]  final  double  residual  =  jF.doubleValue()  *  i;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.doubleValue()  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.doubleValue()  *  i;	  final    double    residual    =    jF.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
239	[BUG]  [BUGGY]  final  double  residual  =  jf.doubleValue();  [CE]  cannot  find  symbol  jf  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jf.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.doubleValue();	  final    double    residual    =    jF.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  jf	135	None	replace
240	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  chiSquare[i];  [CE]  array  required,  but  double  found  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  -  chiSquare[i];	  final    double    residual    =    chiSquare[i]    -    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  double  found	66	None	replace
241	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i]  -  chiSquare[i];  [CE]  array  required,  but  double  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  -  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWeights[i]  -  chiSquare[i];	  final    double    residual    =    chiSquare[i]    -    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  double  found	66	None	replace
242	[BUG]  [BUGGY]  final  double  residual  =  residualsWights[i]  -  chiSquare[i];  [CE]  cannot  find  symbol  residualsWights  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWights[i]  -  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWights[i]  -  chiSquare[i];	  final    double    residual    =    chiSquare[i]    -    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residualsWights	66	None	replace
243	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  residues[i];  [CE]  cannot  find  symbol  residues  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  residues[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  -  residues[i];	  final    double    residual    =    chiSquare[i]    -    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residues	66	None	replace
244	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  +  2);  [CE]  cannot  find  symbol  values  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.values.get(i  +  2);	  double[][]    residuals    =(double[][])this.values.get(i    +    1);    	non-compiled	[CE]  cannot  find  symbol  values	56	None	replace
245	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  i.getRemainders();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  i.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  i.getRemainders();	  double[][]    residuals    =    jF,    cost.getRemainders();    	non-compiled	[CE]  ';'  expected	110	None	replace
246	[BUG]  [BUGGY]  double[][]  residuals  =  cost,  jF.getRemainders();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  cost,  jF.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  cost,  jF.getRemainders();	  double[][]    residuals    =    jF,    cost.getRemainders();    	non-compiled	[CE]  ';'  expected	110	None	replace
247	[BUG]  [BUGGY]  double[][]  residuals  =  cost.getRemainders();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  cost.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  cost.getRemainders();	  double[][]    residuals    =    jF,    cost.getRemainders();    	non-compiled	[CE]  double  cannot  be  dereferenced	110	None	replace
248	[BUG]  [BUGGY]  final  double  residual  =(this.jF!=  null)?  this.jF.getRemainder()  :  ji.getRemainder();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =(this.jF!=  null)?  this.jF.getRemainder()  :  ji.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =(this.jF!=  null)?  this.jF.getRemainder()  :  ji.getRemainder();	  final    double    residual    =    this.jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
249	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare[i];  [CE]  array  required,  but  double  found  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  chiSquare[i];	  final    double    residual    =    chiSquare[i]    *    residuals[i];    	non-compiled	[CE]  array  required,  but  double  found	72	None	replace
250	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare[i];  [CE]  cannot  find  symbol  residues  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  *  chiSquare[i];	  final    double    residual    =    chiSquare[i]    *    residuals[i];    	non-compiled	[CE]  cannot  find  symbol  residues	72	None	replace
251	[BUG]  [BUGGY]  final  double  residual  =  i;  final  double  residual  =  i;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i;  final  double  residual  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    i;    final  double  residual  =  i;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	47	None	add
252	[BUG]  [BUGGY]  final  double  residual  =  i;  Final  double  residual  =  i;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i;  Final  double  residual  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    i;    Final  double  residual  =  i;	  	non-compiled	[CE]  not  a  statement	47	None	add
253	[BUG]  [BUGGY]  final  double  residual  =  i;  static  final  double  residual  =  i;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i;  static  final  double  residual  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    i;    static  final  double  residual  =  i;	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
254	[BUG]  [BUGGY]  final  double  residual  =  i;  final  double  remaining  =  i;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i;  final  double  remaining  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    i;    final  double  remaining  =  i;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	47	None	add
255	[BUG]  [BUGGY]  final  double  residual  =  chiSquares[i]  *  residuals[i];  [CE]  cannot  find  symbol  chiSquares  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquares[i]  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquares[i]  *  residuals[i];	  final    double    residual    =    residuals[i]    *    chiSquare;    final    double    residual    =    residues[i]    *    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  chiSquares	21	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  chiSquare  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
257	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  chiSquare  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  chiSquare  /  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
259	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  /  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  chiSquare  /  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
260	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i]  +  2;  [CE]  array  required,  but  double  found  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i]  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  residuals[i]  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	non-compiled	[CE]  array  required,  but  double  found	76	None	replace
261	[BUG]  [BUGGY]  double[][]  residuals  =  ji.getRows();  [CE]  cannot  find  symbol  ji  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  ji.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  ji.getRows();	  double[][]    residuals    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol  ji	43	None	replace
262	[BUG]  [BUGGY]  double[][]  residuals  =  i.getRows();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  i.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  i.getRows();	  double[][]    residuals    =    jf.getRows();    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
263	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    1;    final  double  residual  =  residuals[i]  *  chiSquare  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	70	None	add
264	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  Final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  Final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    1;    Final  double  residual  =  residuals[i]  *  chiSquare  +  1;	  	non-compiled	[CE]  not  a  statement	70	None	add
265	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  remaining  =  residuals[i]  *  chiSquare  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  remaining  =  residuals[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    1;    final  double  remaining  =  residuals[i]  *  chiSquare  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	70	None	add
266	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    1;    final  double  residual  =  residuals[i]  *  chiSquare  +  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	70	None	add
267	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare(i);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)this).getChiSquare(i);	  ((    VectorialConvergenceChecker)this).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
268	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare(chiSquare);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)this).getChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)this).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
269	[BUG]  [BUGGY]  final  double  residual  =  residualsWidths[i];  [CE]  cannot  find  symbol  residualsWidths  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWidths[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWidths[i];	  final    double    residual    =    residualsWeights[i];    Final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residualsWidths	13	None	replace
270	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i]  +  1;  [CE]  array  required,  but  double  found  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i]  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  residuals[i]  +  1;	  final    double    residual    =    residuals[i]    *    chiSquare    +    1;    	non-compiled	[CE]  array  required,  but  double  found	71	None	replace
271	[BUG]  [BUGGY]  final  double  residual  =  jF[i  *  1];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i  *  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i  *  1];	  final    double    residual    =    jF[i    +    1];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	113	None	replace
272	[BUG]  [BUGGY]  final  double  residual  =  jF[i  +  1]  *  residualsWeights[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i  +  1]  *  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i  +  1]  *  residualsWeights[i];	  final    double    residual    =    jF[i    +    1];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	113	None	replace
273	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i  +  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i  +  1];	  final    double    residual    =    jF[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	1	replace
274	[BUG]  [BUGGY]  final  double  residual  =  residuals[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i  +  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i  +  1];	  final    double    residual    =    jF[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	1	replace
275	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])targetValues.clone();  [CE]  inconvertible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])targetValues.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])targetValues.clone();	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  inconvertible  types	67	None	replace
276	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues,  i);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.targetValues,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues,  i);	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  ';'  expected	67	None	replace
277	[BUG]  [BUGGY]  Double[][]  residuals  =(double[][])this.targetValues.clone();  [CE]  inconvertible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Double[][]  residuals  =(double[][])this.targetValues.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Double[][]  residuals  =(double[][])this.targetValues.clone();	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  inconvertible  types	67	None	replace
278	[BUG]  [BUGGY]  double  residuals[][]  =  jf.computeRemainings();  [CE]  cannot  find  symbol  jf  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.computeRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.computeRemainings();	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  cannot  find  symbol  jf	144	None	replace
279	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.computeRemainings();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.computeRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.computeRemainings();	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  ';'  expected	144	None	replace
280	[BUG]  [BUGGY]  double  residuals[][]  =  jF.computeRemainings(i);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.computeRemainings(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.computeRemainings(i);	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
281	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  residuals[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    final  double  residual  =  chiSquare  *  residuals[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	107	None	add
282	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  Final  double  residual  =  chiSquare  *  residuals[i];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  Final  double  residual  =  chiSquare  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    Final  double  residual  =  chiSquare  *  residuals[i];	  	non-compiled	[CE]  not  a  statement	107	None	add
283	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  residues[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  residues[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    final  double  residual  =  chiSquare  *  residues[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	107	None	add
284	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  remaining  =  chiSquare  *  residuals[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  remaining  =  chiSquare  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    final  double  remaining  =  chiSquare  *  residuals[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	107	None	add
285	[BUG]  [BUGGY]  final  double  chiSquare  =  i;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  i;	  final    double    residual    =    chiSquare;    final    double    chiSquare    =    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	93	None	replace
286	[BUG]  [BUGGY]  final  double  chiSquare  =  0;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  0;	  final    double    residual    =    chiSquare;    final    double    chiSquare    =    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	93	None	replace
287	[BUG]  [BUGGY]  final  double  chiSquare  =  jF.getChiSquare();  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  jF.getChiSquare();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  jF.getChiSquare();	  final    double    residual    =    chiSquare;    final    double    chiSquare    =    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	93	None	replace
288	[BUG]  [BUGGY]  Double  chiSquare  =  Math.min(results[i],  jF.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Double  chiSquare  =  Math.min(results[i],  jF.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Double  chiSquare  =  Math.min(results[i],  jF.doubleValue());	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	45	None	replace
289	[BUG]  [BUGGY]  final  double  residual  =  residuesWeights[i];  [CE]  cannot  find  symbol  residuesWeights  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuesWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuesWeights[i];	  final    double    residual    =    residualsWeights[i];    final    double    residual    =    residuesWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residuesWeights	14	None	replace
290	[BUG]  [BUGGY]  final  double  residual  =  residues[i];  [CE]  cannot  find  symbol  residues  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i];	  final    double    residual    =    residualsWeights[i];    final    double    residual    =    residuesWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residues	14	None	replace
291	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  rows;  [CE]  array  required,  but  double  found  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  *  rows;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  rows;	  final    double    residual    =    rows[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	129	None	replace
292	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  *  chiSquare  +  1;  [CE]  array  required,  but  int  found  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  rows[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  *  chiSquare  +  1;	  final    double    residual    =    rows[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  int  found	129	None	replace
293	[BUG]  [BUGGY]  final  double  residual  =  this.rows[i]  *  chiSquare;  [CE]  array  required,  but  int  found  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.rows[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.rows[i]  *  chiSquare;	  final    double    residual    =    rows[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  int  found	129	None	replace
294	[BUG]  [BUGGY]  Final  double  residual  =  residuals[i]  -  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Final  double  residual  =  residuals[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Final  double  residual  =  residuals[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    Final    double    residual    =    residuals[i]    -    1;    	non-compiled	[CE]  not  a  statement	26	None	replace
295	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  /  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  /  1;	  final    double    residual    =    jF[i]    -    1;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	132	None	replace
296	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  -  2;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  -  2;	  final    double    residual    =    jF[i]    -    1;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	132	None	replace
297	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemainings()  *  i;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.getRemainings()  *  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemainings()  *  i;	  double    residuals[][]    =    jF.getRemainings()    +    i;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
298	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRemainings()  +  i;  [CE]  cannot  find  symbol  jf  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.getRemainings()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRemainings()  +  i;	  double    residuals[][]    =    jF.getRemainings()    +    i;    	non-compiled	[CE]  cannot  find  symbol  jf	85	None	replace
299	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i,  cost;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i,  cost;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemainings()  +  i,  cost;	  double    residuals[][]    =    jF.getRemainings()    +    i;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
300	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  1);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    rows);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	100	None	replace
301	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  rows);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  0,  rows);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    rows);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	100	None	replace
302	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  3);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  3);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    rows);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	100	None	replace
303	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residuals[i]  *  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residuals[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    1;    final  double  residual  =  residuals[i]  *  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	37	None	add
304	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  Final  double  residual  =  residuals[i]  *  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  1;  Final  double  residual  =  residuals[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    1;    Final  double  residual  =  residuals[i]  *  1;	  	non-compiled	[CE]  not  a  statement	37	None	add
305	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residuals[i]  *  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    1;    final  double  residual  =  residuals[i]  *  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	37	None	add
306	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  remaining  =  residuals[i]  *  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  remaining  =  residuals[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    1;    final  double  remaining  =  residuals[i]  *  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	37	None	add
307	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residues[i]  *  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  1;  final  double  residual  =  residues[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    1;    final  double  residual  =  residues[i]  *  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	37	None	add
308	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i  +  1);  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  i  +  1);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
309	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows[i]);  [CE]  cannot  find  symbol  results  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows[i]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  rows[i]);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
310	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i  +  2);  [CE]  cannot  find  symbol  results  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i  +  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  i  +  2);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
311	[BUG]  [BUGGY]  final  double  residual  =  jacobian[i]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jacobian[i]  &  0xff;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jacobian[i]  &  0xff;	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	116	None	replace
312	[BUG]  [BUGGY]  final  double  residual  =  this.jacobian[i];  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.jacobian[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.jacobian[i];	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  incompatible  types	116	None	replace
313	[BUG]  [BUGGY]  double[][]  residuals  =  ji.getVariables();  [CE]  cannot  find  symbol  ji  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  ji.getVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  ji.getVariables();	  double[][]    residuals    =    jf.getVariables();    	non-compiled	[CE]  cannot  find  symbol  ji	101	None	replace
314	[BUG]  [BUGGY]  double[][]  residuals  =  function.getVariables();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  function.getVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  function.getVariables();	  double[][]    residuals    =    jf.getVariables();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
315	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residuals[i]  *  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    final  double  residual  =  residuals[i]  *  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	79	None	add
316	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  Final  double  residual  =  residuals[i]  *  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  Final  double  residual  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    Final  double  residual  =  residuals[i]  *  2;	  	non-compiled	[CE]  not  a  statement	79	None	add
317	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residues[i]  *  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residues[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    final  double  residual  =  residues[i]  *  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	79	None	add
318	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  remaining  =  residuals[i]  *  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  remaining  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    final  double  remaining  =  residuals[i]  *  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	79	None	add
319	[BUG]  [BUGGY]  double  residuals[][]  =  jf.intermediate();  [CE]  cannot  find  symbol  jf  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jf.intermediate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.intermediate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  cannot  find  symbol  jf	142	None	replace
320	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  function.intermediate();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  function.intermediate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  function.intermediate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  ';'  expected	142	None	replace
321	[BUG]  [BUGGY]  double[][]  =  jF.intermediate();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  =  jF.intermediate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  =  jF.intermediate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  not  a  statement	142	None	replace
322	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  residual  =  residuals[i]  /  2  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    final  double  residual  =  residuals[i]  /  2  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	77	None	add
323	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  Final  double  residual  =  residuals[i]  /  2  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  Final  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    Final  double  residual  =  residuals[i]  /  2  +  1;	  	non-compiled	[CE]  not  a  statement	77	None	add
324	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  remaining  =  residuals[i]  /  2  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  remaining  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    final  double  remaining  =  residuals[i]  /  2  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	77	None	add
325	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  residual  =  residues[i]  /  2  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  final  double  residual  =  residues[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    final  double  residual  =  residues[i]  /  2  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	77	None	add
326	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  cost);  [CE]  cannot  find  symbol  variate  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  cost);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	33	None	replace
327	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  i);  [CE]  cannot  find  symbol  variate  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  i);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	33	None	replace
328	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  coefficient);  [CE]  cannot  find  symbol  variate  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  coefficient);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  coefficient);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	33	None	replace
329	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  residuals[i]);  [CE]  cannot  find  symbol  variate  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  residuals[i]);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  residuals[i]);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	33	None	replace
330	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  ji);  [CE]  cannot  find  symbol  ji  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  ji);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i,  ji);	  double[][]    residuals    =    jF.getVariables(i);    	non-compiled	[CE]  cannot  find  symbol  ji	147	None	replace
331	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getVariables(i  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i  +  1);	  double[][]    residuals    =    jF.getVariables(i);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
332	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  i);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i,  i);	  double[][]    residuals    =    jF.getVariables(i);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  1;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
334	[BUG]  [BUGGY]  final  double  residual  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  1;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0L;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  0L;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
336	[BUG]  [BUGGY]  final  double  residual  =  0L;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0L;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  0L;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
337	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0.0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  0.0;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
338	[BUG]  [BUGGY]  final  double  residual  =  0.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0.0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  0.0;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
339	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  residual  =  chiSquare  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  residual  =  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    final  double  residual  =  chiSquare  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	51	None	add
340	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  chiSquare  =  chiSquare  +  1;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  chiSquare  =  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    final  double  chiSquare  =  chiSquare  +  1;	  	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	51	None	add
341	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  Final  double  residual  =  chiSquare  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  Final  double  residual  =  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    Final  double  residual  =  chiSquare  +  1;	  	non-compiled	[CE]  not  a  statement	51	None	add
342	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  remaining  =  chiSquare  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  remaining  =  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    final  double  remaining  =  chiSquare  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	51	None	add
343	[BUG]  [BUGGY]  Double  chiSquare  =  Math.min(results[i],  jF.getValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Double  chiSquare  =  Math.min(results[i],  jF.getValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Double  chiSquare  =  Math.min(results[i],  jF.getValue());	  double    chiSquare    =    Math.min(results[i],    jF.getValue()    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	6	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  i  *  chiSquare;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
345	[BUG]  [BUGGY]  final  double  residual  =  i  *  chiSquare;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i  *  chiSquare;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  i  +  1;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
347	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  i  +  1;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  /  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  /  i;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
349	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  /  i;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  /  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  /  i;	  final    double    residual    =    chiSquare    *    i;    	compilable	  [FE]  AssertionFailedError  	54	1	replace
350	[BUG]  [BUGGY]  final  double  residual  =  ji  *  i;  [CE]  cannot  find  symbol  ji  [FE]          AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  ji  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  ji  *  i;	  final    double    residual    =    chiSquare    *    i;    	non-compiled	[CE]  cannot  find  symbol  ji	54	None	replace
351	[BUG]  [BUGGY]  final  double  residual  =  this.results[i  +  1];  [CE]  cannot  find  symbol  results  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.results[i  +  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.results[i  +  1];	  final    double    residual    =    this.results[i];    	non-compiled	[CE]  cannot  find  symbol  results	64	None	replace
352	[BUG]  [BUGGY]  final  double  residual  =  this.results[i]  /  2;  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.results[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.results[i]  /  2;	  final    double    residual    =    this.results[i];    	non-compiled	[CE]  cannot  find  symbol  results	64	None	replace
353	[BUG]  [BUGGY]  final  double  residual  =  this.results[i]  -  1;  [CE]  cannot  find  symbol  results  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.results[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.results[i]  -  1;	  final    double    residual    =    this.results[i];    	non-compiled	[CE]  cannot  find  symbol  results	64	None	replace
354	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  i.getRemaining();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  i.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  i.getRemaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
355	[BUG]  [BUGGY]  double  residuals[][]  =  cost,  jF.getRemaining();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  cost,  jF.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  cost,  jF.getRemaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
356	[BUG]  [BUGGY]  double  residuals[][]  =  i,  cost.getRemaining();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  i,  cost.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  i,  cost.getRemaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
357	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  i.remaining();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  i.remaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  i.remaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
358	[BUG]  [BUGGY]  final  double  residual  =  i.getRemainder();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i.getRemainder();	  final    double    residual    =    jf.getRemainder();    	non-compiled	[CE]  int  cannot  be  dereferenced	134	None	replace
359	[BUG]  [BUGGY]  final  double  residual  =  ji.getRemainder();  [CE]  cannot  find  symbol  ji  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  ji.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  ji.getRemainder();	  final    double    residual    =    jf.getRemainder();    	non-compiled	[CE]  cannot  find  symbol  ji	134	None	replace
360	[BUG]  [BUGGY]  final  double  residual  =  residuals[i].remaining;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i].remaining;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i].remaining;	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  double  cannot  be  dereferenced	17	None	replace
361	[BUG]  [BUGGY]  final  double  residual  =  jF[i].getRemaining();  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].getRemaining();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].getRemaining();	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
362	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining.doubleValue();  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remaining.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining.doubleValue();	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
363	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  3);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  3);	  double    chiSquare    =    Math.min(results[i],    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	120	None	replace
364	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  2);	  double    chiSquare    =    Math.min(results[i],    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	120	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  i  +  2;	  final    double    residual    =    i;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
366	[BUG]  [BUGGY]  final  double  residual  =  i  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i  +  2;	  final    double    residual    =    i;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
367	[BUG]  [BUGGY]  final  double  chiSquare  =  rows[i]  *  chiSquare;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  rows[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  rows[i]  *  chiSquare;	  final    double    residual    =    rows[i]    *    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	129	None	replace
368	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.computeRemainings();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.computeRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.computeRemainings();	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
369	[BUG]  [BUGGY]  double  residuals[][]  =  function.computeRemainings();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  function.computeRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  function.computeRemainings();	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
370	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)result).getChiSquare(i);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)result).getChiSquare(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)result).getChiSquare(i);	  ((    VectorialConvergenceChecker)variate).getChiSquare(i);    	non-compiled	[CE]  cannot  find  symbol  result	10	None	replace
371	[BUG]  [BUGGY]  final  double  residual  =  chiSquares[i]  *  chiSquare;  [CE]  cannot  find  symbol  chiSquares  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquares[i]  *  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquares[i]  *  chiSquare;	  final    double    residual    =    chiSquare[i]    *    residuals;    	non-compiled	[CE]  cannot  find  symbol  chiSquares	106	None	replace
372	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.remaining();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.remaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.remaining();	  double    residuals[][]    =    jF.remaining();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
373	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.remaining();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.remaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.remaining();	  double    residuals[][]    =    jF.remaining();    	non-compiled	[CE]  ';'  expected	89	None	replace
374	[BUG]  [BUGGY]  last  double  residual  =  residuals[i]  /  2  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  last  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	last  double  residual  =  residuals[i]  /  2  +  1;	  final    double    residual    =    residuals[i]    /    2;    last    double    residual    =    residuals[i]    /    2;    	non-compiled	[CE]  not  a  statement	139	None	replace
375	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1  +  i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1  +  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1  +  i);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	104	None	replace
376	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residues[i]  *  chiSquare  +  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  final  double  residual  =  residues[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    1;    final  double  residual  =  residues[i]  *  chiSquare  +  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	70	None	add
377	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2  +  1);	  double    chiSquare    =    Math.min(results[i],    jF.getValue()    /    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	8	None	replace
378	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residuals[i]  *  3;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  final  double  residual  =  residuals[i]  *  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    final  double  residual  =  residuals[i]  *  3;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	79	None	add
379	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])i.clone();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])i.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])i.clone();	  double[][]    residuals    =(double[][])results.clone();    	non-compiled	[CE]  int  cannot  be  dereferenced	68	None	replace
380	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining  /  residualsWeights;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remaining  /  residualsWeights;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining  /  residualsWeights;	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
381	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining  +  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remaining  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining  +  1;	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
382	[BUG]  [BUGGY]  double  residuals[][]  =  function.getRemainings();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  function.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  function.getRemainings();	  double    residuals[][]    =    jf.getRemainings();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
383	[BUG]  [BUGGY]  double  residuals[][]  =  jacobianFunction.getRemainings();  [CE]  cannot  find  symbol  jacobianFunction  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobianFunction.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobianFunction.getRemainings();	  double    residuals[][]    =    jf.getRemainings();    	non-compiled	[CE]  cannot  find  symbol  jacobianFunction	83	None	replace
384	[BUG]  [BUGGY]  final  double  residual  =  residuals.doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals.doubleValue();	  final    double    residual    =    jF.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
385	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(jF,  i);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(jF,  i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.sqrt(jF,  i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	131	None	replace
386	[BUG]  [BUGGY]  final  double  residual  =  0;  final  double  remaining  =  0;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  final  double  remaining  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    final  double  remaining  =  0;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	49	None	add
387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residualsWeights[i]  *  1;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
388	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i]  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWeights[i]  *  1;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  0;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
390	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  0;	  final    double    residual    =    residuals[i]    *    1;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
391	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2  +  1);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    /    2);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	46	None	replace
392	[BUG]  [BUGGY]  final  double  residual  =  _jF.getRemainder();  [CE]  cannot  find  symbol  _jF  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  _jF.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  _jF.getRemainder();	  final    double    residual    =    this.jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol  _jF	119	None	replace
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  residualsWeights[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
394	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residualsWeights[i];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  residualsWeights[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
395	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  parameters[i];  [CE]  cannot  find  symbol  parameters  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  parameters[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  parameters[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	non-compiled	[CE]  cannot  find  symbol  parameters	108	None	replace
396	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  s[i];  [CE]  cannot  find  symbol  s  [FE]        AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  s[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  s[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	non-compiled	[CE]  cannot  find  symbol  s	108	None	replace
397	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  -  1);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	122	None	replace
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  -  3;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residuals[i]    -    2;    	compilable	  [FE]  AssertionFailedError  	138	1	replace
399	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  3;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  -  3;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residuals[i]    -    2;    	compilable	  [FE]  AssertionFailedError  	138	1	replace
400	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue()  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  value.doubleValue()  -  1);	  double    chiSquare    =    Math.min(results[i],    value.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	126	None	replace
401	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainders();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.getRemainders();	  double    residuals[][]    =    jF.getRemainders();    	non-compiled	[CE]  ';'  expected	112	None	replace
402	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.remainings();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.remainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.remainings();	  double    residuals[][]    =    jF.remainings();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
403	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.remainings();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.remainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.remainings();	  double    residuals[][]    =    jF.remainings();    	non-compiled	[CE]  ';'  expected	84	None	replace
404	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.intermediate();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.intermediate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.intermediate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
405	[BUG]  [BUGGY]  double  residuals[][]  =  function.intermediate();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  function.intermediate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  function.intermediate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
406	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(period);    	non-compiled	[CE]  cannot  find  symbol  remainings	32	None	replace
407	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  i.getRemaining()  +  i;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  i.getRemaining()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  i.getRemaining()  +  i;	  double    residuals[][]    =    jF.getRemaining()    +    i;    	non-compiled	[CE]  ';'  expected	91	None	replace
408	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residuals[i]  *  chiSquare  +  3;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  final  double  residual  =  residuals[i]  *  chiSquare  +  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare    +    2;    final  double  residual  =  residuals[i]  *  chiSquare  +  3;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	75	None	add
409	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows,  i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows,  i);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	99	None	replace
410	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  *  1);  [CE]  cannot  find  symbol  values  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  *  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.values.get(i  *  1);	  double[][]    residuals    =(double[][])this.values.get(i    -    1);    	non-compiled	[CE]  cannot  find  symbol  values	57	None	replace
411	[BUG]  [BUGGY]  double  residuals[][]  =  function.getRemaining();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  function.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  function.getRemaining();	  double    residuals[][]    =    jf.getRemaining();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
412	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.getRemaining();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.getRemaining();	  double    residuals[][]    =    jf.getRemaining();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
413	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainders()  +  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainders()  +  1;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  cost.getRemainders()  +  1;	  double[][]    residuals    =    jF,    cost.getRemainders();    	non-compiled	[CE]  ';'  expected	110	None	replace
414	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1  +  1);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	97	None	replace
415	[BUG]  [BUGGY]  final  double  residual  =  function.getRemainder();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  function.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  function.getRemainder();	  final    double    residual    =    jf.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
416	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chSquare  *  residuals[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chSquare  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    final  double  residual  =  chSquare  *  residuals[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	107	None	add
417	[BUG]  [BUGGY]  final  double  residual  =  remainingsWeights[i]  -  residualsWeights[i];  [CE]  cannot  find  symbol  remainingsWeights  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  remainingsWeights[i]  -  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  remainingsWeights[i]  -  residualsWeights[i];	  final    double    residual    =    residualsWeights[i];    final    double    residual    =    remainingsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  remainingsWeights	125	None	replace
418	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).setChiSquare(chiSquare);  [CE]  inconvertible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).setChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).setChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  inconvertible  types	11	None	replace
419	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).setChiSquare(new  double[]  {  chiSquare  }  );  [CE]  inconvertible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).setChiSquare(new  double[]  {  chiSquare  }  );  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).setChiSquare(new  double[]  {  chiSquare  }  );	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  inconvertible  types	11	None	replace
420	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  results.length);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  results.length);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  results.length);	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
421	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  +  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue()  +  1);	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
422	[BUG]  [BUGGY]  final  double  chiSquare  =  jF;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  jF;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  jF;	  final    double    residual    =    chiSquare;    final    double    chiSquare    =    chiSquare;    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	93	None	replace
423	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residues[i]  /  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  1;  final  double  residual  =  residues[i]  /  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    1;    final  double  residual  =  residues[i]  /  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	35	None	add
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  2  *  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
425	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  *  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  2  *  1;	  final    double    residual    =    residuals[i]    /    2    +    1;    	compilable	  [FE]  AssertionFailedError  	78	1	replace
426	[BUG]  [BUGGY]  final  double  residual  =  this.resultsWeights[i  +  1];  [CE]  cannot  find  symbol  resultsWeights  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.resultsWeights[i  +  1];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.resultsWeights[i  +  1];	  final    double    residual    =    this.resultsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	124	None	replace
427	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  jiSquare);  [CE]  cannot  find  symbol  jiSquare  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  jiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i,  jiSquare);	  double[][]    residuals    =    jF.getRemainders(i);    	non-compiled	[CE]  cannot  find  symbol  jiSquare	88	None	replace
428	[BUG]  [BUGGY]  final  double  residual  =  jF[i  +  2];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i  +  2];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i  +  2];	  final    double    residual    =    jF[i    +    1];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	113	None	replace
429	[BUG]  [BUGGY]  double[][]  residuals  =  task.getVariables();  [CE]  cannot  find  symbol  task  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  task.getVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  task.getVariables();	  double[][]    residuals    =    jf.getVariables();    	non-compiled	[CE]  cannot  find  symbol  task	101	None	replace
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  4  +  1;	  final    double    residual    =    residuals[i]    /    4;    	compilable	  [FE]  AssertionFailedError  	82	1	replace
431	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  4  +  1;	  final    double    residual    =    residuals[i]    /    4;    	compilable	  [FE]  AssertionFailedError  	82	1	replace
432	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  static  final  double  residual  =  residuals[i]  /  2  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  static  final  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    static  final  double  residual  =  residuals[i]  /  2  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
433	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remainder  +  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remainder  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remainder  +  1;	  final    double    residual    =    jF[i].remainder;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	114	None	replace
434	[BUG]  [BUGGY]  final  double  residual  =  chicobian[i];  [CE]  cannot  find  symbol  chicobian  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chicobian[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chicobian[i];	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  cannot  find  symbol  chicobian	116	None	replace
435	[BUG]  [BUGGY]  final  double  residual  =  i[jacobian];  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i[jacobian];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i[jacobian];	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  incompatible  types	116	None	replace
436	[BUG]  [BUGGY]  double[][]  residuals  =  jF.multivariateVectors();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.multivariateVectors();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.multivariateVectors();	  double[][]    residuals    =    jF.remainders();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
437	[BUG]  [BUGGY]  double[][]  residuals  =  function.remainders();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  function.remainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  function.remainders();	  double[][]    residuals    =    jF.remainders();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
438	[BUG]  [BUGGY]  double[][]  residuals  =  function.getRows();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  function.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  function.getRows();	  double[][]    residuals    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
439	[BUG]  [BUGGY]  final  double  residual  =  this.jF.getRawRemainder();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.jF.getRawRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.jF.getRawRemainder();	  final    double    residual    =    jF.getRawRemainder();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
440	[BUG]  [BUGGY]  final  double  residual  =  function.getRawRemainder();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  function.getRawRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  function.getRawRemainder();	  final    double    residual    =    jF.getRawRemainder();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =(i  >  0)?  -1  :  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =(i  >  0)?  -1  :  0;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
442	[BUG]  [BUGGY]  final  double  residual  =(i  >  0)?  -1  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =(i  >  0)?  -1  :  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =(i  >  0)?  -1  :  0;	  final    double    residual    =    0;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
443	[BUG]  [BUGGY]  final  double  residual  =  chiSquares[i]  /  residualsWeights[i];  [CE]  cannot  find  symbol  chiSquares  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquares[i]  /  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquares[i]  /  residualsWeights[i];	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	115	None	replace
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residualsWeights[i]  /  chiSquare;	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	compilable	  [FE]  AssertionFailedError  	115	1	replace
445	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i]  /  chiSquare;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWeights[i]  /  chiSquare;	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	compilable	  [FE]  AssertionFailedError  	115	1	replace
446	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chSquare  *  i;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  final  double  residual  =  chSquare  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    final  double  residual  =  chSquare  *  i;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	53	None	add
447	[BUG]  [BUGGY]  double[][]  residuals  =  task.getRemainders();  [CE]  cannot  find  symbol  task  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  task.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  task.getRemainders();	  double[][]    residuals    =    jf.getRemainders();    	non-compiled	[CE]  cannot  find  symbol  task	86	None	replace
448	[BUG]  [BUGGY]  double  residuals[][]  =  cost.getRemainings();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  cost.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  cost.getRemainings();	  double    residuals[][]    =    jF,    cost.getRemainings();    	non-compiled	[CE]  double  cannot  be  dereferenced	109	None	replace
449	[BUG]  [BUGGY]  final  double  remaining  =  residualsWeights[i];  [CE]  cannot  find  symbol  residual  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  remaining  =  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  remaining  =  residualsWeights[i];	  final    double    residual    =    residualsWeights[i];    final    double    remaining    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residual	15	None	replace
450	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  jf[i];  [CE]  cannot  find  symbol  jf  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  jf[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  jf[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  jf	16	None	replace
451	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i]  *  jF[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residualsWeights[i]  *  jF[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residualsWeights[i]  *  jF[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	16	None	replace
452	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  *  jF[i];  [CE]  cannot  find  symbol  residues  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  *  jF[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  *  jF[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  residues	16	None	replace
453	[BUG]  [BUGGY]  Final  double  residual  =  chiSquare;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Final  double  residual  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Final  double  residual  =  chiSquare;	  final    double    residual    =    chiSquare;    Final    double    residual    =    chiSquare;    	non-compiled	[CE]  not  a  statement	95	None	replace
454	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  ji.period);  [CE]  cannot  find  symbol  ji  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  ji.period);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i,  ji.period);	  double[][]    residuals    =    jF.getVariables(i);    	non-compiled	[CE]  cannot  find  symbol  ji	147	None	replace
455	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  jiSquare);  [CE]  cannot  find  symbol  jiSquare  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getVariables(i,  jiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i,  jiSquare);	  double[][]    residuals    =    jF.getVariables(i);    	non-compiled	[CE]  cannot  find  symbol  jiSquare	147	None	replace
456	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  cost.getRawVariables();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  cost.getRawVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  cost.getRawVariables();	  double[][]    residuals    =    jF.getRawVariables();    	non-compiled	[CE]  ';'  expected	102	None	replace
457	[BUG]  [BUGGY]  double[][]  residuals  =  this.jF.getRawVariables();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  this.jF.getRawVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  this.jF.getRawVariables();	  double[][]    residuals    =    jF.getRawVariables();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
458	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialRemainingChecker();  [CE]  cannot  find  symbol  remainings  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialRemainingChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialRemainingChecker();	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialRemainingChecker();    	non-compiled	[CE]  cannot  find  symbol  remainings	118	None	replace
459	[BUG]  [BUGGY]  final  double  residual  =  jacobian.remainders[i];  [CE]  cannot  find  symbol  remainders  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jacobian.remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jacobian.remainders[i];	  final    double    residual    =    ji.remainders[i];    	non-compiled	[CE]  cannot  find  symbol  remainders	123	None	replace
460	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare  +  1;  [CE]  cannot  find  symbol  residues  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  *  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  *  chiSquare  +  1;	  final    double    residual    =    residuals[i]    *    chiSquare;    final    double    residual    =    residues[i]    *    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  residues	21	None	replace
461	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  /  chiSquare;  [CE]  cannot  find  symbol  residues  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  /  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  /  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    final    double    residual    =    residues[i]    *    chiSquare;    	non-compiled	[CE]  cannot  find  symbol  residues	21	None	replace
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  residuals[i]  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
463	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i]  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  residuals[i]  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare    +    2;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
464	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainings();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  cost.getRemainings();	  double[][]    residuals    =    jF.getRemainings();    	non-compiled	[CE]  ';'  expected	42	None	replace
465	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).results[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  results  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).results[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).results[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  results	117	None	replace
466	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).remainingSquares[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  remainingSquares  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).remainingSquares[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).remainingSquares[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  remainingSquares	117	None	replace
467	[BUG]  [BUGGY]  final  double  residual  =  ji[i]  -  1;  [CE]  cannot  find  symbol  ji  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  ji[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  ji[i]  -  1;	  final    double    residual    =    rows[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  ji	140	None	replace
468	[BUG]  [BUGGY]  double  residuals[][]  =  function.getRows();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  function.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  function.getRows();	  double    residuals[][]    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
469	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian.getRows();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian.getRows();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian.getRows();	  double    residuals[][]    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
470	[BUG]  [BUGGY]  Final  double  residual  =  residualsWeights[i];  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Final  double  residual  =  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Final  double  residual  =  residualsWeights[i];	  final    double    residual    =    residualsWeights[i];    Final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  not  a  statement	13	None	replace
471	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)this).setChiSquare(chiSquare);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)this).setChiSquare(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)this).setChiSquare(chiSquare);	  ((    VectorialConvergenceChecker)this).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
472	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  /  2  +  1;  [CE]  cannot  find  symbol  residues  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  /  2  +  1;	  final    double    residual    =    residuals[i]    /    2;    final    double    residual    =    residues[i]    /    2;    	non-compiled	[CE]  cannot  find  symbol  residues	111	None	replace
473	[BUG]  [BUGGY]  double  residuals[][]  =  jacobian,  cost.getRemaining();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jacobian,  cost.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jacobian,  cost.getRemaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
474	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.getRemaining()  +  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  cost.getRemaining()  +  1;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.getRemaining()  +  1;	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
475	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  &  residualsWeights;  [CE]  array  required,  but  double  found  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  &  residualsWeights;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  &  residualsWeights;	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
476	[BUG]  [BUGGY]  final  double  residual  =  super.results[i];  [CE]  cannot  find  symbol  results  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  super.results[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  super.results[i];	  final    double    residual    =    jf[i];    	non-compiled	[CE]  cannot  find  symbol  results	137	None	replace
477	[BUG]  [BUGGY]  double  residuals[][]  =  jF.evaluate(variant,  i);  [CE]  cannot  find  symbol  variant  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.evaluate(variant,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.evaluate(variant,  i);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  variant	143	None	replace
478	[BUG]  [BUGGY]  double  residuals[][]  =  factor.evaluate(jF,  i);  [CE]  cannot  find  symbol  factor  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  factor.evaluate(jF,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  factor.evaluate(jF,  i);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  factor	143	None	replace
479	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows);  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  rows);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
480	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows,  i);  [CE]  cannot  find  symbol  results  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(results[i],  0,  rows,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  rows,  i);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
481	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  3);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  3);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  i  +  3);	  double    chiSquare    =    Math.min(results[i],    i    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	2	None	replace
482	[BUG]  [BUGGY]  final  double  chiSquare  =  residualsWeights[i];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  residualsWeights[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residualsWeights[i];	  final    double    chiSquare    =    residuals[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	1	None	replace
483	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues,  cost.clone();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.targetValues,  cost.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues,  cost.clone();	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  ';'  expected	67	None	replace
484	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])ji.targetValues.clone();  [CE]  package  ji  does  not  exist  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])ji.targetValues.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])ji.targetValues.clone();	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  package  ji  does  not  exist	67	None	replace
485	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residuals[i]  /  3;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  final  double  residual  =  residuals[i]  /  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    final  double  residual  =  residuals[i]  /  3;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	81	None	add
486	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i-1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i-1;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemainings()  +  i-1;	  double    residuals[][]    =    jF.getRemainings()    +    i;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
487	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  residual  =  chiSquare  +  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  final  double  residual  =  chiSquare  +  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    final  double  residual  =  chiSquare  +  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	51	None	add
488	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  last  double  residual  =  chiSquare  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  1;  last  double  residual  =  chiSquare  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    1;    last  double  residual  =  chiSquare  +  1;	  	non-compiled	[CE]  not  a  statement	51	None	add
489	[BUG]  [BUGGY]  final  double  residual  =  jF.getValue(i);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.getValue(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getValue(i);	  final    double    residual    =    i;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
490	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  4);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  4);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  4);	  double    chiSquare    =    Math.min(results[i]    /    jF.length,    rows);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	100	None	replace
491	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  ji.getRemainings()  +  i;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  ji.getRemainings()  +  i;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  ji.getRemainings()  +  i;	  double    residuals[][]    =    jF.getRemainings()    +    i;    	non-compiled	[CE]  ';'  expected	85	None	replace
492	[BUG]  [BUGGY]  final  double  residual  =  jF  *  i;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF  *  i;	  final    double    residual    =    chiSquare    *    i;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	54	None	replace
493	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  -  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length  -  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length  -  2);	  double    chiSquare    =    Math.min(results[i]    *    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	98	None	replace
494	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(chiSquare,  cost);  [CE]  inconvertible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare(chiSquare,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).getChiSquare(chiSquare,  cost);	  ((    VectorialConvergenceChecker)i).getChiSquare();    	non-compiled	[CE]  inconvertible  types	11	None	replace
495	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemaining()  +  i,  cost;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.getRemaining()  +  i,  cost;  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemaining()  +  i,  cost;	  double    residuals[][]    =    jF.getRemaining()    +    i;    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
496	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(period);  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(period);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker(period);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(period);    	non-compiled	[CE]  cannot  find  symbol  remainings	32	None	replace
497	[BUG]  [BUGGY]  final  double  residual  =  Math.sqrt(results[i]);  [CE]  cannot  find  symbol  results  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  Math.sqrt(results[i]);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  Math.sqrt(results[i]);	  final    double    residual    =    chiSquare    *    residuals[i];    	non-compiled	[CE]  cannot  find  symbol  results	108	None	replace
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  cost  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  cost  *  residuals[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
499	[BUG]  [BUGGY]  final  double  residual  =  cost  *  residuals[i];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  cost  *  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  cost  *  residuals[i];	  final    double    residual    =    chiSquare    *    residuals[i];    	compilable	  [FE]  AssertionFailedError  	108	1	replace
500	[BUG]  [BUGGY]  final  double  residual  =  parameters[i].remainders[i];  [CE]  cannot  find  symbol  parameters  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  parameters[i].remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  parameters[i].remainders[i];	  final    double    residual    =    ji.remainders[i];    	non-compiled	[CE]  cannot  find  symbol  parameters	123	None	replace
501	[BUG]  [BUGGY]  final  double  residual  =  residues[i]  -  2;  [CE]  cannot  find  symbol  residues  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residues[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residues[i]  -  2;	  final    double    residual    =    residuals[i]    -    1;    final    double    residual    =    residuals[i]    -    2;    	non-compiled	[CE]  cannot  find  symbol  residues	138	None	replace
502	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)this).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  remainings  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)this).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)this).remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)filter).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  remainings	128	None	replace
503	[BUG]  [BUGGY]  double  residuals[][]  =  iF.getRemainings();  [CE]  cannot  find  symbol  iF  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  iF.getRemainings();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  iF.getRemainings();	  double    residuals[][]    =    jf.getRemainings();    	non-compiled	[CE]  cannot  find  symbol  iF	83	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.cos(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  Math.cos(i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
505	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.cos(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.cos(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.cos(i);	  final    double    residual    =    chiSquare    +    Math.sqrt(i);    	compilable	  [FE]  AssertionFailedError  	131	1	replace
506	[BUG]  [BUGGY]  double[][]  residuals  =  i.getVariables();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  i.getVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  i.getVariables();	  double[][]    residuals    =    jf.getVariables();    	non-compiled	[CE]  int  cannot  be  dereferenced	101	None	replace
507	[BUG]  [BUGGY]  double[][]  residuals  =  iF.getVariables();  [CE]  cannot  find  symbol  iF  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  iF.getVariables();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  iF.getVariables();	  double[][]    residuals    =    jf.getVariables();    	non-compiled	[CE]  cannot  find  symbol  iF	101	None	replace
508	[BUG]  [BUGGY]  final  double  residual  =  jF.chiSquares[i];  [CE]  cannot  find  symbol  chiSquares  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.chiSquares[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.chiSquares[i];	  final    double    residual    =    this.chiSquares[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	127	None	replace
509	[BUG]  [BUGGY]  final  double  residual  =  jf.chiSquares[i];  [CE]  cannot  find  symbol  jf  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jf.chiSquares[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.chiSquares[i];	  final    double    residual    =    this.chiSquares[i];    	non-compiled	[CE]  cannot  find  symbol  jf	127	None	replace
510	[BUG]  [BUGGY]  final  double  residual  =(this.chiSquares[i]  >  0.0)?  this.chiSquares[i]  :  0;  [CE]  cannot  find  symbol  chiSquares  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =(this.chiSquares[i]  >  0.0)?  this.chiSquares[i]  :  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =(this.chiSquares[i]  >  0.0)?  this.chiSquares[i]  :  0;	  final    double    residual    =    this.chiSquares[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	127	None	replace
511	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  last  double  residual  =  chiSquare  *  i;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  i;  last  double  residual  =  chiSquare  *  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    i;    last  double  residual  =  chiSquare  *  i;	  	non-compiled	[CE]  not  a  statement	53	None	add
512	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining  /  residuals;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remaining  /  residuals;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining  /  residuals;	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
513	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining  -  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].remaining  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining  -  1;	  final    double    residual    =    jF[i].remaining;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	17	None	replace
514	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  ji.getRemainders();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF,  ji.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  ji.getRemainders();	  double[][]    residuals    =    jF,    cost.getRemainders();    	non-compiled	[CE]  ';'  expected	110	None	replace
515	[BUG]  [BUGGY]  final  double  residual  =  jcobian[i];  [CE]  cannot  find  symbol  jcobian  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jcobian[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jcobian[i];	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  cannot  find  symbol  jcobian	116	None	replace
516	[BUG]  [BUGGY]  final  double  residual  =  jacobian[i],  cost);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jacobian[i],  cost);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jacobian[i],  cost);	  final    double    residual    =    jacobian[i];    	non-compiled	[CE]  ';'  expected	116	None	replace
517	[BUG]  [BUGGY]  final  double  residual  =  0;  last  double  residual  =  0;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  0;  last  double  residual  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    0;    last  double  residual  =  0;	  	non-compiled	[CE]  not  a  statement	49	None	add
518	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  remainings[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  final  double  residual  =  chiSquare  *  remainings[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    *    residuals[i];    final  double  residual  =  chiSquare  *  remainings[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	107	None	add
519	[BUG]  [BUGGY]  static  final  double  chiSquare  =  chiSquare;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  static  final  double  chiSquare  =  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	static  final  double  chiSquare  =  chiSquare;	  final    double    residual    =    chiSquare;    final    double    chiSquare    =    chiSquare;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
520	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  result.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  result.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  result.doubleValue());	  double    chiSquare    =    Math.min(results[i],    cost.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	44	None	replace
521	[BUG]  [BUGGY]  final  double  residual  =  chiSquares[i]  *  residuals;  [CE]  cannot  find  symbol  chiSquares  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquares[i]  *  residuals;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquares[i]  *  residuals;	  final    double    residual    =    chiSquare[i]    *    residuals;    	non-compiled	[CE]  cannot  find  symbol  chiSquares	106	None	replace
522	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getColumns();  [CE]  cannot  find  symbol  jf  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jf.getColumns();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getColumns();	  double[][]    residuals    =    jf.getRows();    	non-compiled	[CE]  cannot  find  symbol  jf	43	None	replace
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  3;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
524	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  3;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  3;	  final    double    residual    =    chiSquare    +    1;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
525	[BUG]  [BUGGY]  final  double  residual  =  chiSquares[i]  /  residuals[i];  [CE]  cannot  find  symbol  chiSquares  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquares[i]  /  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquares[i]  /  residuals[i];	  final    double    residual    =    chiSquare[i]    /    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	115	None	replace
526	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  2);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  -  2);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	104	None	replace
527	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  last  double  residual  =  residuals[i]  /  4;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  4;  last  double  residual  =  residuals[i]  /  4;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    4;    last  double  residual  =  residuals[i]  /  4;	  	non-compiled	[CE]  not  a  statement	81	None	add
528	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  &  residuals[i];  [CE]  array  required,  but  double  found  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare[i]  &  residuals[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  &  residuals[i];	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	141	None	replace
529	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  &  chiSquare;  [CE]  array  required,  but  int  found  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  rows[i]  &  chiSquare;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  &  chiSquare;	  final    double    residual    =    chiSquare[i]    &    chiSquare;    	non-compiled	[CE]  array  required,  but  int  found	141	None	replace
530	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])variants.clone();  [CE]  cannot  find  symbol  variants  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])variants.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])variants.clone();	  double[][]    residuals    =(double[][])results.clone();    	non-compiled	[CE]  cannot  find  symbol  variants	68	None	replace
531	[BUG]  [BUGGY]  double  chiSquare  =  Math.max(results[i],  jF.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.max(results[i],  jF.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.max(results[i],  jF.doubleValue());	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    +    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	45	None	replace
532	[BUG]  [BUGGY]  final  double  residual  =  jF[i].square;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i].square;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].square;	  final    double    residual    =    jF[i].remainder;    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	114	None	replace
533	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)chiSquare).remainings[i]  =  new  VectorialConvergenceChecker(variate);  [CE]  inconvertible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)chiSquare).remainings[i]  =  new  VectorialConvergenceChecker(variate);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)chiSquare).remainings[i]  =  new  VectorialConvergenceChecker(variate);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  inconvertible  types	33	None	replace
534	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  jF);  [CE]  cannot  find  symbol  variate  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  jF);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare,  jF);	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker(chiSquare);    	non-compiled	[CE]  cannot  find  symbol  variate	33	None	replace
535	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  last  double  residual  =  residuals[i]  /  2  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  last  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2    +    1;    last  double  residual  =  residuals[i]  /  2  +  1;	  	non-compiled	[CE]  not  a  statement	77	None	add
536	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  rows.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  rows.doubleValue());	  double    chiSquare    =    Math.min(results[i],    0,    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	121	None	replace
537	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  -  1);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost.doubleValue()  -  1);	  double    chiSquare    =    Math.min(results[i],    jF.doubleValue()    -    1);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	122	None	replace
538	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetEvaluations.clone();  [CE]  cannot  find  symbol  targetEvaluations  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.targetEvaluations.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetEvaluations.clone();	  double[][]    residuals    =(double[][])this.targetValues.clone();    	non-compiled	[CE]  cannot  find  symbol  targetEvaluations	67	None	replace
539	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  last  double  residual  =  residuals[i]  -  2;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  2;  last  double  residual  =  residuals[i]  -  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    2;    last  double  residual  =  residuals[i]  -  2;	  	non-compiled	[CE]  not  a  statement	39	None	add
540	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  last  double  residual  =  residuals[i]  *  2;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  *  2;  last  double  residual  =  residuals[i]  *  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    2;    last  double  residual  =  residuals[i]  *  2;	  	non-compiled	[CE]  not  a  statement	79	None	add
541	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).  convergenceChecker.remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  convergenceChecker  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).  convergenceChecker.remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).  convergenceChecker.remainings[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  convergenceChecker	117	None	replace
542	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).consumes[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  consumes  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)checker).consumes[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).consumes[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)checker).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  consumes	117	None	replace
543	[BUG]  [BUGGY]  final  double  residual  =  mf.getRemainder();  [CE]  cannot  find  symbol  mf  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  mf.getRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  mf.getRemainder();	  final    double    residual    =    jf.getRemainder();    	non-compiled	[CE]  cannot  find  symbol  mf	134	None	replace
544	[BUG]  [BUGGY]  double[][]  residuals  =  iF.getRemainders();  [CE]  cannot  find  symbol  iF  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  iF.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  iF.getRemainders();	  double[][]    residuals    =    jf.getRemainders();    	non-compiled	[CE]  cannot  find  symbol  iF	86	None	replace
545	[BUG]  [BUGGY]  double[][]  residuals  =  i.getRemainders();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  i.getRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  i.getRemainders();	  double[][]    residuals    =    jf.getRemainders();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
546	[BUG]  [BUGGY]  final  double  residual  =  i;  last  double  residual  =  i;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  i;  last  double  residual  =  i;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    i;    last  double  residual  =  i;	  	non-compiled	[CE]  not  a  statement	47	None	add
547	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  criterion);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i],  criterion);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  criterion);	  double    chiSquare    =    Math.min(results[i],    cost);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	3	None	replace
548	[BUG]  [BUGGY]  static  final  double  residual  =  0;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  static  final  double  residual  =  0;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	static  final  double  residual  =  0;	  final    double    residual    =    0;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
549	[BUG]  [BUGGY]  final  double  residual  =  super.getChiSquare(i);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  super.getChiSquare(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  super.getChiSquare(i);	  final    double    residual    =    jiSquare[i];    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
550	[BUG]  [BUGGY]  final  double  residual  =  this.jF.doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.jF.doubleValue();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.jF.doubleValue();	  final    double    residual    =    jF.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
551	[BUG]  [BUGGY]  double  residuals[][]  =  jF.computeRemainders();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.computeRemainders();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.computeRemainders();	  double    residuals[][]    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
552	[BUG]  [BUGGY]  double  residuals[][]  =  iF.getRemaining();  [CE]  cannot  find  symbol  iF  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  iF.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  iF.getRemaining();	  double    residuals[][]    =    jf.getRemaining();    	non-compiled	[CE]  cannot  find  symbol  iF	90	None	replace
553	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1],  cost);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1],  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1],  cost);	  double    chiSquare    =    Math.min(results[i]    /    jF.length    +    1);    	non-compiled	[CE]  ')'  expected	97	None	replace
554	[BUG]  [BUGGY]  final  double  residual  =  jF[i  +  1]  /  2;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i  +  1]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i  +  1]  /  2;	  final    double    residual    =    jF[i    +    1];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	113	None	replace
555	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)filter).constraints[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  filter  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)filter).constraints[i]  =  new  VectorialConvergenceChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)filter).constraints[i]  =  new  VectorialConvergenceChecker();	  ((    VectorialConvergenceChecker)variate).constraints[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  filter	34	None	replace
556	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  *  chiSquare[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF[i]  *  chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  *  chiSquare[i];	  final    double    residual    =    jF[i]    *    residualsWeights[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	16	None	replace
557	[BUG]  [BUGGY]  final  double  residual  =  jF.results[i];  [CE]  cannot  find  symbol  results  [FE]        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.results[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.results[i];	  final    double    residual    =    this.results[i];    	non-compiled	[CE]  cannot  find  symbol  results	64	None	replace
558	[BUG]  [BUGGY]  chiSquare  =  Math.max(remainders[i],  0,  i);  [CE]  cannot  find  symbol  remainders  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  chiSquare  =  Math.max(remainders[i],  0,  i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(remainders[i],  0,  i);	  chiSquare    =    Math.max(results[i],    0,    i);    	non-compiled	[CE]  cannot  find  symbol  remainders	24	None	replace
559	[BUG]  [BUGGY]  final  double  chiSquare  =  this.results[i];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  chiSquare  =  this.results[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  this.results[i];	  final    double    chiSquare    =    residuals[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	1	None	replace
560	[BUG]  [BUGGY]  double  residuals[][]  =  factor.evaluate(jF,  cost);  [CE]  cannot  find  symbol  factor  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  factor.evaluate(jF,  cost);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  factor.evaluate(jF,  cost);	  double    residuals[][]    =    jF.evaluate(variant,    cost);    	non-compiled	[CE]  cannot  find  symbol  factor	143	None	replace
561	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residual  =  Math.sqrt(i);  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  final  double  residual  =  Math.sqrt(i);  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare    +    Math.sqrt(i);    final  double  residual  =  Math.sqrt(i);	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	130	None	add
562	[BUG]  [BUGGY]  final  double  residual  =  this.remainders[i];  [CE]  cannot  find  symbol  remainders  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.remainders[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.remainders[i];	  final    double    residual    =    residualsWeights[i];    Final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  remainders	13	None	replace
563	[BUG]  [BUGGY]  Final  double  residual  =  residuals[i]  /  2;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  Final  double  residual  =  residuals[i]  /  2;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	Final  double  residual  =  residuals[i]  /  2;	  final    double    residual    =    residuals[i]    /    2;    Final    double    residual    =    residuals[i]    /    2;    	non-compiled	[CE]  not  a  statement	59	None	replace
564	[BUG]  [BUGGY]  final  double  residual  =  jF.remainder.getRawRemainder();  [CE]  cannot  find  symbol  remainder  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.remainder.getRawRemainder();  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.remainder.getRawRemainder();	  final    double    residual    =    jF.getRawRemainder();    	non-compiled	[CE]  cannot  find  symbol  remainder	30	None	replace
565	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  chiSquares[i];  [CE]  cannot  find  symbol  chiSquares  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  residuals[i]  -  chiSquares[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  -  chiSquares[i];	  final    double    residual    =    chiSquare[i]    -    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	66	None	replace
566	[BUG]  [BUGGY]  final  double  residual  =  jiF[i];  [CE]  cannot  find  symbol  jiF  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jiF[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jiF[i];	  final    double    residual    =    jf[i];    	non-compiled	[CE]  cannot  find  symbol  jiF	137	None	replace
567	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)filter).getChiSquare(i);  [CE]  cannot  find  symbol  filter  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)filter).getChiSquare(i);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)filter).getChiSquare(i);	  ((    VectorialConvergenceChecker)variate).getChiSquare(i);    	non-compiled	[CE]  cannot  find  symbol  filter	10	None	replace
568	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(value,  residuals[i],  value.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  chiSquare  =  Math.min(value,  residuals[i],  value.doubleValue());  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(value,  residuals[i],  value.doubleValue());	  double    chiSquare    =    Math.min(results[i],    value.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	126	None	replace
569	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.remainders.clone();  [CE]  cannot  find  symbol  remainders  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =(double[][])this.remainders.clone();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.remainders.clone();	  double[][]    residuals    =(double[][])values.clone();    	non-compiled	[CE]  cannot  find  symbol  remainders	69	None	replace
570	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialRemainingChecker();  [CE]  cannot  find  symbol  filter  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  ((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialRemainingChecker();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialRemainingChecker();	  ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialRemainingChecker();    	non-compiled	[CE]  cannot  find  symbol  filter	118	None	replace
571	[BUG]  [BUGGY]  double  residuals[][]  =  jF.multivariate();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.multivariate();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.multivariate();	  double    residuals[][]    =    jF.intermediate();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
572	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  rows);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double[][]  residuals  =  jF.getRemainders(i,  rows);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i,  rows);	  double[][]    residuals    =    jF.getRemainders(i);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
573	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  ji.getRemaining();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF,  ji.getRemaining();  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  ji.getRemaining();	  double    residuals[][]    =    jF,    cost.getRemaining();    	non-compiled	[CE]  ';'  expected	103	None	replace
574	[BUG]  [BUGGY]  final  double  residual  =  jF.chiSquare[i];  [CE]  cannot  find  symbol  chiSquare  [FE]              AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  jF.chiSquare[i];  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.chiSquare[i];	  final    double    residual    =    this.chiSquare[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquare	65	None	replace
575	[BUG]  [BUGGY]  final  double  residual  =  this.chiSquare[i]  -  1;  [CE]  cannot  find  symbol  chiSquare  [FE]                AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  final  double  residual  =  this.chiSquare[i]  -  1;  [BUGGY]      chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.chiSquare[i]  -  1;	  final    double    residual    =    this.chiSquare[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquare	65	None	replace
576	[BUG]  [BUGGY]  double  residuals[][]  =  jF.computeRemainings(chiSquare);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {      [BUGGY]  double  residuals[][]  =  jF.computeRemainings(chiSquare);  [BUGGY]      final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.computeRemainings(chiSquare);	  double    residuals[][]    =    jF.computeRemainings();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
