bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  chiSquare  =  residuals[i];  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  chiSquare  =  residuals[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  chiSquare  =  residuals[i];	  final    double    residual    =    ji[i];    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	24	None	replace
2	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  i  +  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  i  +  1);	      double    chiSquare    =    Math.min(results[i],    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	23	None	replace
3	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost);	      double    chiSquare    =    Math.min(results[i],    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	23	None	replace
4	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  0);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0);	      double    chiSquare    =    Math.min(results[i],    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	23	None	replace
5	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  1);	      double    chiSquare    =    Math.min(results[i],    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	23	None	replace
6	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  +  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  +  1);	      double    chiSquare    =    Math.min(results[i],    jF.getValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	21	None	replace
7	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  -  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  -  1);	      double    chiSquare    =    Math.min(results[i],    jF.getValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	21	None	replace
8	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getValue()  /  2);	      double    chiSquare    =    Math.min(results[i],    jF.getValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	21	None	replace
9	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare);  [CE]  cannot  find  symbol  variate  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(chiSquare);	      ((    VectorialConvergenceChecker)variate).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol  variate	2	None	replace
10	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(i);  [CE]  cannot  find  symbol  variate  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).getChiSquare(i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).getChiSquare(i);	      ((    VectorialConvergenceChecker)variate).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol  variate	2	None	replace
11	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare();  [CE]  inconvertible  types  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)i).getChiSquare();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)i).getChiSquare();	      ((    VectorialConvergenceChecker)variate).getChiSquare();    	non-compiled	[CE]  inconvertible  types	2	None	replace
12	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  residualsWeights[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residualsWeights[i];    final  double  residual  =  residualsWeights[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	11	None	add
13	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i];  Final  double  residual  =  residualsWeights[i];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residualsWeights[i];  Final  double  residual  =  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residualsWeights[i];    Final  double  residual  =  residualsWeights[i];	  	non-compiled	[CE]  not  a  statement	11	None	add
14	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  residuesWeights[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  residuesWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residualsWeights[i];    final  double  residual  =  residuesWeights[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	11	None	add
15	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  remaining  =  residualsWeights[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  remaining  =  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residualsWeights[i];    final  double  remaining  =  residualsWeights[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	11	None	add
16	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  *  residualsWeights[i];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF[i]  *  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  *  residualsWeights[i];	  final    double    residual    =    jF[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	10	None	replace
17	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remaining;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF[i].remaining;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remaining;	  final    double    residual    =    jF[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	10	None	replace
18	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  residual  =  residuals[i]  *  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  residual  =  residuals[i]  *  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare;    final  double  residual  =  residuals[i]  *  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	8	None	add
19	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  Final  double  residual  =  residuals[i]  *  chiSquare;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  Final  double  residual  =  residuals[i]  *  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare;    Final  double  residual  =  residuals[i]  *  chiSquare;	  	non-compiled	[CE]  not  a  statement	8	None	add
20	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  remaining  =  residuals[i]  *  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  remaining  =  residuals[i]  *  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare;    final  double  remaining  =  residuals[i]  *  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	8	None	add
21	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  residual  =  residues[i]  *  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare;  final  double  residual  =  residues[i]  *  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    *    chiSquare;    final  double  residual  =  residues[i]  *  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	8	None	add
22	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  1);  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  chiSquare  =  Math.max(results[i],  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  1);	      chiSquare    =    Math.max(results[i],    0);    	non-compiled	[CE]  cannot  find  symbol  results	20	None	replace
23	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  2);  [CE]  cannot  find  symbol  results  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  chiSquare  =  Math.max(results[i],  2);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  2);	      chiSquare    =    Math.max(results[i],    0);    	non-compiled	[CE]  cannot  find  symbol  results	20	None	replace
24	[BUG]  [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i);  [CE]  cannot  find  symbol  results  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  chiSquare  =  Math.max(results[i],  0,  i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	chiSquare  =  Math.max(results[i],  0,  i);	      chiSquare    =    Math.max(results[i],    0);    	non-compiled	[CE]  cannot  find  symbol  results	20	None	replace
25	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residuals[i]  -  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residuals[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    1;    final  double  residual  =  residuals[i]  -  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	17	None	add
26	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  1;  Final  double  residual  =  residuals[i]  -  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  1;  Final  double  residual  =  residuals[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    1;    Final  double  residual  =  residuals[i]  -  1;	  	non-compiled	[CE]  not  a  statement	17	None	add
27	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  remaining  =  residuals[i]  -  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  remaining  =  residuals[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    1;    final  double  remaining  =  residuals[i]  -  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	17	None	add
28	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residues[i]  -  1;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residues[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    1;    final  double  residual  =  residues[i]  -  1;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	17	None	add
29	[BUG]  [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF.getRemainder()  +  i;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRemainder()  +  i;	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
30	[BUG]  [BUGGY]  final  double  residual  =  jF.getRawRemainder();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF.getRawRemainder();  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.getRawRemainder();	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
31	[BUG]  [BUGGY]  final  double  residual  =  jF.remainder();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF.remainder();  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.remainder();	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
32	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period);  [CE]  cannot  find  symbol  variate  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(period);	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	3	None	replace
33	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);  [CE]  cannot  find  symbol  variate  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialConvergenceChecker(chiSquare);	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	3	None	replace
34	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).constraints[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  variate  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).constraints[i]  =  new  VectorialConvergenceChecker();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).constraints[i]  =  new  VectorialConvergenceChecker();	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	3	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  1;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
36	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  1;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  1;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
38	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  1;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  -  2;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
40	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  -  2;	  final    double    residual    =    residuals[i]    -    1;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
41	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getColumns();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.getColumns();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getColumns();	      double[][]    residuals    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
42	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainings();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.getRemainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainings();	      double[][]    residuals    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
43	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getRows();  [CE]  cannot  find  symbol  jf  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jf.getRows();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getRows();	      double[][]    residuals    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol  jf	26	None	replace
44	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  cost.doubleValue());  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  cost.doubleValue());	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
45	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  +  1);	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
46	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  /  2);	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  i;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  i;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
48	[BUG]  [BUGGY]  final  double  residual  =  i;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  i;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  i;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  0;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  0;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
50	[BUG]  [BUGGY]  final  double  residual  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  0;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  0;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  1;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
52	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  1;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  *  i;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  i;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
54	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  i;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  *  i;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  i;	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
55	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.get(i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues.get(i);	      double[][]    residuals    =(double[][])this.values.get(i);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
56	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  +  1);  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  +  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.values.get(i  +  1);	      double[][]    residuals    =(double[][])this.values.get(i);    	non-compiled	[CE]  cannot  find  symbol  values	28	None	replace
57	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  -  1);  [CE]  cannot  find  symbol  values  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])this.values.get(i  -  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.values.get(i  -  1);	      double[][]    residuals    =(double[][])this.values.get(i);    	non-compiled	[CE]  cannot  find  symbol  values	28	None	replace
58	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residuals[i]  /  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residuals[i]  /  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    final  double  residual  =  residuals[i]  /  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	15	None	add
59	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  Final  double  residual  =  residuals[i]  /  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  Final  double  residual  =  residuals[i]  /  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    Final  double  residual  =  residuals[i]  /  2;	  	non-compiled	[CE]  not  a  statement	15	None	add
60	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  remaining  =  residuals[i]  /  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  remaining  =  residuals[i]  /  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    final  double  remaining  =  residuals[i]  /  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	15	None	add
61	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residuals[i]  /  3;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residuals[i]  /  3;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    final  double  residual  =  residuals[i]  /  3;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	15	None	add
62	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getColumns();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.getColumns();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getColumns();	      double    residuals[][]    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
63	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRows();  [CE]  cannot  find  symbol  jf  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jf.getRows();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRows();	      double    residuals[][]    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol  jf	1	None	replace
64	[BUG]  [BUGGY]  final  double  residual  =  this.results[i];  [CE]  cannot  find  symbol  results  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  this.results[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.results[i];	  final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  results	12	None	replace
65	[BUG]  [BUGGY]  final  double  residual  =  this.chiSquare[i];  [CE]  cannot  find  symbol  chiSquare  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  this.chiSquare[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.chiSquare[i];	  final    double    residual    =    chiSquare[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquare	7	None	replace
66	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  -  residualsWeights[i];  [CE]  array  required,  but  double  found  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare[i]  -  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  -  residualsWeights[i];	  final    double    residual    =    chiSquare[i];    	non-compiled	[CE]  array  required,  but  double  found	7	None	replace
67	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.clone();  [CE]  inconvertible  types  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])this.targetValues.clone();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])this.targetValues.clone();	      double[][]    residuals    =(double[][])this.values.clone();    	non-compiled	[CE]  inconvertible  types	30	None	replace
68	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])results.clone();  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])results.clone();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])results.clone();	      double[][]    residuals    =(double[][])this.values.clone();    	non-compiled	[CE]  cannot  find  symbol  results	30	None	replace
69	[BUG]  [BUGGY]  double[][]  residuals  =(double[][])values.clone();  [CE]  cannot  find  symbol  values  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =(double[][])values.clone();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =(double[][])values.clone();	      double[][]    residuals    =(double[][])this.values.clone();    	non-compiled	[CE]  cannot  find  symbol  values	30	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  chiSquare  +  1;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
71	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  chiSquare  +  1;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
72	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i];  [CE]  array  required,  but  double  found  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  residuals[i];	  final    double    residual    =    residuals[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	9	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
74	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  chiSquare  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
76	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  chiSquare  +  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  chiSquare  +  2;	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  2  +  1;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
78	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2  +  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  2  +  1;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  *  2;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
80	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  *  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  *  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  *  2;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  4;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  residuals[i]  /  4;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
82	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  4;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  4;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  residuals[i]  /  4;	  final    double    residual    =    residuals[i]    /    2;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
83	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRemainings();  [CE]  cannot  find  symbol  jf  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jf.getRemainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRemainings();	      double    residuals[][]    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol  jf	5	None	replace
84	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remainings();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.remainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remainings();	      double    residuals[][]    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
85	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.getRemainings()  +  i;  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemainings()  +  i;	      double    residuals[][]    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
86	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getRemainders();  [CE]  cannot  find  symbol  jf  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jf.getRemainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getRemainders();	      double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol  jf	27	None	replace
87	[BUG]  [BUGGY]  double[][]  residuals  =  jF.remainders();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.remainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.remainders();	      double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
88	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRemainders(i);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.getRemainders(i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRemainders(i);	      double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
89	[BUG]  [BUGGY]  double  residuals[][]  =  jF.remaining();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.remaining();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.remaining();	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
90	[BUG]  [BUGGY]  double  residuals[][]  =  jf.getRemaining();  [CE]  cannot  find  symbol  jf  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jf.getRemaining();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jf.getRemaining();	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  cannot  find  symbol  jf	4	None	replace
91	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemaining()  +  i;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.getRemaining()  +  i;  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemaining()  +  i;	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
92	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  final  double  residual  =  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  final  double  residual  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    final  double  residual  =  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	13	None	add
93	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  final  double  chiSquare  =  chiSquare;  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  final  double  chiSquare  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    final  double  chiSquare  =  chiSquare;	  	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	13	None	add
94	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  final  double  remaining  =  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  final  double  remaining  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    final  double  remaining  =  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	13	None	add
95	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  Final  double  residual  =  chiSquare;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  Final  double  residual  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    Final  double  residual  =  chiSquare;	  	non-compiled	[CE]  not  a  statement	13	None	add
96	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  final  double  residue  =  chiSquare;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  final  double  residue  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    final  double  residue  =  chiSquare;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	13	None	add
97	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  +  1);	      double    chiSquare    =    Math.min(results[i]    /    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	22	None	replace
98	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i]  *  jF.length);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  *  jF.length);	      double    chiSquare    =    Math.min(results[i]    /    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	22	None	replace
99	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  i);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  i);	      double    chiSquare    =    Math.min(results[i]    /    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	22	None	replace
100	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length,  rows);	      double    chiSquare    =    Math.min(results[i]    /    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	22	None	replace
101	[BUG]  [BUGGY]  double[][]  residuals  =  jf.getVariables();  [CE]  cannot  find  symbol  jf  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jf.getVariables();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jf.getVariables();	      double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  cannot  find  symbol  jf	29	None	replace
102	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getRawVariables();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.getRawVariables();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getRawVariables();	      double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
103	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.getRemaining();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF,  cost.getRemaining();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.getRemaining();	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  ';'  expected	4	None	replace
104	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i]  /  jF.length  -  1);	      double    chiSquare    =    Math.min(results[i]    /    jF.length);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	22	None	replace
105	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.getItemCount());  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.getItemCount());	      double    chiSquare    =    Math.min(results[i],    jF.getValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	21	None	replace
106	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals;  [CE]  array  required,  but  double  found  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare[i]  *  residuals;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  *  residuals;	  final    double    residual    =    residuals[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  double  found	9	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  *  residuals[i];	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
108	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  *  residuals[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  *  residuals[i];	  final    double    residual    =    residuals[i]    *    chiSquare;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
109	[BUG]  [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainings();  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF,  cost.getRemainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF,  cost.getRemainings();	      double    residuals[][]    =    jF.getRemainings();    	non-compiled	[CE]  ';'  expected	5	None	replace
110	[BUG]  [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainders();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF,  cost.getRemainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF,  cost.getRemainders();	      double[][]    residuals    =    jF.getRemainders();    	non-compiled	[CE]  ';'  expected	27	None	replace
111	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residues[i]  /  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  final  double  residual  =  residues[i]  /  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    final  double  residual  =  residues[i]  /  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	15	None	add
112	[BUG]  [BUGGY]  double  residuals[][]  =  jF.getRemainders();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.getRemainders();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.getRemainders();	      double    residuals[][]    =    jF.getRows();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
113	[BUG]  [BUGGY]  final  double  residual  =  jF[i  +  1];  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF[i  +  1];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i  +  1];	  final    double    residual    =    jF[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	10	None	replace
114	[BUG]  [BUGGY]  final  double  residual  =  jF[i].remainder;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF[i].remainder;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i].remainder;	  final    double    residual    =    jF[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	10	None	replace
115	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  /  residualsWeights[i];  [CE]  array  required,  but  double  found  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare[i]  /  residualsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  /  residualsWeights[i];	  final    double    residual    =    chiSquare[i];    	non-compiled	[CE]  array  required,  but  double  found	7	None	replace
116	[BUG]  [BUGGY]  final  double  residual  =  jacobian[i];  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jacobian[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jacobian[i];	  final    double    residual    =    chiSquare[i];    	non-compiled	[CE]  incompatible  types	7	None	replace
117	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  remainings  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).remainings[i]  =  new  VectorialConvergenceChecker();	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  remainings	3	None	replace
118	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker();  [CE]  cannot  find  symbol  variate  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)variate).remainings[i]  =  new  VectorialRemainingChecker();	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  variate	3	None	replace
119	[BUG]  [BUGGY]  final  double  residual  =  this.jF.getRemainder();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  this.jF.getRemainder();  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.jF.getRemainder();	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
120	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  2);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  2);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  2);	      double    chiSquare    =    Math.min(results[i],    i);    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	23	None	replace
121	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue());  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  0,  jF.doubleValue());	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
122	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  -  1);  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  -  1);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  jF.doubleValue()  -  1);	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
123	[BUG]  [BUGGY]  final  double  residual  =  ji.remainders[i];  [CE]  cannot  find  symbol  ji  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  ji.remainders[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  ji.remainders[i];	  final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  ji	12	None	replace
124	[BUG]  [BUGGY]  final  double  residual  =  this.resultsWeights[i];  [CE]  cannot  find  symbol  resultsWeights  [FE]      AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  this.resultsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.resultsWeights[i];	  final    double    residual    =    residualsWeights[i];    	non-compiled	[CE]  cannot  find  symbol  resultsWeights	12	None	replace
125	[BUG]  [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  remainingsWeights[i];  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residualsWeights[i];  final  double  residual  =  remainingsWeights[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residualsWeights[i];    final  double  residual  =  remainingsWeights[i];	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	11	None	add
126	[BUG]  [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue());  [CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  chiSquare  =  Math.min(results[i],  value.doubleValue());  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  chiSquare  =  Math.min(results[i],  value.doubleValue());	      double    chiSquare    =    Math.min(results[i],    jF.doubleValue());    	non-compiled	[CE]  variable  chiSquare  is  already  defined  in  method  getChiSquare()	19	None	replace
127	[BUG]  [BUGGY]  final  double  residual  =  this.chiSquares[i];  [CE]  cannot  find  symbol  chiSquares  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  this.chiSquares[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  this.chiSquares[i];	  final    double    residual    =    chiSquares[i];    	non-compiled	[CE]  cannot  find  symbol  chiSquares	6	None	replace
128	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialConvergenceChecker();  [CE]  cannot  find  symbol  filter  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialConvergenceChecker();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)filter).remainings[i]  =  new  VectorialConvergenceChecker();	      ((    VectorialConvergenceChecker)variate).remainings[i]    =    new    VectorialConvergenceChecker();    	non-compiled	[CE]  cannot  find  symbol  filter	3	None	replace
129	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  *  chiSquare;  [CE]  array  required,  but  int  found  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  rows[i]  *  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  *  chiSquare;	  final    double    residual    =    residuals[i]    *    chiSquare;    	non-compiled	[CE]  array  required,  but  int  found	9	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	add	final  double  residual  =  chiSquare  +  Math.sqrt(i);	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
131	[BUG]  [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare  +  Math.sqrt(i);  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare  +  Math.sqrt(i);	  final    double    residual    =    chiSquare;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
132	[BUG]  [BUGGY]  final  double  residual  =  jF[i]  -  1;  [CE]  array  required,  but  MultivariateMatrixFunction  found  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF[i]  -  1;	  final    double    residual    =    jF[i];    	non-compiled	[CE]  array  required,  but  MultivariateMatrixFunction  found	10	None	replace
133	[BUG]  [BUGGY]  final  double  residual  =  chiSquare;  last  double  residual  =  chiSquare;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare;  last  double  residual  =  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    chiSquare;    last  double  residual  =  chiSquare;	  	non-compiled	[CE]  not  a  statement	13	None	add
134	[BUG]  [BUGGY]  final  double  residual  =  jf.getRemainder();  [CE]  cannot  find  symbol  jf  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jf.getRemainder();  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf.getRemainder();	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol  jf	25	None	replace
135	[BUG]  [BUGGY]  final  double  residual  =  jF.doubleValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jF.doubleValue();  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jF.doubleValue();	  final    double    residual    =    jF.getRemainder();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
136	[BUG]  [BUGGY]  final  double  residual  =  jiSquare[i];  [CE]  cannot  find  symbol  jiSquare  [FE]        AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jiSquare[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jiSquare[i];	  final    double    residual    =    ji[i];    	non-compiled	[CE]  cannot  find  symbol  jiSquare	24	None	replace
137	[BUG]  [BUGGY]  final  double  residual  =  jf[i];  [CE]  cannot  find  symbol  jf  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  jf[i];  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  jf[i];	  final    double    residual    =    ji[i];    	non-compiled	[CE]  cannot  find  symbol  jf	24	None	replace
138	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residuals[i]  -  2;  [CE]  variable  residual  is  already  defined  in  method  getChiSquare()  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  -  1;  final  double  residual  =  residuals[i]  -  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    -    1;    final  double  residual  =  residuals[i]  -  2;	  	non-compiled	[CE]  variable  residual  is  already  defined  in  method  getChiSquare()	17	None	add
139	[BUG]  [BUGGY]  final  double  residual  =  residuals[i]  /  2;  last  double  residual  =  residuals[i]  /  2;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  residuals[i]  /  2;  last  double  residual  =  residuals[i]  /  2;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final    double    residual    =    residuals[i]    /    2;    last  double  residual  =  residuals[i]  /  2;	  	non-compiled	[CE]  not  a  statement	15	None	add
140	[BUG]  [BUGGY]  final  double  residual  =  rows[i]  -  1;  [CE]  array  required,  but  int  found  [FE]    AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  rows[i]  -  1;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  rows[i]  -  1;	  final    double    residual    =    residuals[i]    -    1;    	non-compiled	[CE]  array  required,  but  int  found	18	None	replace
141	[BUG]  [BUGGY]  final  double  residual  =  chiSquare[i]  &  chiSquare;  [CE]  array  required,  but  double  found  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  final  double  residual  =  chiSquare[i]  &  chiSquare;  [BUGGY]    chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	final  double  residual  =  chiSquare[i]  &  chiSquare;	  final    double    residual    =    chiSquare[i];    	non-compiled	[CE]  array  required,  but  double  found	7	None	replace
142	[BUG]  [BUGGY]  double  residuals[][]  =  jF.intermediate();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.intermediate();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.intermediate();	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
143	[BUG]  [BUGGY]  double  residuals[][]  =  jF.evaluate(variant,  cost);  [CE]  cannot  find  symbol  variant  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.evaluate(variant,  cost);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.evaluate(variant,  cost);	      double    residuals[][]    =    jF.getRemaining();    	non-compiled	[CE]  cannot  find  symbol  variant	4	None	replace
144	[BUG]  [BUGGY]  double  residuals[][]  =  jF.computeRemainings();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double  residuals[][]  =  jF.computeRemainings();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double  residuals[][]  =  jF.computeRemainings();	      double    residuals[][]    =    jF.getRemainings();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
145	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)checker).getChiSquare();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)checker).getChiSquare();	      ((    VectorialConvergenceChecker)variate).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
146	[BUG]  [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  ((  VectorialConvergenceChecker)this).getChiSquare();  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	((  VectorialConvergenceChecker)this).getChiSquare();	      ((    VectorialConvergenceChecker)variate).getChiSquare();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
147	[BUG]  [BUGGY]  double[][]  residuals  =  jF.getVariables(i);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getChiSquare()  {  double  chiSquare  =  0;  for  (int  i  =  0;  i  <  rows;  ++i)  {    [BUGGY]  double[][]  residuals  =  jF.getVariables(i);  [BUGGY]    final  double  residual  =  residuals[i];  chiSquare  +=  residual  *  residual  /  residualsWeights[i];  }  return  chiSquare;  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  getChiSquare  [RETURN_TYPE]  double  [VARIABLES]  boolean  VectorialConvergenceChecker  checker  convergenceChecker  double[]  ji  objective  point  residuals  residualsWeights  targetValues  double  chiSquare  cost  criterion  factor  residual  double[][]  jacobian  DifferentiableMultivariateVectorialFunction  function  MultivariateMatrixFunction  jF  int  DEFAULT_MAX_ITERATIONS  cols  i  index  iterations  j  jacobianEvaluations  maxEvaluations  maxIterations  objectiveEvaluations  rows  	projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java	1.0	257	257	1	replace	double[][]  residuals  =  jF.getVariables(i);	      double[][]    residuals    =    jF.getVariables();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
