projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){for(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){For(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<this.residualsWeights;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){for(inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){For(inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,columns);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF,jF.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.convergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jf.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(point,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,rows.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){for(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){for(inti=0;i<Math.min(residualsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){For(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){for(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){For(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights[i],cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jacobian.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){finaldouble[][]cols=jF.value(cols);for(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);i++){for(inti=0;i<Math.min(residualsWeights.length,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){for(inti=0;i<cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){inti=0;i<cols;++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,column);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,residualsWeights.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){for(inti=0;i<cols);++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){for(inti=0;j<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rowCount;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;i++){intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,maxIterations);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){for(inti=0;i<Math.min(residualsWeights.length,2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){for(inti=0;i<Math.min(residualsWeights[i],2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){For(inti=0;i<Math.min(residualsWeights.length,2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){for(inti=0;i<Math.min(residualsWeights.length,2));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<this.residualsWeights.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<this.residualsWeights+1;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,4);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;i++){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){finaldouble[][]jacobian=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){finaldouble[][]jacobian=jF.value(i+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.convergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<3;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<1;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols,cols.length-1,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,3);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.max(residualsWeights.length,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols.length);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,3);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.getRangeConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker(true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[]jacobian[]=-Math.sqrt(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[]jacobian[]=-Math.sqrt(jacobian[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,true);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){For(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.max(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;j<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;j<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(intj=0;j<cols;++j){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows.length;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<jacobian.length;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jF.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(residualsWeights,jF.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jF.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length)+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variance,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this.variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length+2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length)+1;
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,value);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(residualsWeights,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){finaldouble[][]jacobian=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;i++){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<3;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(rows.length,residualsWeights.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=convergenceChecker.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){intcols=Math.min(residualsWeights[i],cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){intcols=Math.min(residualsWeights[i],cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){finaldouble[][]cols=jF.value(cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variables.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,cols.length-1,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.max(cols.length,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker,jF.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,jF.getVariableConvergenceChecker());
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF,jF.getRowConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2,cols.length);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.max(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(rows,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(colons);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){for(inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){For(inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[]cols=-Math.sqrt(residualsWeights[i]);for(inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[]cols=-Math.sqrt(cols[i]);for(inti=0;i<2;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){for(inti=0;i<Math.min(residualsWeights.length,rows);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){for(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){For(inti=0;i<Math.min(residualsWeights.length,rows);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){for(inti=0;i<Math.min(residualsWeights.length,columns);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){for(inti=0;i<Math.min(residualsWeights[i],rows);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){for(inti=0;i<Math.min(residualsWeights.length,1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){for(inti=0;i<Math.min(residualsWeights[i],1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){For(inti=0;i<Math.min(residualsWeights.length,1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){for(inti=0;i<Math.min(residualsWeights[i].length,1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<Math.min(residualsWeights.length,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(cols.length,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){for(inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){For(inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){finaldouble[]cols=-Math.sqrt(residualsWeights[i]);for(inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){finaldouble[]cols=-Math.sqrt(cols[i]);for(inti=0;i<2;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(cols.length,jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,0,DEFAULT_MAX_ITERATIONS);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,DEFAULT_MAX_ITERATIONS,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights[i],cols)-1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights[i],cols)+1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,cols-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,1,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(residualsWeights,cols.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.max(residualsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(resultsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){for(inti=0;i<rows;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){For(inti=0;i<rows;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){inti=0;i<rows;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){for(inti=0;i<rows);++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(field);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,cost-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,cost+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(residualsWeights,cols,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){inti=0;i<cols;++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;i++){inti=0;i<cols;++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){finaldouble[]jacobian[]=-Math.sqrt(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190inti=0;i<cols;++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<rows;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,dataArea);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights[i],cols+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=1;i<Math.min(residualsWeights.length,cols+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF,this.targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(column,residualsWeights.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(null,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(null,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,cols,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.value(point,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190finaldouble[][]cols=jF.value(cols);for(inti=0;i<cols.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190finaldouble[][]cols=jF.value(cols);for(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jf.getVariableConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(column.length,residualsWeights.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.max(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(rows,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols);++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<Math.min(residualsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jF,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){inti=0;i<Math.min(residualsWeights.length,1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){for(inti=0;i<Math.min(residualsWeights.length,1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,1);i++){for(inti=0;i<Math.min(residualsWeights.length,2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;++i){finaldouble[][]jacobian=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jacobian.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,ji.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variance);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variate);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,residualsWeights.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,this);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,row);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){For(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;i++){For(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;++i){finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jacobian.getVariableConvergenceChecker(0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jF.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jf.getVariableConvergenceChecker(variate);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(function);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){finaldouble[][]jacobian=jF.value(residualsWeights);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF.value(rows));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols.length));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190finaldouble[][]cols=jF.value(cols);for(inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,rows);i++){inti=0;i<Math.min(residualsWeights.length,rows);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[][]cols=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF.value(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){intcols=Math.min(residualsWeights[i]);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols,cols.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jf.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variance,false);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols+1);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights,cols+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;i++){inti=0;i<cols;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){For(inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(cols,residualsWeights.length));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jF,jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(cols,0);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,targetValues);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){inti=0;i<Math.min(residualsWeights.length,2);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){for(inti=0;i<Math.min(residualsWeights.length,3);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols.length));++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.max(cols,cols.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[][]cols=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=Math.min(cols.length,column.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(false,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=checker.getVariableConvergenceChecker(variables);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;++i){inti=0;i<cols;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,0,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){For(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){intcols=Math.min(residualsWeights[i],cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){intcols=Math.min(residualsWeights[i],jacobian.length);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){intcols=Math.min(residualsWeights[i],jacobian.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){finaldouble[][]cols=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){finaldouble[][]cols=jF.value(i);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,rows.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols*1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,cols.length+1));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){for(inti=0;i<3;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;i++){for(inti=0;i<2){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190cols=jF.value(field,cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(jacobian.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190For(inti=0;i<rows;++i){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){For(inti=0;i<jacobian.length;i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.min(residualsWeights.length,2);i++){intcols=Math.min(residualsWeights.length,2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,ji.column.length);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,jacobian.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(jacobian);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;++i){finaldouble[][]jacobian=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(residualsWeights[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(jacobian[i],cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(residualsWeights.length,cols));i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){For(inti=0;i<Math.min(residualsWeights.length,cols);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(this,null);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,reductions);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(cols.length,rows.length-1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<columns;++i){finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190finaldouble[][]jacobian=jF.value(cols);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<rows;i++){intcols=Math.min(residualsWeights[i],cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;++i){intcols=Math.min(residualsWeights[i],cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(variants);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(jF.value(rows),jF.value(cols));
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols;i++){Math.min(residualsWeights[i]);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=check.getVariableConvergenceChecker();
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=jacobian.getVariableConvergenceChecker(variable);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<cols.length;++i){finaldouble[][]cols=jF.value(cols);}
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=getVectorialConvergenceChecker(null,cost);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights,jacobian.length-2);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190intcols=Math.min(residualsWeights.length,jacobian.length+1);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<Math.sqrt(residualsWeights.length);i++){
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[][]jacobian=jF.value(point);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190for(inti=0;i<2;++i){finaldouble[][]jacobian=jF.value(rows);
projects/Math65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java190VectorialConvergenceCheckerconvergenceChecker=newVectorialConvergenceChecker(variance,null);
