bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  minIndex  =  row.getMinObjectiveFunctions();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  row.getMinObjectiveFunctions();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  row.getMinObjectiveFunctions();	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	56	None	replace
2	[BUG]  [BUGGY]  int  row  =  column.getColumnCount();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                          MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  column.getColumnCount();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  column.getColumnCount();	  int    row    =    table.getColumnCount();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	31	None	replace
3	[BUG]  [BUGGY]  int  row  =  this.table.getRowCount();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  this.table.getRowCount();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  this.table.getRowCount();	  int    row    =    table.getColumnCount();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	31	None	replace
4	[BUG]  [BUGGY]  int  row  =  table.getColumnCount()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getColumnCount()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getColumnCount()  -  1;	  int    row    =    table.getColumnCount();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	31	None	replace
5	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(rowIndex  +  1);	  Integer    row    =    table.getBasicRow(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	49	None	replace
6	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  col  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row,  col  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row,  col  +  1);	  Integer    row    =    table.getBasicRow(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	49	None	replace
7	[BUG]  [BUGGY]  int  row  =  column.getRowIndex()  +  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  column.getRowIndex()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  column.getRowIndex()  +  1;	  int    row    =    table.getRowIndex()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	27	None	replace
8	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex()  +  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getColumnIndex()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getColumnIndex()  +  1;	  int    row    =    table.getRowIndex()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	27	None	replace
9	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  /  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                      MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowCount()  /  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowCount()  /  1;	  int    row    =    table.getRowCount()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	29	None	replace
10	[BUG]  [BUGGY]  int  i  =  row.getBasicRows()  +  1;  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getBasicRows()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getBasicRows()  +  1;	  int    i    =    table.getBasicRows()    +    1;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
11	[BUG]  [BUGGY]  int  i  =  column.getBasicRows()  +  1;  [CE]  cannot  find  symbol  column  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  column.getBasicRows()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  column.getBasicRows()  +  1;	  int    i    =    table.getBasicRows()    +    1;    	non-compiled	[CE]  cannot  find  symbol  column	46	None	replace
12	[BUG]  [BUGGY]  int  i  =  table.getBasicRows()  /  1;  [CE]  cannot  find  symbol  table  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRows()  /  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRows()  /  1;	  int    i    =    table.getBasicRows()    +    1;    	non-compiled	[CE]  cannot  find  symbol  table	46	None	replace
13	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  /  1;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	replace
14	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRowValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.getRowValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.getRowValue();	  Integer    row    =(Integer)table.getValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	11	None	replace
15	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.getValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.getValue()  -  1;	  Integer    row    =(Integer)table.getValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	11	None	replace
16	[BUG]  [BUGGY]  int  column  =  row.getRowIndex();  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  row.getRowIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  row.getRowIndex();	  int    i    =    column.getRowIndex();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
17	[BUG]  [BUGGY]  int  row  =  column.getRowIndex()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  column.getRowIndex()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  column.getRowIndex()  -  1;	  int    row    =    table.getRowIndex()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	26	None	replace
18	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getColumnIndex();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getColumnIndex();	  int    row    =    table.getRowIndex()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	26	None	replace
19	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getColumnIndex()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getColumnIndex()  -  1;	  int    row    =    table.getRowIndex()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	26	None	replace
20	[BUG]  [BUGGY]  int  column  =  table.getBasicRows();  [CE]  cannot  find  symbol  table  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  table.getBasicRows();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  table.getBasicRows();	  int    i    =    column.getBasicRows();    	non-compiled	[CE]  cannot  find  symbol  table	14	None	replace
21	[BUG]  [BUGGY]  int  i  =  row.getRowIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getRowIndex()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getRowIndex()  -  1;	  int    i    =    row.getRowIndex();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
22	[BUG]  [BUGGY]  int  i  =  row.getRowIndex()  +  1;  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getRowIndex()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getRowIndex()  +  1;	  int    i    =    row.getRowIndex();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
23	[BUG]  [BUGGY]  int  row  =  column.getRowCount()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  column.getRowCount()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  column.getRowCount()  -  1;	  int    row    =    table.getRowCount()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	28	None	replace
24	[BUG]  [BUGGY]  int  minIndex  =  column.getNumObjectiveFunctions();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  column.getNumObjectiveFunctions();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  column.getNumObjectiveFunctions();	  int    minIndex    =    row.getNumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	40	None	replace
25	[BUG]  [BUGGY]  int  minIndex  =  row.getNumObjectiveFunctions()  +  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  row.getNumObjectiveFunctions()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  row.getNumObjectiveFunctions()  +  1;	  int    minIndex    =    row.getNumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	40	None	replace
26	[BUG]  [BUGGY]  Integer  row  =(Integer)table.intValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                      MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.intValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.intValue()  -  1;	  Integer    row    =(Integer)table.intValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	17	None	replace
27	[BUG]  [BUGGY]  Integer  row  =(Integer)table.intValue()  +  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                        MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.intValue()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.intValue()  +  1;	  Integer    row    =(Integer)table.intValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	17	None	replace
28	[BUG]  [BUGGY]  int  i  =  table.getRow(row);  [CE]  cannot  find  symbol  table  [FE]    NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getRow(row);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
29	[BUG]  [BUGGY]  int  i  =  table.getRowIndex(row);  [CE]  cannot  find  symbol  table  [FE]      NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getRowIndex(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getRowIndex(row);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
30	[BUG]  [BUGGY]  int  i  =  table.getColumn(row);  [CE]  cannot  find  symbol  table  [FE]        NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getColumn(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getColumn(row);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
31	[BUG]  [BUGGY]  Integer  row  =  this.table.getBasicRow(row);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  this.table.getBasicRow(row);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  this.table.getBasicRow(row);	  Integer    row    =    table.getBasicRow(col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	22	None	replace
32	[BUG]  [BUGGY]  Integer  row  =  table.getRow(row);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getRow(row);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getRow(row);	  Integer    row    =    table.getBasicRow(col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	22	None	replace
33	[BUG]  [BUGGY]  int  i  =  row.getColumnCount()  -  1;  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getColumnCount()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getColumnCount()  -  1;	  int    i    =    row.getColumnCount();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
34	[BUG]  [BUGGY]  int  i  =  row.getColumnCount()  +  1;  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getColumnCount()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getColumnCount()  +  1;	  int    i    =    row.getColumnCount();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  int  i  =  row.getRowCount();  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getRowCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getRowCount();	  int    i    =    row.getColumnCount();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
36	[BUG]  [BUGGY]  int  i  =  table.getBasicRow(row,  column);  [CE]  cannot  find  symbol  column  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRow(row,  column);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRow(row,  column);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  column	53	None	replace
37	[BUG]  [BUGGY]  int  i  =  this.table.getBasicRow(row,  col);  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  this.table.getBasicRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  this.table.getBasicRow(row,  col);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  table	53	None	replace
38	[BUG]  [BUGGY]  int  i  =  column.getBasicRow(row,  col);  [CE]  cannot  find  symbol  column  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  column.getBasicRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  column.getBasicRow(row,  col);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  column	53	None	replace
39	[BUG]  [BUGGY]  Integer  row  =(Integer)this.minRow.getValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)this.minRow.getValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)this.minRow.getValue()  -  1;	  Integer    row    =(Integer)this.minRow.getValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	44	None	replace
40	[BUG]  [BUGGY]  Integer  row  =(Integer)this.minRow.getValue()  +  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)this.minRow.getValue()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)this.minRow.getValue()  +  1;	  Integer    row    =(Integer)this.minRow.getValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	44	None	replace
41	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  col  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row,  col  +  1);	  int    row    =    table.getRowIndex(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	20	None	replace
42	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  +  1,  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  +  1,  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  +  1,  col);	  int    row    =    table.getRowIndex(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	20	None	replace
43	[BUG]  [BUGGY]  int  minIndex  =  column.getNumObjectiveFunctions()  -  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  column.getNumObjectiveFunctions()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  column.getNumObjectiveFunctions()  -  1;	  int    minIndex    =    row.getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	1	None	replace
44	[BUG]  [BUGGY]  Integer  row  =(Integer)col.intValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)col.intValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)col.intValue();	  Integer    row    =(Integer)row.intValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	15	None	replace
45	[BUG]  [BUGGY]  int  column  =  row.getColumns();  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  row.getColumns();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  row.getColumns();	  int    i    =    column.getColumns();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
46	[BUG]  [BUGGY]  int  column  =  table.getColumns();  [CE]  cannot  find  symbol  table  [FE]                      MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  table.getColumns();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  table.getColumns();	  int    i    =    column.getColumns();    	non-compiled	[CE]  cannot  find  symbol  table	43	None	replace
47	[BUG]  [BUGGY]  Integer  row  =(Integer)col.getValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)col.getValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)col.getValue();	  Integer    row    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	replace
48	[BUG]  [BUGGY]  Integer  row  =(int)row.getValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(int)row.getValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(int)row.getValue()  -  1;	  Integer    row    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	replace
49	[BUG]  [BUGGY]  Integer  row  =(Integer)table.minRow.clone();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.minRow.clone();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.minRow.clone();	  Integer    row    =(Integer)this.minRow.clone();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	36	None	replace
50	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  column);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  column);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row,  column);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	18	None	replace
51	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col  -  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  col  -  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row,  col  -  1);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	18	None	replace
52	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row,  minIndex);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	18	None	replace
53	[BUG]  [BUGGY]  int  columnIndex  =  row.getColumnIndex();  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  columnIndex  =  row.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  columnIndex  =  row.getColumnIndex();	  int    tableIndex    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
54	[BUG]  [BUGGY]  int  rowIndex  =  table.getColumnIndex();  [CE]  cannot  find  symbol  table  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  rowIndex  =  table.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  rowIndex  =  table.getColumnIndex();	  int    tableIndex    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol  table	34	None	replace
55	[BUG]  [BUGGY]  int  rowIndex  =  row.getColumnIndex();  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  rowIndex  =  row.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  rowIndex  =  row.getColumnIndex();	  int    tableIndex    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
56	[BUG]  [BUGGY]  int  i  =  row.getBasicRows()  -  1;  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getBasicRows()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getBasicRows()  -  1;	  int    i    =    row.getBasicRows();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
57	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  table.getBasicRow(row);  [CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]    NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  table.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int    i    =    tableau.getBasicRow(row);    int  i  =  table.getBasicRow(row);	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	51	None	add
58	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  tableau.getBasicRow(row);  [CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]      NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  tableau.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int    i    =    tableau.getBasicRow(row);    int  i  =  tableau.getBasicRow(row);	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	51	None	add
59	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row);  Integer  i  =  table.getBasicRow(row);  [CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]        NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row);  Integer  i  =  table.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int    i    =    tableau.getBasicRow(row);    Integer  i  =  table.getBasicRow(row);	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	51	None	add
60	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row);  Integer  i  =  tableau.getBasicRow(row);  [CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]          NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row);  Integer  i  =  tableau.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int    i    =    tableau.getBasicRow(row);    Integer  i  =  tableau.getBasicRow(row);	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	51	None	add
61	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  Table.getBasicRow(row);  [CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row);  int  i  =  Table.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int    i    =    tableau.getBasicRow(row);    int  i  =  Table.getBasicRow(row);	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	51	None	add
62	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  -  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  -  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(rowIndex  -  1);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
63	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(col  -  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(col  -  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(col  -  1);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
64	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  -  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                      MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  -  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row  -  1  -  minIndex);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
65	[BUG]  [BUGGY]  Integer  row  =(Integer)row.intValue()  /  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)row.intValue()  /  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)row.intValue()  /  1;	  Integer    row    =(Integer)row.intValue()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	16	None	replace
66	[BUG]  [BUGGY]  Integer  row  =(Integer)this.minRow.intValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)this.minRow.intValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)this.minRow.intValue();	  Integer    row    =(Integer)dataset.intValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	54	None	replace
67	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	41	None	replace
68	[BUG]  [BUGGY]  int  minIndex  =  row.getMinimumObjectiveFunctions();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  row.getMinimumObjectiveFunctions();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  row.getMinimumObjectiveFunctions();	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	41	None	replace
69	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	41	None	replace
70	[BUG]  [BUGGY]  int  i  =  row.getColumnIndex()  -  1;  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getColumnIndex()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getColumnIndex()  -  1;	  int    i    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
71	[BUG]  [BUGGY]  int  i  =  row.getColumnIndex()  +  1;  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getColumnIndex()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getColumnIndex()  +  1;	  int    i    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
72	[BUG]  [BUGGY]  Integer  row  =(Integer)row.getValue()  /  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)row.getValue()  /  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)row.getValue()  /  1;	  Integer    row    =(Integer)row.getValue()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	12	None	replace
73	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getValue()  +  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.getValue()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.getValue()  +  1;	  Integer    row    =(Integer)row.getValue()    +    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	12	None	replace
74	[BUG]  [BUGGY]  int  row  =  table.getRowCount(row,  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                        MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowCount(row,  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowCount(row,  col);	  int    row    =    table.getRowCount(row);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	30	None	replace
75	[BUG]  [BUGGY]  int  row  =  table.getRowCount(row  -  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                          MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowCount(row  -  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowCount(row  -  1);	  int    row    =    table.getRowCount(row);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	30	None	replace
76	[BUG]  [BUGGY]  int  row  =  table.getRowCount(row  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowCount(row  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowCount(row  +  1);	  int    row    =    table.getRowCount(row);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	30	None	replace
77	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  -  1  +  minIndex);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	19	None	replace
78	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1,  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1,  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  -  1,  col);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	19	None	replace
79	[BUG]  [BUGGY]  int  i  =  row.getColumns()  +  1;  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getColumns()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getColumns()  +  1;	  int    i    =    table.getColumns()    +    1;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
80	[BUG]  [BUGGY]  int  i  =  column.getColumns()  +  1;  [CE]  cannot  find  symbol  column  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  column.getColumns()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  column.getColumns()  +  1;	  int    i    =    table.getColumns()    +    1;    	non-compiled	[CE]  cannot  find  symbol  column	48	None	replace
81	[BUG]  [BUGGY]  int  i  =  column.getBasicRow(row);  [CE]  cannot  find  symbol  column  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  column.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  column.getBasicRow(row);	  int    i    =    row.getBasicRow(col);    	non-compiled	[CE]  cannot  find  symbol  column	4	None	replace
82	[BUG]  [BUGGY]  int  i  =  this.col.getBasicRow(row);  [CE]  cannot  find  symbol  col  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  this.col.getBasicRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  this.col.getBasicRow(row);	  int    i    =    row.getBasicRow(col);    	non-compiled	[CE]  cannot  find  symbol  col	4	None	replace
83	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  /  row;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    row;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	45	None	replace
84	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  row  -  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  row  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  +  row  -  1;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    row;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	45	None	replace
85	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  *  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  *  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  *  row;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    row;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	45	None	replace
86	[BUG]  [BUGGY]  int  i  =  column.getBasicRow(col);  [CE]  cannot  find  symbol  column  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  column.getBasicRow(col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  column.getBasicRow(col);	  int    i    =    table.getBasicRow(col);    	non-compiled	[CE]  cannot  find  symbol  column	3	None	replace
87	[BUG]  [BUGGY]  int  i  =  row.getRows();  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getRows();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getRows();	  int    i    =    row.getColumns();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
88	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getKey();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.getKey();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.getKey();	  Integer    row    =(Integer)row.getKey();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	55	None	replace
89	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRowKey();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.getRowKey();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.getRowKey();	  Integer    row    =(Integer)row.getKey();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	55	None	replace
90	[BUG]  [BUGGY]  int  i  =  row.getNumObjectiveFunctions()  /  1;  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getNumObjectiveFunctions()  /  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getNumObjectiveFunctions()  /  1;	  int    i    =    row.getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
91	[BUG]  [BUGGY]  int  i  =  row.getNumObjectiveFunctions()  *  1;  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  row.getNumObjectiveFunctions()  *  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getNumObjectiveFunctions()  *  1;	  int    i    =    row.getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
92	[BUG]  [BUGGY]  Integer  row  =(Integer)this.table.clone();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)this.table.clone();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)this.table.clone();	  Integer    row    =(Integer)table.clone();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	35	None	replace
93	[BUG]  [BUGGY]  Integer  row  =(Integer)table.clone(),  col;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.clone(),  col;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.clone(),  col;	  Integer    row    =(Integer)table.clone();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	35	None	replace
94	[BUG]  [BUGGY]  int  minIndex  =  row.getMinObjectiveFunctions()  -  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  row.getMinObjectiveFunctions()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  row.getMinObjectiveFunctions()  -  1;	  int    minIndex    =    table.getMinObjectiveFunctions()    -    1;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	57	None	replace
95	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  +  1;	  int    minIndex    =    table.getMinObjectiveFunctions()    -    1;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	57	None	replace
96	[BUG]  [BUGGY]  int  column  =  row.getColumnIndex();  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  row.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  row.getColumnIndex();	  int    i    =    column.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
97	[BUG]  [BUGGY]  int  col  =  row.getColumnIndex();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  col  =  row.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  col  =  row.getColumnIndex();	  int    i    =    column.getColumnIndex();    	non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	33	None	replace
98	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row,  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row,  minIndex);	  Integer    row    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	21	None	replace
99	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  col  -  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row,  col  -  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row,  col  -  1);	  Integer    row    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	21	None	replace
100	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  column);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row,  column);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row,  column);	  Integer    row    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	21	None	replace
101	[BUG]  [BUGGY]  int  column  =  row.getColumnCount();  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  row.getColumnCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  row.getColumnCount();	  int    i    =    column.getColumnCount();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
102	[BUG]  [BUGGY]  int  col  =  row.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  col  =  row.getColumnCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  col  =  row.getColumnCount();	  int    i    =    column.getColumnCount();    	non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	7	None	replace
103	[BUG]  [BUGGY]  int  column  =  row.getNumObjectiveFunctions();  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  column  =  row.getNumObjectiveFunctions();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  column  =  row.getNumObjectiveFunctions();	  int    i    =    column.getNumObjectiveFunctions();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
104	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  +  1  -  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  +  1  -  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  +  1  -  minIndex);	  int    row    =    table.getRowIndex(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	20	None	replace
105	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row,  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  this.table.getRowIndex(row,  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  this.table.getRowIndex(row,  col);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	18	None	replace
106	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  +  1  -  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row  +  1  -  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row  +  1  -  minIndex);	  Integer    row    =    table.getBasicRow(row    +    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	49	None	replace
107	[BUG]  [BUGGY]  int  i  =  table.getBasicRows()  -  1;  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRows()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRows()  -  1;	  int    i    =    table.getBasicRows()    +    1;    	non-compiled	[CE]  cannot  find  symbol  table	46	None	replace
108	[BUG]  [BUGGY]  int  i  =  table.getColumns()  -  1;  [CE]  cannot  find  symbol  table  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getColumns()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getColumns()  -  1;	  int    i    =    table.getColumns()    +    1;    	non-compiled	[CE]  cannot  find  symbol  table	48	None	replace
109	[BUG]  [BUGGY]  int  minIndex  =  table.getMaxObjectiveFunctions()  -  1;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMaxObjectiveFunctions()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMaxObjectiveFunctions()  -  1;	  int    minIndex    =    table.getMinObjectiveFunctions()    -    1;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	57	None	replace
110	[BUG]  [BUGGY]  Integer  row  =(Integer)dataset.intValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)dataset.intValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)dataset.intValue()  -  1;	  Integer    row    =(Integer)row.intValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	15	None	replace
111	[BUG]  [BUGGY]  Integer  row  =(Integer)this.dataset.clone();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)this.dataset.clone();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)this.dataset.clone();	  Integer    row    =(Integer)dataset.clone();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	50	None	replace
112	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	add	int  i  =  tableau.getBasicRow(col);	  int    i    =    row.getBasicRow(col);    	compilable	  [FE]  NullPointerException  	4	4	replace
113	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(col);  [FE]  NullPointerException  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getBasicRow(col);	  int    i    =    row.getBasicRow(col);    	compilable	  [FE]  NullPointerException  	4	4	replace
114	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row  -  1  +  1);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
115	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                    MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row  -  1  +  minIndex);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
116	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  1);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  1);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  -  1  +  1);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	19	None	replace
117	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  -  minIndex);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  -  minIndex);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  -  1  -  minIndex);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	19	None	replace
118	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  +  row;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	41	None	replace
119	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  -  row;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	41	None	replace
120	[BUG]  [BUGGY]  int  i  =  table.getBasicRow(row  +  1);  [CE]  cannot  find  symbol  table  [FE]    NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRow(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRow(row  +  1);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
121	[BUG]  [BUGGY]  int  i  =  table.getNumObjectiveFunctions()  +  1;  [CE]  cannot  find  symbol  table  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getNumObjectiveFunctions()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getNumObjectiveFunctions()  +  1;	  int    i    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  cannot  find  symbol  table	25	None	replace
122	[BUG]  [BUGGY]  Integer  row  =(Integer)dataset.getValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)dataset.getValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)dataset.getValue()  -  1;	  Integer    row    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	replace
123	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  +  row;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	56	None	replace
124	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  -  row;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	56	None	replace
125	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  row;  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  row;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  -  row;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    row;    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	45	None	replace
126	[BUG]  [BUGGY]  Integer  row  =(Integer)table.clone()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.clone()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.clone()  -  1;	  Integer    row    =(Integer)table.clone();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	35	None	replace
127	[BUG]  [BUGGY]  int  rowIndex  =  column.getColumnIndex();  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  rowIndex  =  column.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  rowIndex  =  column.getColumnIndex();	  int    tableIndex    =    row.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol  column	34	None	replace
128	[BUG]  [BUGGY]  Integer  row  =  tableau.getBasicRow(row);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  tableau.getBasicRow(row);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  tableau.getBasicRow(row);	  Integer    row    =    table.getBasicRow(col);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	22	None	replace
129	[BUG]  [BUGGY]  int  i  =  tableau.getBasicRow(row,  col);  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  tableau.getBasicRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getBasicRow(row,  col);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	53	None	replace
130	[BUG]  [BUGGY]  int  i  =  table.getBasicRow(row,  col  +  1);  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRow(row,  col  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRow(row,  col  +  1);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  table	53	None	replace
131	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1  +  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =  table.getBasicRow(row  -  1  +  col);	  Integer    row    =    table.getBasicRow(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	23	None	replace
132	[BUG]  [BUGGY]  Integer  row  =(int)table.getValue()  -  1;  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(int)table.getValue()  -  1;  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(int)table.getValue()  -  1;	  Integer    row    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	replace
133	[BUG]  [BUGGY]  int  minIndex  =  row.getColumnIndex();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  minIndex  =  row.getColumnIndex();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  minIndex  =  row.getColumnIndex();	  int    minIndex    =    row.getNumObjectiveFunctions();    	non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	40	None	replace
134	[BUG]  [BUGGY]  int  i  =  table.getBasicRow(col,  row);  [CE]  cannot  find  symbol  table  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRow(col,  row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRow(col,  row);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  table	53	None	replace
135	[BUG]  [BUGGY]  int  i  =  table.getBasicRow(column,  row);  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRow(column,  row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRow(column,  row);	  int    i    =    table.getBasicRow(row,    col);    	non-compiled	[CE]  cannot  find  symbol  column	53	None	replace
136	[BUG]  [BUGGY]  Integer  row  =(Integer)dataset.getKey();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)dataset.getKey();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)dataset.getKey();	  Integer    row    =(Integer)row.getKey();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	55	None	replace
137	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  col);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  col);  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  row  =  table.getRowIndex(row  -  1  +  col);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	19	None	replace
138	[BUG]  [BUGGY]  Integer  row  =(int)table.getValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(int)table.getValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(int)table.getValue();	  Integer    row    =(Integer)table.getValue();    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	11	None	replace
139	[BUG]  [BUGGY]  Integer  i  =  row.getColumnIndex();  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  i  =  row.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  i  =  row.getColumnIndex();	  int    i    =    column.getColumnIndex();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
140	[BUG]  [BUGGY]  int  i  =  table.getBasicRowIndex(row);  [CE]  cannot  find  symbol  table  [FE]    NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRowIndex(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRowIndex(row);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
141	[BUG]  [BUGGY]  int  i  =  table.getBasicRowCount(row);  [CE]  cannot  find  symbol  table  [FE]      NullPointerException    [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  int  i  =  table.getBasicRowCount(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getBasicRowCount(row);	  int    i    =    tableau.getBasicRow(row);    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
142	[BUG]  [BUGGY]  Integer  row  =(Integer)table.intValue().intValue();  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]                  MaxCountExceededException      [CONTEXT]              Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {      [BUGGY]  Integer  row  =(Integer)table.intValue().intValue();  [BUGGY]      int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	Integer  row  =(Integer)table.intValue().intValue();	  Integer    row    =(Integer)row.intValue()    -    1;    	non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	15	None	replace
