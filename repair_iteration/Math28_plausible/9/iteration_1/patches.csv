bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col;  minRow  =  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	minRow    =    col;    minRow  =  col;	  	compilable	  [FE]  MaxCountExceededException  	3	1	add
2	[BUG]  [BUGGY]  minRow  =  col;  minRow  =  col;  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col;  minRow  =  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    col;    minRow  =  col;	  	compilable	  [FE]  MaxCountExceededException  	3	1	add
3	[BUG]  [BUGGY]  minRow  =  col;  minuteRow  =  col;  [CE]  cannot  find  symbol  minuteRow  [FE]        AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col;  minuteRow  =  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    col;    minuteRow  =  col;	  	non-compiled	[CE]  cannot  find  symbol  minuteRow	3	None	add
4	[BUG]  [BUGGY]  minRow  =  col;  maxRow  =  col;  [CE]  cannot  find  symbol  maxRow  [FE]          AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col;  maxRow  =  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    col;    maxRow  =  col;	  	non-compiled	[CE]  cannot  find  symbol  maxRow	3	None	add
5	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  row  =  tableau.getBasicRow(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	row  =  tableau.getBasicRow(i);	      row    =    table.getBasicRow(i);    	compilable	  [FE]  UnboundedSolutionException  	16	4	replace
6	[BUG]  [BUGGY]  row  =  tableau.getBasicRow(i);  [FE]  UnboundedSolutionException  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  row  =  tableau.getBasicRow(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	row  =  tableau.getBasicRow(i);	      row    =    table.getBasicRow(i);    	compilable	  [FE]  UnboundedSolutionException  	16	4	replace
7	[BUG]  [BUGGY]  row  =  table.getBasicRow(i  -  1);  [CE]  cannot  find  symbol  table  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  row  =  table.getBasicRow(i  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	row  =  table.getBasicRow(i  -  1);	      row    =    table.getBasicRow(i);    	non-compiled	[CE]  cannot  find  symbol  table	16	None	replace
8	[BUG]  [BUGGY]  row  =  this.table.getBasicRow(i);  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  row  =  this.table.getBasicRow(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	row  =  this.table.getBasicRow(i);	      row    =    table.getBasicRow(i);    	non-compiled	[CE]  cannot  find  symbol  table	16	None	replace
9	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  minRow  =  row  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	minRow    =    row    -    1;    minRow  =  row  -  1;	  	compilable	  [FE]  MaxCountExceededException  	7	1	add
10	[BUG]  [BUGGY]  minRow  =  row  -  1;  minRow  =  row  -  1;  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  minRow  =  row  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    -    1;    minRow  =  row  -  1;	  	compilable	  [FE]  MaxCountExceededException  	7	1	add
11	[BUG]  [BUGGY]  minRow  =  row  -  1;  minRow  =  column  -  1;  [CE]  cannot  find  symbol  column  [FE]      AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  minRow  =  column  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    -    1;    minRow  =  column  -  1;	  	non-compiled	[CE]  cannot  find  symbol  column	7	None	add
12	[BUG]  [BUGGY]  minRow  =  row  -  1;  minuteRow  =  row  -  1;  [CE]  cannot  find  symbol  minuteRow  [FE]        AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  minuteRow  =  row  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    -    1;    minuteRow  =  row  -  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteRow	7	None	add
13	[BUG]  [BUGGY]  minRow  =  row  -  1;  minRow  =  row  -  1;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  minRow  =  row  -  1;  }  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    -    1;    minRow  =  row  -  1;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
14	[BUG]  [BUGGY]  minRow  =  column;  [CE]  cannot  find  symbol  column  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  column;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  column;	  minRow    =    col;    	non-compiled	[CE]  cannot  find  symbol  column	4	None	replace
15	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	minRow  =  col  +  1;	  minRow    =    col;    	compilable	  [FE]  OutOfRangeException  	4	2	replace
16	[BUG]  [BUGGY]  minRow  =  col  +  1;  [FE]  OutOfRangeException  [FE]      AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  col  +  1;	  minRow    =    col;    	compilable	  [FE]  OutOfRangeException  	4	2	replace
17	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i;  minRow  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	minRow    =    i;    minRow  =  i;	  	compilable	  [FE]  MaxCountExceededException  	1	1	add
18	[BUG]  [BUGGY]  minRow  =  i;  minRow  =  i;  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i;  minRow  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    i;    minRow  =  i;	  	compilable	  [FE]  MaxCountExceededException  	1	1	add
19	[BUG]  [BUGGY]  minRow  =  i;  minIndex  =  i;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i;  minIndex  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    i;    minIndex  =  i;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
20	[BUG]  [BUGGY]  minRow  =  i;  minuteRow  =  i;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i;  minuteRow  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    i;    minuteRow  =  i;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
21	[BUG]  [BUGGY]  minRow  =  i;  maxRow  =  i;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i;  maxRow  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    i;    maxRow  =  i;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
22	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  Integer  row  =  table.getBasicRow(i,  col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	Integer  row  =  table.getBasicRow(i,  col);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	Integer  row  =  table.getBasicRow(i  +  1);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  Integer  row  =  table.getRow(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	Integer  row  =  table.getRow(i);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(i,  col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(i,  col);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(i  +  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(i  +  1);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(i  -  1);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(rowIndex);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(rowIndex);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(rowIndex);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]      minRow  =(int)Math.rint(row,  col);  [CE]  <identifier>  expected  [FE]    UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      minRow  =(int)Math.rint(row,  col);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        minRow  =(int)Math.rint(row,  col);	  	non-compiled	[CE]  <identifier>  expected	9	None	add
30	[BUG]  [BUGGY]      minRow  =(int)Math.rint(col);  [CE]  <identifier>  expected  [FE]      UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      minRow  =(int)Math.rint(col);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        minRow  =(int)Math.rint(col);	  	non-compiled	[CE]  <identifier>  expected	9	None	add
31	[BUG]  [BUGGY]      if(col  ==  col)  {  minIndex  =  col;  }  [CE]  illegal  start  of  type  [FE]        UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      if(col  ==  col)  {  minIndex  =  col;  }  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        if(col  ==  col)  {  minIndex  =  col;  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
32	[BUG]  [BUGGY]      if(col  ==  col)  {  minIndex  +=  col;  }  [CE]  illegal  start  of  type  [FE]          UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      if(col  ==  col)  {  minIndex  +=  col;  }  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        if(col  ==  col)  {  minIndex  +=  col;  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
33	[BUG]  [BUGGY]      minRow  =(int)Math.rint(col  -  1);  [CE]  <identifier>  expected  [FE]            UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      minRow  =(int)Math.rint(col  -  1);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        minRow  =(int)Math.rint(col  -  1);	  	non-compiled	[CE]  <identifier>  expected	9	None	add
34	[BUG]  [BUGGY]  minRow  =  row  +  1;  minRow  =  row  +  1;  [CE]  <identifier>  expected  [FE]    MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  minRow  =  row  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    minRow  =  row  +  1;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
35	[BUG]  [BUGGY]  minRow  =  row  +  1;  minuteRow  =  row  +  1;  [CE]  <identifier>  expected  [FE]      MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  minuteRow  =  row  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    minuteRow  =  row  +  1;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
36	[BUG]  [BUGGY]  minRow  =  row  +  1;  maxRow  =  row  +  1;  [CE]  <identifier>  expected  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  maxRow  =  row  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    maxRow  =  row  +  1;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
37	[BUG]  [BUGGY]  minRow  =  row  +  1;  minRow  =  column  +  1;  [CE]  <identifier>  expected  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  minRow  =  column  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    minRow  =  column  +  1;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
38	[BUG]  [BUGGY]  minRow  =  col  -  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  col  -  1;	  minRow    =    row    -    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  minRow  =  i  -  1;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  i  -  1;	  minRow    =    row    -    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col);  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(row,  col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(row,  col);	      int    row    =    table.getRowIndex(row);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
41	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row);  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  this.table.getRowIndex(row);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  this.table.getRowIndex(row);	      int    row    =    table.getRowIndex(row);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
42	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(col);  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(col);	      int    row    =    table.getRowIndex(row);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
43	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  -  1;  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowCount()  -  1;  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowCount()  -  1;	      int    row    =    table.getRowCount();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
44	[BUG]  [BUGGY]  int  row  =  table.getRowCount(i);  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowCount(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowCount(i);	      int    row    =    table.getRowCount();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
45	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  +  1;  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowCount()  +  1;  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowCount()  +  1;	      int    row    =    table.getRowCount();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
46	[BUG]  [BUGGY]  int  row  =  table.getColumnCount();  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getColumnCount();  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getColumnCount();	      int    row    =    table.getRowCount();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
47	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i  +  1);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
48	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  col  -  1);  [CE]  <identifier>  expected  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i,  col  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i,  col  -  1);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  int  row  =  table.getRow(i);  [CE]  <identifier>  expected  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRow(i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRow(i);	      int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  col);  [CE]  <identifier>  expected  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i,  col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i,  col);	      int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  minRow  =  i  +  1;  [CE]  <identifier>  expected  [FE]    MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  i  +  1;	  minRow    =    row    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  minRow  =  row  +  2;  [CE]  <identifier>  expected  [FE]      MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  2;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  row  +  2;	  minRow    =    row    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  minRow  =  i  +  col;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  i  +  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  i  +  col;	  minRow    =    i;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(i  -  1);  [CE]  <identifier>  expected  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getColumnRow(i  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getColumnRow(i  -  1);	      int    row    =    table.getColumnRow(i);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(i  +  1);  [CE]  <identifier>  expected  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getColumnRow(i  +  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getColumnRow(i  +  1);	      int    row    =    table.getColumnRow(i);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  minRow  =  col;  minRow  =  row;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  col;  minRow  =  row;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    col;    minRow  =  row;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
57	[BUG]  [BUGGY]  row  =  table.getBasicRow(i  +  1);  [CE]  <identifier>  expected  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  row  =  table.getBasicRow(i  +  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	row  =  table.getBasicRow(i  +  1);	      row    =    table.getBasicRow(i);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  minRow  =  row  -  1;  maxRow  =  row  -  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  -  1;  maxRow  =  row  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    -    1;    maxRow  =  row  -  1;	  	non-compiled	[CE]  <identifier>  expected	7	None	add
59	[BUG]  [BUGGY]  minRow  =  table.getBasicRow(i);  [CE]  <identifier>  expected  [FE]    UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  table.getBasicRow(i);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  table.getBasicRow(i);	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  i  =  table.getBasicRow(i);  [CE]  <identifier>  expected  [FE]      UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  i  =  table.getBasicRow(i);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	i  =  table.getBasicRow(i);	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i;  [CE]  <identifier>  expected  [FE]        UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	i  =  table.getBasicRow(i);  minIndex  =  i;	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i);  [CE]  <identifier>  expected  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(row,  i);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(row,  i);	      int    row    =    table.getRowIndex(row);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
63	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1);  [CE]  <identifier>  expected  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getRowIndex(row  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getRowIndex(row  -  1);	      int    row    =    table.getRowIndex(row);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  minRow  =  column  -  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  column  -  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  column  -  1;	  minRow    =    row    -    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1);  [CE]  <identifier>  expected  [FE]        MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	Integer  row  =  table.getBasicRow(i  -  1);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
66	[BUG]  [BUGGY]  minRow  =  row  +  1;  int  minRow  =  row  +  1;  [CE]  <identifier>  expected  [FE]    MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  int  minRow  =  row  +  1;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    int  minRow  =  row  +  1;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
67	[BUG]  [BUGGY]  minRow  -=  i;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  -=  i;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  -=  i;	  minRow    =    i;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
68	[BUG]  [BUGGY]  minRow  =  row  +  3;  [CE]  <identifier>  expected  [FE]    MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  3;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  row  +  3;	  minRow    =    row    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  1  +  minIndex);  [CE]  <identifier>  expected  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i  -  1  +  minIndex);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i  -  1  +  minIndex);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
70	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  1  -  minIndex);  [CE]  <identifier>  expected  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i  -  1  -  minIndex);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i  -  1  -  minIndex);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  minRow  =  row.getBasicRow(i);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row.getBasicRow(i);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  =  row.getBasicRow(i);	  minRow    =    i;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
72	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  1,  col);  [CE]  <identifier>  expected  [FE]            MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(i  -  1,  col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(i  -  1,  col);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(col  -  1);  [CE]  <identifier>  expected  [FE]              MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getBasicRow(col  -  1);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getBasicRow(col  -  1);	      int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  minRow  =  row  +  1;  minRow  =  row  +  1;  }  [CE]  <identifier>  expected  [FE]    MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  =  row  +  1;  minRow  =  row  +  1;  }  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow    =    row    +    1;    minRow  =  row  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	5	None	add
75	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(col);  [CE]  <identifier>  expected  [FE]          MaxCountExceededException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  int  row  =  table.getColumnRow(col);  [BUGGY]    minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	int  row  =  table.getColumnRow(col);	      int    row    =    table.getColumnRow(i);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]      minValue  =  row.getBasicValue(i);  [CE]  <identifier>  expected  [FE]    UnboundedSolutionException    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]      minValue  =  row.getBasicValue(i);  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	        minValue  =  row.getBasicValue(i);	  	non-compiled	[CE]  <identifier>  expected	9	None	add
77	[BUG]  [BUGGY]  minRow  -=  col;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;    [BUGGY]  minRow  -=  col;  [BUGGY]    }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	minRow  -=  col;	  minRow    =    col;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
