bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	    minIndex  =  i;  minRow  =  row;		compilable	  [FE]  MaxCountExceededException  	16	1	add
2	[BUG]  [BUGGY]    minIndex  =  i;  minRow  =  row;  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    minIndex  =  i;  minRow  =  row;		compilable	  [FE]  MaxCountExceededException  	16	1	add
3	[BUG]  [BUGGY]    i  =  table.getBasicRow(i);  [CE]  cannot  find  symbol  table  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    i  =  table.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    i  =  table.getBasicRow(i);		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
4	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    minIndex  =  i;  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	    minIndex  =  i;		compilable	  [FE]  MaxCountExceededException  	16	1	add
5	[BUG]  [BUGGY]    minIndex  =  i;  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    minIndex  =  i;  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    minIndex  =  i;		compilable	  [FE]  MaxCountExceededException  	16	1	add
6	[BUG]  [BUGGY]    i  =  table.getBasicRow(i);  minIndex  =  i;  [CE]  cannot  find  symbol  table  [FE]          MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    i  =  table.getBasicRow(i);  minIndex  =  i;  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    i  =  table.getBasicRow(i);  minIndex  =  i;		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
7	[BUG]  [BUGGY]    int  minIndex  =  table.getBasicRow(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    int  minIndex  =  table.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    int  minIndex  =  table.getBasicRow(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	16	None	add
8	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]  minIndex  =  i  +  1;  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	minIndex  =  i  +  1;	minIndex  =  i;  	compilable	  [FE]  MaxCountExceededException  	15	1	replace
9	[BUG]  [BUGGY]  minIndex  =  i  +  1;  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]  minIndex  =  i  +  1;  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	minIndex  =  i  +  1;	minIndex  =  i;  	compilable	  [FE]  MaxCountExceededException  	15	1	replace
10	[BUG]  [BUGGY]    minRow  =  row.getBasicRow(i);  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    minRow  =  row.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    minRow  =  row.getBasicRow(i);		non-compiled	[CE]  cannot  find  symbol	16	None	add
11	[BUG]  [BUGGY]    int  row  =  table.getBasicRow(i);  [CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    int  row  =  table.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    int  row  =  table.getBasicRow(i);		non-compiled	[CE]  variable  row  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	16	None	add
12	[BUG]  [BUGGY]    ((  SimplexTableau)table.getBasicRow(i)).setValue(col);  [CE]  cannot  find  symbol  table  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    ((  SimplexTableau)table.getBasicRow(i)).setValue(col);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    ((  SimplexTableau)table.getBasicRow(i)).setValue(col);		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
13	[BUG]  [BUGGY]    row  =  table.getBasicRow(i);  [CE]  cannot  find  symbol  table  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  table.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  table.getBasicRow(i);		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
14	[BUG]  [BUGGY]    ((  SimplexTableau)table.getBasicRow(i)).setIndex(minIndex);  [CE]  cannot  find  symbol  table  [FE]          MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    ((  SimplexTableau)table.getBasicRow(i)).setIndex(minIndex);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    ((  SimplexTableau)table.getBasicRow(i)).setIndex(minIndex);		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
