bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getRow(i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getRow(i  +  1);	  Integer    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getRow(i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getRow(i  -  1);	  Integer    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i,  col);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getRow(i,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getRow(i,  col);	  Integer    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  if(col  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  table.getBasicRow(i)||  row  >  col)  {	  if(column    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	41	None	replace
5	[BUG]  [BUGGY]  if(col  ==  table.getBasicRow(i)||  row  >  minRow)  {  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  table.getBasicRow(i)||  row  >  minRow)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  table.getBasicRow(i)||  row  >  minRow)  {	  if(column    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	41	None	replace
6	[BUG]  [BUGGY]  if(i!=  row.getBasicRow(i))  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i!=  row.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  row.getBasicRow(i))  {	  if(i    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
7	[BUG]  [BUGGY]  if(i!=  column.getBasicRow(i))  {  [CE]  cannot  find  symbol  column  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i!=  column.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  column.getBasicRow(i))  {	  if(i!=    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  column	1	None	replace
8	[BUG]  [BUGGY]  if(i  ==  minRow.getBasicRow(i))  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  minRow.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  minRow.getBasicRow(i))  {	  if(i    ==    column.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
9	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  2);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i  +  2);	  Integer    row    =(Integer)table.getRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(i!=  table.getRowCount())  {  [CE]  cannot  find  symbol  table  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i!=  table.getRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  table.getRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i!=    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	30	None	replace
11	[BUG]  [BUGGY]  if(i  ==  table.getRowCount())  {  [CE]  cannot  find  symbol  table  [FE]                NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i!=    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	30	None	replace
12	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  col  -  1);	  int    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i,  col  -  1);	  Integer    row    =(Integer)table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
14	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i,  col  +  1);	  Integer    row    =(Integer)table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
15	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i,  column);	  Integer    row    =(Integer)table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
16	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  col  +  1);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
17	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions(i);	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
18	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  -  1;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
19	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  i;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  +  i;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
20	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  column);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  column);	  Integer    row    =(Integer)table.getColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
21	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  col  -  1);	  Integer    row    =(Integer)table.getColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
22	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  col  +  1);	  Integer    row    =(Integer)table.getColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
23	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  +  1,  col);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(i  +  1,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i  +  1,  col);	  int    row    =    table.getRowIndex(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i,  col  +  1);	  int    row    =    table.getRowIndex(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  if(minIndex  ==  table.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minIndex  ==  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minIndex  ==  table.getBasicRow(i)||  col  ==  0)  {	  if(minRow    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	47	None	replace
26	[BUG]  [BUGGY]  if(minRow  ==  row.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  row.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  row.getBasicRow(i)||  col  ==  0)  {	  if(minRow    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
27	[BUG]  [BUGGY]  if(i  ==  column.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  column  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  column.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  column.getBasicRow(i)||  row  >  col)  {	  if(i    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  column	37	None	replace
28	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i)&&  row  >  col)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getBasicRow(i)&&  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i)&&  row  >  col)  {	  if(i    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
29	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(i);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  this.table.getRowIndex(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  this.table.getRowIndex(i);	  int    row    =    table.getColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getColumnIndex(i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnIndex(i  -  1);	  int    row    =    table.getColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]                            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getColumnIndex(i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnIndex(i  +  1);	  int    row    =    table.getColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	48	None	replace
33	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
34	[BUG]  [BUGGY]  if(minRow  ==  row.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  row.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  row.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
35	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row,  i  +  1);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
36	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  row);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i,  row);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
37	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  this.table.getRowIndex(row,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  this.table.getRowIndex(row,  i);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
38	[BUG]  [BUGGY]  if(i  ==  Table.getBasicRow(i))  {  [CE]  cannot  find  symbol  Table  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  Table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  Table.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    Table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  Table	29	None	replace
39	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  i;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  /  i;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    i;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
40	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  i;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  -  i;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    i;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
41	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  *  i;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  *  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  *  i;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    i;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
42	[BUG]  [BUGGY]  int  row  =  table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRow(i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRow(i  -  1);	  int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i  +  1);	  int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getColumnRow(i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnRow(i  -  1);	  int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  minRow)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	add	if(i  <  minRow)  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    tableau.getBasicRow(i))    {    	compilable	  [FE]  NullPointerException  	27	4	replace
46	[BUG]  [BUGGY]  if(i  <  minRow)  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  minRow)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  minRow)  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    tableau.getBasicRow(i))    {    	compilable	  [FE]  NullPointerException  	27	4	replace
47	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions(i);	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  -  1;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  +  1;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(row  ==  col.getBasicRow(i))  {  [CE]  int  cannot  be  dereferenced  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  col.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  col.getBasicRow(i))  {	  if(col    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
51	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(col))  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getBasicRow(col))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(col))  {	  if(col    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
52	[BUG]  [BUGGY]  if(row  ==  column.getBasicRow(i))  {  [CE]  cannot  find  symbol  column  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  column.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  column.getBasicRow(i))  {	  if(col    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  column	33	None	replace
53	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  col  -  1);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  int  row  =  table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRow(i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRow(i  +  1);	  int    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
55	[BUG]  [BUGGY]  int  row  =  table.getRow(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRow(i,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRow(i,  col);	  int    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  +  1,  col);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  if(row  ==  col.getBasicRow(i)||  row  >  col)  {  [CE]  int  cannot  be  dereferenced  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  col.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  col.getBasicRow(i)||  row  >  col)  {	  if(col    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	38	None	replace
58	[BUG]  [BUGGY]  if(row  ==  column.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  column.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  column.getBasicRow(i)||  row  >  col)  {	  if(col    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  column	38	None	replace
59	[BUG]  [BUGGY]  if(i  <  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  table.getBasicRow(i))  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	2	None	replace
60	[BUG]  [BUGGY]  if(i  <  =  row.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  row.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  row.getBasicRow(i))  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  <  minIndex)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  <  minIndex)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i)||  col  <  minIndex)  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i,  col  -  1);	  int    row    =    table.getRowIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  i);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
64	[BUG]  [BUGGY]  if(i  ==  column.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  column  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  column.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  column.getBasicRow(i)||  col  ==  0)  {	  if(i    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  column	34	None	replace
65	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions(i,  col);	  int    minIndex    =    table.getNumObjectiveFunctions(i);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
66	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions(i  +  1);	  int    minIndex    =    table.getNumObjectiveFunctions(i);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
67	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  column);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i,  column);	  int    row    =    table.getRowIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
68	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row,  col);	  int    row    =    table.getRowIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  if(i  ==  row.getRowCount(i))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getRowCount(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getRowCount(i))  {	  if(i    ==    table.getRowCount(i))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
70	[BUG]  [BUGGY]  if(i  ==  row.getRowCount())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getRowCount())  {	  if(i    ==    table.getRowCount(i))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
71	[BUG]  [BUGGY]  if(i  ==  column.getRowCount(i))  {  [CE]  cannot  find  symbol  column  [FE]                NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  column.getRowCount(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  column.getRowCount(i))  {	  if(i    ==    table.getRowCount(i))    {    	non-compiled	[CE]  cannot  find  symbol  column	3	None	replace
72	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i,  col  +  1);	  int    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
73	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i,  column);	  int    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
74	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i,  i);	  int    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
75	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  column);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  col  +  1);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  row);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  int  minIndex  =  row.getNumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  row.getNumObjectiveFunctions()  -  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  row.getNumObjectiveFunctions()  -  1;	  int    minIndex    =    table.getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  col  -  1);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  col  +  1);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  column);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  column);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  i);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  i);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  /  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  /  1;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  if(row  ==  col.getBasicRow(i)||  col  ==  0)  {  [CE]  int  cannot  be  dereferenced  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  col.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  col.getBasicRow(i)||  col  ==  0)  {	  if(col    ==    row.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	36	None	replace
85	[BUG]  [BUGGY]  if(col  ==  row.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  row.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row.getBasicRow(i)&&  col  ==  0)  {	  if(col    ==    row.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
86	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  i);	  Integer    row    =(Integer)table.getColumn(i,    minIndex);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
87	[BUG]  [BUGGY]  if(row  ==  table.getBasicRow(i)||  row  >  minRow)  {  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(row  ==  table.getBasicRow(i)||  row  >  minRow)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  table.getBasicRow(i)||  row  >  minRow)  {	  if(minRow    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	40	None	replace
88	[BUG]  [BUGGY]  if(minRow  ==  row.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  row.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  row.getBasicRow(i)||  row  >  col)  {	  if(minRow    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
89	[BUG]  [BUGGY]  if(minIndex  ==  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minIndex  ==  table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minIndex  ==  table.getBasicRow(i))  {	  if(minRow    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	43	None	replace
90	[BUG]  [BUGGY]  if(minRow  ==  row.getBasicRow(i))  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  row.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  row.getBasicRow(i))  {	  if(minRow    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
91	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i)&&  col  <  minRatioPositions.size())  {	  if(i    ==    table.getBasicRow(i)&&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
92	[BUG]  [BUGGY]  if(i  ==  column.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  column  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  column.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  column.getBasicRow(i)&&  col  <  minRatioPositions.size())  {	  if(i    ==    table.getBasicRow(i)&&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol  column	52	None	replace
93	[BUG]  [BUGGY]  if(i  ==  Table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  Table  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  Table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  Table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {	  if(i    ==    table.getBasicRow(i)&&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol  Table	52	None	replace
94	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  i  +  1;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  i  +  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  +  i  +  1;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    i;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
95	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  row;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  row;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  +  row;	  int    minIndex    =    table.getNumObjectiveFunctions()    +    i;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
96	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1  -  minIndex);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1  -  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i  +  1  -  minIndex);	  Integer    row    =(Integer)table.getRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  i;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions()  +  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions()  +  i;	  int    minIndex    =    table.getMinimumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  row);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  minIndex);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(i,  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  minIndex);	  Integer    row    =(Integer)table.getRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
100	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)&&  row  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  table  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getBasicRow(i)&&  row  <  minRatioPositions.size())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)&&  row  <  minRatioPositions.size())  {	  if(i    ==    table.getBasicRow(i)&&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
101	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)&&  column  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  table  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getBasicRow(i)&&  column  <  minRatioPositions.size())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)&&  column  <  minRatioPositions.size())  {	  if(i    ==    table.getBasicRow(i)&&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol  table	52	None	replace
102	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)&&  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getBasicRow(i)&&  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)&&  row  >  col)  {	  if(i    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	37	None	replace
103	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
104	[BUG]  [BUGGY]  if(minRow  ==  table.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  table.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  table.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	48	None	replace
105	[BUG]  [BUGGY]  if(minIndex  ==  table.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minIndex  ==  table.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minIndex  ==  table.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	48	None	replace
106	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(row,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getColumnIndex(row,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnIndex(row,  i);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
107	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row,  i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row,  i  -  1);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
108	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i,  col  -  1);	  int    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
109	[BUG]  [BUGGY]  if(i  >=  table.getRowCount())  {  [CE]  cannot  find  symbol  table  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  >=  table.getRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  >=  table.getRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i!=    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	30	None	replace
110	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i)||  col  ==  0)  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
111	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i)||(i  >=  col))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(i)||(i  >=  col))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i)||(i  >=  col))  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
112	[BUG]  [BUGGY]  if(column  ==  row.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(column  ==  row.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(column  ==  row.getBasicRow(i)||  row  >  col)  {	  if(i    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  column	39	None	replace
113	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions(i,  row);	  int    minIndex    =    table.getNumObjectiveFunctions(i);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
114	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions(i  -  1);	  int    minIndex    =    table.getNumObjectiveFunctions(i);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
115	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  minRow);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  minRow);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  minRow);	  Integer    row    =(Integer)table.getColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getColumnIndex(i,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnIndex(i,  col);	  int    row    =    table.getRowIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]  if(i  <  =  table.getRowCount())  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
118	[BUG]  [BUGGY]  if(i  ==  row,  table.getBasicRow(i))  {  [CE]  ')'  expected  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row,  table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row,  table.getBasicRow(i))  {	  if(i    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
119	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  i);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
120	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1  -  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1  -  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  +  1  -  row);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
121	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i  -  1,  minIndex);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(i  -  1,  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i  -  1,  minIndex);	  Integer    row    =(Integer)table.getColumn(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
122	[BUG]  [BUGGY]  if(i  ==  col.getBasicRow(i))  {  [CE]  int  cannot  be  dereferenced  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  col.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  col.getBasicRow(i))  {	  if(i    ==    column.getBasicRow(i))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
123	[BUG]  [BUGGY]  if(i  ==  table.getColumnCount(i))  {  [CE]  cannot  find  symbol  table  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getColumnCount(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getColumnCount(i))  {	  if(i    ==    table.getRowCount(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	3	None	replace
124	[BUG]  [BUGGY]  if(minIndex  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minIndex  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minIndex  ==  table.getBasicRow(i)||  row  >  col)  {	  if(minRow    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	40	None	replace
125	[BUG]  [BUGGY]  if(minRow  ==  table.getBasicRow(i)&&  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(minRow  ==  table.getBasicRow(i)&&  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  table.getBasicRow(i)&&  row  >  col)  {	  if(minRow    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	40	None	replace
126	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row  -  1);	  int    row    =    table.getRowIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
127	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
128	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
129	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(row  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getRow(row  -  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(row  -  1);	  Integer    row    =(Integer)table.getRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  i;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  -  i;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  -  i;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
131	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i,  column);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  column);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
132	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row  +  1);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row  +  1);	  int    row    =    table.getRowIndex(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
133	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1  +  i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1  +  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  -  1  +  i);	  int    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
134	[BUG]  [BUGGY]  if(i  ==  Table.getInteger(row))  {  [CE]  cannot  find  symbol  Table  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  Table.getInteger(row))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  Table.getInteger(row))  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    Table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  Table	29	None	replace
135	[BUG]  [BUGGY]  if(i  <  =  Table.getIntegerCount())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  Table.getIntegerCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  Table.getIntegerCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    Table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
136	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i,  row);	  Integer    row    =(Integer)table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
137	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(i)||  col  >=  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i)||  col  >=  0)  {	  if(i    <    =    tableau.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
138	[BUG]  [BUGGY]  if(column  ==  table.getBasicRow(i)||  row  >  minRow)  {  [CE]  cannot  find  symbol  column  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(column  ==  table.getBasicRow(i)||  row  >  minRow)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(column  ==  table.getBasicRow(i)||  row  >  minRow)  {	  if(column    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  column	41	None	replace
139	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRowCount())  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
140	[BUG]  [BUGGY]  if(i  >=  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  >=  table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  >=  table.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	28	None	replace
141	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(1))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(1))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(1))  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
142	[BUG]  [BUGGY]  if(col  ==  row,  table.getBasicRow(i))  {  [CE]  ')'  expected  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  row,  table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row,  table.getBasicRow(i))  {	  if(col    ==    row.getBasicRow(i))    {    	non-compiled	[CE]  ')'  expected	33	None	replace
143	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  row);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
144	[BUG]  [BUGGY]  if(j  ==  row.getBasicRow(i))  {  [CE]  cannot  find  symbol  j  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(j  ==  row.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(j  ==  row.getBasicRow(i))  {	  if(i    ==    column.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  j	14	None	replace
145	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  2);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  -  2);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
146	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(row))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(row))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(row))  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i)||  row  >  col)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i)||  row  >  col)  {	  if(i    <    =    table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  -  1,  row);	  int    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
149	[BUG]  [BUGGY]  if(col  ==  row,  table.getBasicRow(i)||  col  ==  0)  {  [CE]  ')'  expected  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  row,  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row,  table.getBasicRow(i)||  col  ==  0)  {	  if(col    ==    row.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  ')'  expected	36	None	replace
150	[BUG]  [BUGGY]  if(i!=  Table.getBasicRow(i))  {  [CE]  cannot  find  symbol  Table  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i!=  Table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  Table.getBasicRow(i))  {	  if(i!=    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  Table	1	None	replace
151	[BUG]  [BUGGY]  if(i  <  =  col)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  col)  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
152	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow())  {  [CE]  cannot  find  symbol  table  [FE]          NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  table.getBasicRow())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	27	None	replace
153	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1,  col);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1,  col);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  +  1,  col);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
154	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  2);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getBasicRow(i  +  2);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  +  2);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
155	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  +  1,  row);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
156	[BUG]  [BUGGY]  if(i  <  =  Table.getBasicRowCount())  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  Table.getBasicRowCount())  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  Table.getBasicRowCount())  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    Table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  if(i  <  =  Table.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  <  =  Table.getBasicRow(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  Table.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    if(i    ==    Table.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
158	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  -  1,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  -  1,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i  -  1,  row);	  Integer    row    =(Integer)table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
159	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowIndex(row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row);	  int    row    =    table.getColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
160	[BUG]  [BUGGY]  if(i  ==  row,  table.getBasicRow(i)||  row  >  col)  {  [CE]  ')'  expected  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row,  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row,  table.getBasicRow(i)||  row  >  col)  {	  if(i    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
161	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions()  +  1;  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions()  +  1;	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
162	[BUG]  [BUGGY]  int  minIndex  =  table.getMaxObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getMaxObjectiveFunctions();  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMaxObjectiveFunctions();	  int    minIndex    =    table.getMinObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
163	[BUG]  [BUGGY]  if(field  ==  table.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  field  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(field  ==  table.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(field  ==  table.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)&&    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  field	48	None	replace
164	[BUG]  [BUGGY]  if(col  ==  row,  table.getBasicRow(i)||  row  >  col)  {  [CE]  ')'  expected  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  ==  row,  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row,  table.getBasicRow(i)||  row  >  col)  {	  if(col    ==    row.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
165	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicObjectiveFunctions(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  minIndex  =  table.getBasicObjectiveFunctions(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicObjectiveFunctions(i);	  int    minIndex    =    table.getNumObjectiveFunctions(i);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getBasicRow(i  -  2);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i  -  2);	  int    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
167	[BUG]  [BUGGY]  if(col  <  =  table.getBasicRow(i)||  row  >  col)  {  [CE]  illegal  start  of  expression  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(col  <  =  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  <  =  table.getBasicRow(i)||  row  >  col)  {	  if(column    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
168	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(col,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getColumn(col,  i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(col,  i);	  Integer    row    =(Integer)table.getColumn(i,    minIndex);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
169	[BUG]  [BUGGY]  if(i  ==  row,  table.getBasicRow(i)||  col  ==  0)  {  [CE]  ')'  expected  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row,  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row,  table.getBasicRow(i)||  col  ==  0)  {	  if(i    ==    row.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
170	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i  +  1,  row);	  Integer    row    =(Integer)table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
171	[BUG]  [BUGGY]  int  row  =  table.getRowCount(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  int  row  =  table.getRowCount(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowCount(i);	  int    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
172	[BUG]  [BUGGY]  Integer  row  =  table.getColumn(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  Integer  row  =  table.getColumn(i);  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getColumn(i);	  Integer    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
173	[BUG]  [BUGGY]  if(i  ==  row.getColumnCount(i))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {      [BUGGY]  if(i  ==  row.getColumnCount(i))  {  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getColumnCount(i))  {	  if(i    ==    table.getRowCount(i))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
