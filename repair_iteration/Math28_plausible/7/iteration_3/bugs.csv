bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  If  (minIndex  <  i)  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (minIndex  <  i)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (minIndex  <  i)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
2	[BUG]  [BUGGY]  If  (minIndex  <  0)  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (minIndex  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (minIndex  <  0)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
3	[BUG]  [BUGGY]  if  (minIndex  <  0)  {  If  (minIndex  <  0)  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0)  {  If  (minIndex  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0)  {  If  (minIndex  <  0)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
4	[BUG]  [BUGGY]  if  (i  <  minRow)  {  If  (minIndex  <  minRow)  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow)  {  If  (minIndex  <  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow)  {  If  (minIndex  <  minRow)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  >  minRow)  {	  if    (i    >    maxUlps)    {    	compilable	  [FE]  NullPointerException  	72	4	replace
6	[BUG]  [BUGGY]  if  (i  >  minRow)  {  [FE]  NullPointerException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  minRow)  {	  if    (i    >    maxUlps)    {    	compilable	  [FE]  NullPointerException  	72	4	replace
7	[BUG]  [BUGGY]  if  (i  <  minRow)  {  if  (i  <  minRow)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow)  {  if  (i  <  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow)    {    if  (i  <  minRow)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
8	[BUG]  [BUGGY]  if  (i  <  minRow)  {  If  (i  <  minRow)  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow)  {  If  (i  <  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow)    {    If  (i  <  minRow)  {	  	non-compiled	[CE]  ';'  expected	82	None	add
9	[BUG]  [BUGGY]  if  (i  <  minRow)  {  if  (i  >=  minRow)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow)  {  if  (i  >=  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow)    {    if  (i  >=  minRow)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
10	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  =  col)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  =  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  =  col)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
11	[BUG]  [BUGGY]  if  (i  <  =  minIndex  &&  col  <  =  col)  {  [CE]  illegal  start  of  expression  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  =  minIndex  &&  col  <  =  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  =  minIndex  &&  col  <  =  col)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
12	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  =  col  &&  col  <  minIndex)  {  [CE]  illegal  start  of  expression  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  =  col  &&  col  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  =  col  &&  col  <  minIndex)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
13	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  col  -  1);	  int    minIndex    =    table.getBasicColumnIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
14	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  col  +  1);	  int    minIndex    =    table.getBasicColumnIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
15	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
16	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  0  ||  col  >=  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  0  ||  col  >=  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    if  (minIndex  <  0  ||  col  >=  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
17	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  If  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  If  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    If  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	87	None	add
18	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatio)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [CE]  ';'  expected  [FE]          MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatio)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  minRatio)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    If    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
19	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [CE]  ';'  expected  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  maxUlps)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    If    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
20	[BUG]  [BUGGY]  If  (i  <  minIndex  ||  col  <  0)  {  [CE]  ';'  expected  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (i  <  minIndex  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (i  <  minIndex  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    If    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
21	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  col  -  1);	  Integer    minRow    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  Integer  minIndex  =  row.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.intValue()  +  1;	  Integer    minIndex    =    i.intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  Integer  minIndex  =  column.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  column.intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.intValue()  +  1;	  Integer    minIndex    =    i.intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  Integer  minIndex  =  table.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.intValue()  +  1;	  Integer    minIndex    =    i.intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
25	[BUG]  [BUGGY]  int  row  =  table.getRow(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  row  =  table.getRow(i);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  row  =  table.getRow(i);	  int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
26	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  row  =  table.getBasicRow(i  -  1);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  row  =  table.getBasicRow(i  -  1);	  int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
27	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(i);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  row  =  table.getColumnRow(i);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  row  =  table.getColumnRow(i);	  int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
28	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  <  0)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	25	4	replace
29	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  0)  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  0)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	25	4	replace
30	[BUG]  [BUGGY]  if  (minIndex  <  i)  {  if  (minIndex  <  i)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  i)  {  if  (minIndex  <  i)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    i)    {    if  (minIndex  <  i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
31	[BUG]  [BUGGY]  if  (minIndex  <  i)  {  If  (minIndex  <  i)  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  i)  {  If  (minIndex  <  i)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    i)    {    If  (minIndex  <  i)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
32	[BUG]  [BUGGY]  if  (minIndex  <  i)  {  if  (minIndex  >=  i)  {  [CE]  illegal  start  of  expression  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  i)  {  if  (minIndex  >=  i)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    i)    {    if  (minIndex  >=  i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
33	[BUG]  [BUGGY]  minIndex  =  i.getBasicRow(column);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  i.getBasicRow(column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i.getBasicRow(column);	  minIndex    =    column.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
34	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  col  +  1);	  Integer    minRow    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  column);	  Integer    minRow    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  int  minIndex  =  column.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  column.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  column.intValue()  -  1;	  int    minIndex    =    column.intValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  int  minIndex  =  col.intValue();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  col.intValue();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  col.intValue();	  int    minIndex    =    column.intValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  [CE]  int  cannot  be  dereferenced  [FE]        MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  maxUlps.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	46	None	replace
39	[BUG]  [BUGGY]  if  (minIndex  <  0)  {  if  (minIndex  <  0)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0)  {  if  (minIndex  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0)    {    if  (minIndex  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
40	[BUG]  [BUGGY]  if  (minIndex  <  0)  {  if  (minIndex  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0)  {  if  (minIndex  >=  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0)    {    if  (minIndex  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
41	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
42	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (i  <  minRow  ||  col  >=  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (i  <  minRow  ||  col  >=  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    if  (i  <  minRow  ||  col  >=  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
43	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	69	None	add
44	[BUG]  [BUGGY]  Integer  minIndex  =  column.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  column.getBasicRow(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.getBasicRow(i  +  1);	  Integer    minIndex    =    row.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minRow  ||  col  >  minRatioPositions.size())  {	  if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	70	4	replace
46	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  >  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow  ||  col  >  minRatioPositions.size())  {	  if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	70	4	replace
47	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex();	  int    minIndex    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  int  minIndex  =  table.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.intValue()  -  1;	  int    minIndex    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  Integer  minIndex  =  column.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  column.getBasicRow(i,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.getBasicRow(i,  row);	  Integer    minIndex    =    row.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i,  col  +  1);	  Integer    minIndex    =    row.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i,  col  -  1);	  Integer    minIndex    =    row.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatio)    {    if  (minIndex  <  minRow  ||  col  >  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
53	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  If  (minIndex  <  minRow  ||  col  >  minRatio)  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  If  (minIndex  <  minRow  ||  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatio)    {    If  (minIndex  <  minRow  ||  col  >  minRatio)  {	  	non-compiled	[CE]  ';'  expected	60	None	add
54	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1  -  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1  -  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  +  1  -  row);	  Integer    minRow    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  0  ||  col  >  minRatioPositions.size())  {	  if    (minIndex    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	15	2	replace
56	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  >  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0  ||  col  >  minRatioPositions.size())  {	  if    (minIndex    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	15	2	replace
57	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  NullPointerException  	27	4	replace
58	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  <  0)  {  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  NullPointerException  	27	4	replace
59	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  <  =  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  <  =  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
60	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  MAX_EPSILON)  {  [CE]  cannot  find  symbol  MAX_EPSILON  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  MAX_EPSILON)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  MAX_EPSILON)  {	  if    (minIndex    <    minRow    ||    col    >    minRatio)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_EPSILON	61	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  maxUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  >  maxUlps)  {	  if    (minIndex    <    minRow    ||    col    >    minRatio)    {    	compilable	  [FE]  NullPointerException  	61	4	replace
62	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  maxUlps)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  maxUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  maxUlps)  {	  if    (minIndex    <    minRow    ||    col    >    minRatio)    {    	compilable	  [FE]  NullPointerException  	61	4	replace
63	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minValue)  {  [CE]  cannot  find  symbol  minValue  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minValue)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  minValue)  {	  if    (minIndex    <    minRow    ||    col    >    minRatio)    {    	non-compiled	[CE]  cannot  find  symbol  minValue	61	None	replace
64	[BUG]  [BUGGY]  if  (minIndex  <  =  col  ||  col  >  minRatio)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  col  ||  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  col  ||  col  >  minRatio)  {	  if    (minIndex    <    minRow    ||    col    >    minRatio)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
65	[BUG]  [BUGGY]  minIndex  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  table.getBasicRow(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicRow(i  +  1);	  minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
66	[BUG]  [BUGGY]  minIndex  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  table.getBasicRow(i,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicRow(i,  col);	  minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
67	[BUG]  [BUGGY]  minIndex  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  table.getBasicRow(i  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicRow(i  -  1);	  minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
68	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  col  -  1);	  Integer    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
69	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1  -  row);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1  -  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  +  1  -  row);	  Integer    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
71	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
72	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  If  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  If  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    If  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	37	None	add
73	[BUG]  [BUGGY]  Integer  minIndex  =  table.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.intValue()  -  1;	  Integer    minIndex    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
74	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  row);	  Integer    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
75	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  col  +  1);	  Integer    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
76	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  column);	  Integer    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
77	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  maxUlps.size())  {  [CE]  int  cannot  be  dereferenced  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  maxUlps.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  maxUlps.size())  {	  if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	68	None	replace
78	[BUG]  [BUGGY]  if  (minIndex  <  =  col  ||  col  >  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  col  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  col  ||  col  >  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
79	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).doubleValue();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i).doubleValue();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).doubleValue();	  i    =    table.getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
80	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).longValue();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i).longValue();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).longValue();	  i    =    table.getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
81	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).floatValue();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i).floatValue();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).floatValue();	  i    =    table.getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
82	[BUG]  [BUGGY]  if  (minIndex  <  =  0  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  0  ||  col  <  minRatioPositions.size())  {	  if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
83	[BUG]  [BUGGY]  i  =  table.getBasicRow(i  +  1,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i  +  1,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i  +  1,  col);	  i    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
84	[BUG]  [BUGGY]  i  =  table.getBasicRow(i  +  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i  +  2);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i  +  2);	  i    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
85	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  column);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  row);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  col  -  1);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  col  +  1);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  minIndex  =  i  +  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  i  +  1;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i  +  1;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
90	[BUG]  [BUGGY]  minIndex  =  col;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  col;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  col;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
91	[BUG]  [BUGGY]  minIndex  =  i  +  col;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  i  +  col;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i  +  col;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
92	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  if  (i  <  minIndex  &&  col  <  minRatio)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  if  (i  <  minIndex  &&  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatio)    {    if  (i  <  minIndex  &&  col  <  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
93	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  If  (i  <  minIndex  &&  col  <  minRatio)  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  If  (i  <  minIndex  &&  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatio)    {    If  (i  <  minIndex  &&  col  <  minRatio)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
94	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  if  (i  >=  minIndex  &&  col  <  minRatio)  {  [CE]  illegal  start  of  expression  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  if  (i  >=  minIndex  &&  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatio)    {    if  (i  >=  minIndex  &&  col  <  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
95	[BUG]  [BUGGY]  if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  >=  DEFAULT_EPSILON)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  >=  DEFAULT_EPSILON)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  >=  DEFAULT_EPSILON)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    if    (i    <    minIndex    ||    col    >=    minRatio)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  if  (minIndex  <  =  col  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  col  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  col  ||  col  <  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
97	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	38	4	replace
98	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >=  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	38	4	replace
99	[BUG]  [BUGGY]  Integer  minIndex  =  col.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  col.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  col.intValue()  -  1;	  Integer    minIndex    =    col.intValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
100	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  row,  col);	  int    minIndex    =    table.getBasicColumnIndex(i,    row);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
101	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  column  -  1);	  int    minIndex    =    table.getBasicColumnIndex(i,    column);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
102	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  column  +  1);	  int    minIndex    =    table.getBasicColumnIndex(i,    column);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
103	[BUG]  [BUGGY]  Integer  minIndex  =  row.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.intValue()  -  1;	  Integer    minIndex    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
104	[BUG]  [BUGGY]  Integer  minIndex  =  row.intValue()  -  col;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.intValue()  -  col;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.intValue()  -  col;	  Integer    minIndex    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
105	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  if  (i  <  minIndex  ||  col  <  0)  {  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  if  (i  <  minIndex  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    0)    {    if  (i  <  minIndex  ||  col  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
106	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  If  (i  <  minIndex  ||  col  <  0)  {  [CE]  ';'  expected  [FE]      MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  If  (i  <  minIndex  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    0)    {    If  (i  <  minIndex  ||  col  <  0)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
107	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  if  (i  <  minIndex  ||  col  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  if  (i  <  minIndex  ||  col  >=  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    0)    {    if  (i  <  minIndex  ||  col  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
108	[BUG]  [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  minIndex)  {  [CE]  ';'  expected  [FE]          UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex)  {  If  (i  >  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
109	[BUG]  [BUGGY]  If  (i  <  minIndex)  {  [CE]  ';'  expected  [FE]            UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (i  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (i  <  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
110	[BUG]  [BUGGY]  If  (i  >  minIndex)  {  [CE]  ';'  expected  [FE]              UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (i  >  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (i  >  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
111	[BUG]  [BUGGY]  if  (i  >  minIndex)  {  If  (i  <  minRow)  {  [CE]  ';'  expected  [FE]                UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  minIndex)  {  If  (i  <  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  minIndex)  {  If  (i  <  minRow)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
112	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  col);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  +  1,  col);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
113	[BUG]  [BUGGY]  minIndex  =  table.getBasicColumn(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  table.getBasicColumn(i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicColumn(i);	  minIndex    =    tableau.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
114	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(i,  col);	  int    minIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
115	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(i  +  1);	  int    minIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
116	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(i  -  1);	  int    minIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
117	[BUG]  [BUGGY]  if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  <  minRatio)  {  [CE]  illegal  start  of  expression  [FE]        MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if(i  <  minIndex  ||  col  >  maxUlps)  {  if  (i  <  minRatioPositions  ||  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    if    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
118	[BUG]  [BUGGY]  i  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i,  col);	  i    =    tableau.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
119	[BUG]  [BUGGY]  i  =  table.getBasicColumn(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicColumn(i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicColumn(i);	  i    =    table.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
120	[BUG]  [BUGGY]  minIndex  =  i.getBasicRow(col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  i.getBasicRow(col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i.getBasicRow(col);	  minIndex    =    i.getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
121	[BUG]  [BUGGY]  if  (i  <  col)  {  if  (i  <  col)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  col)  {  if  (i  <  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    col)    {    if  (i  <  col)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
122	[BUG]  [BUGGY]  if  (i  <  col)  {  If  (i  <  col)  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  col)  {  If  (i  <  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    col)    {    If  (i  <  col)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
123	[BUG]  [BUGGY]  if  (i  <  col)  {  if  (i  >=  col)  {  [CE]  illegal  start  of  expression  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  col)  {  if  (i  >=  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    col)    {    if  (i  >=  col)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
124	[BUG]  [BUGGY]  Integer  minIndex  =  i.getBasicRow(column);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  i.getBasicRow(column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  i.getBasicRow(column);	  Integer    minIndex    =    column.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
125	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicColumn(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicColumn(i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicColumn(i);	  Integer    minIndex    =    tableau.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
126	[BUG]  [BUGGY]  int  rowIndex  =  table.getRowIndex(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  rowIndex  =  table.getRowIndex(i);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getRowIndex(i);	  int    rowIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
127	[BUG]  [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i,  col);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i,  col);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getBasicRowIndex(i,  col);	  int    rowIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
128	[BUG]  [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i  -  1);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getBasicRowIndex(i  -  1);	  int    rowIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
129	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  row  +  1);	  Integer    minRow    =    table.getBasicRow(i,    row);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
130	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  row  -  1);	  Integer    minRow    =    table.getBasicRow(i,    row);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
131	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  i);	  Integer    minRow    =    table.getBasicRow(i,    row);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
132	[BUG]  [BUGGY]  if  (i  >  maxUlps)  {  if  (i  >  maxUlps)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  maxUlps)  {  if  (i  >  maxUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    maxUlps)    {    if  (i  >  maxUlps)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
133	[BUG]  [BUGGY]  if  (i  >  maxUlps)  {  if  (i  >  minUlps)  {  [CE]  illegal  start  of  expression  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  maxUlps)  {  if  (i  >  minUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    maxUlps)    {    if  (i  >  minUlps)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
134	[BUG]  [BUGGY]  if  (i  >  maxUlps)  {  If  (i  >  maxUlps)  {  [CE]  ';'  expected  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  maxUlps)  {  If  (i  >  maxUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    maxUlps)    {    If  (i  >  maxUlps)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
135	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  column);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  column);	  int    minIndex    =    table.getBasicColumn(i,    row);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
136	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  row  +  1);	  int    minIndex    =    table.getBasicColumn(i,    row);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
137	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  row,  col);	  int    minIndex    =    table.getBasicColumn(i,    row);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
138	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  col  -  1);	  int    minIndex    =    table.getBasicColumn(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
139	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
140	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  if  (minIndex  >=  minRow  ||  col  >  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  if  (minIndex  >=  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    if  (minIndex  >=  minRow  ||  col  >  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
141	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  If  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  If  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    If  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	67	None	add
142	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
143	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  If  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  If  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    If  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	35	None	add
144	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  if  (i  >=  minIndex  &&  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]        UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  if  (i  >=  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    if  (i  >=  minIndex  &&  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
145	[BUG]  [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i  +  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i  +  1;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i);  minIndex  =  i  +  1;	  i    =    table.getBasicRow(i);    minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
146	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i  +  1);	  int    minIndex    =    table.getBasicColumnIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
147	[BUG]  [BUGGY]  if  (i  >  col)  {  if  (i  >  col)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  col)  {  if  (i  >  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    col)    {    if  (i  >  col)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
148	[BUG]  [BUGGY]  if  (i  >  col)  {  If  (i  >  col)  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  col)  {  If  (i  >  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    col)    {    If  (i  >  col)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
149	[BUG]  [BUGGY]  Integer  minIndex  =  column.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  column.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.intValue()  -  1;	  Integer    minIndex    =    column.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
150	[BUG]  [BUGGY]  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  ';'  expected	48	None	replace
151	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  ';'  expected	48	None	replace
152	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  ';'  expected	48	None	replace
153	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  >  minIndex  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	36	4	replace
154	[BUG]  [BUGGY]  if  (i  >  minIndex  &&  col  <  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  minIndex  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	36	4	replace
155	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row,  i  +  1);	  int    minIndex    =    table.getBasicColumnIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
156	[BUG]  [BUGGY]  int  minIndex  =  row.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  row.intValue()  -  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  row.intValue()  -  1;	  int    minIndex    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  col  +  1);	  int    minIndex    =    table.getBasicColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
158	[BUG]  [BUGGY]  if  (minIndex  <  =  i)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  i)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  i)  {	  if    (minIndex    <    =    col)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
159	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  col)  {	  if    (minIndex    <    =    col)    {    	compilable	  [FE]  UnboundedSolutionException  	63	4	replace
160	[BUG]  [BUGGY]  if  (minIndex  <  col)  {  [FE]  UnboundedSolutionException  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  col)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  col)  {	  if    (minIndex    <    =    col)    {    	compilable	  [FE]  UnboundedSolutionException  	63	4	replace
161	[BUG]  [BUGGY]  i  =  column.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  column.getBasicRow(i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  column.getBasicRow(i);	  i    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
162	[BUG]  [BUGGY]  i  =  row.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  row.getBasicRow(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  row.getBasicRow(i  +  1);	  i    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
163	[BUG]  [BUGGY]  i  =  table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i  +  1,  row);	  i    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
164	[BUG]  [BUGGY]  i  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i,  col  +  1);	  i    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
165	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  <  minRatio)  {  If  (i  <  minIndex  ||  col  >  minRatio)  {  [CE]  ';'  expected  [FE]          MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  ||  col  <  minRatio)  {  If  (i  <  minIndex  ||  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow  ||  col  <  minRatio)  {  If  (i  <  minIndex  ||  col  >  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    If    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
166	[BUG]  [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  tableau.getBasicRow(i  +  1);	  Integer    minIndex    =    row.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
167	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  0  &&  col  <  minRatioPositions.size())  {	  if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	88	4	replace
168	[BUG]  [BUGGY]  if  (minIndex  <  0  &&  col  <  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0  &&  col  <  minRatioPositions.size())  {	  if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	88	4	replace
169	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  >  minRatioPositions.size())  {	  if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	36	3	replace
170	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  >  minRatioPositions.size())  {	  if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	36	3	replace
171	[BUG]  [BUGGY]  if  (i  <  minRatioPositions  ||  col  <  minRatio)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRatioPositions  ||  col  <  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRatioPositions  ||  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    if    (i    <    minIndex    ||    col    <    minRatio)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
172	[BUG]  [BUGGY]  if  (minIndex  <  =  minIndex)  {  [CE]  illegal  start  of  expression  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  minIndex)  {	  if    (i    <    =    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
173	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).value();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i).value();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).value();	  i    =    table.getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
174	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  if  (minIndex  >=  minRow  ||  col  >  minRatio)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  if  (minIndex  >=  minRow  ||  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow    ||    col    >    minRatio)    {    if  (minIndex  >=  minRow  ||  col  >  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
175	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  >  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  NullPointerException  	27	4	replace
176	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  0)  {  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  NullPointerException  	27	4	replace
177	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  col);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row,  col);	  int    minIndex    =    table.getBasicColumnIndex(i,    col);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
178	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  >=  0  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  if  (minIndex  >=  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    if  (minIndex  >=  0  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
179	[BUG]  [BUGGY]  int  minIndex  =  table.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.intValue()  +  1;	  int    minIndex    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
180	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1  -  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1  -  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  +  1  -  row);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
181	[BUG]  [BUGGY]  int  minIndex  =  row.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  row.intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  row.intValue()  +  1;	  int    minIndex    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
182	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  i);	  int    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
183	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1  +  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1  +  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  -  1  +  row);	  int    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
184	[BUG]  [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(row);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getBasicRowIndex(row);	  int    rowIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
185	[BUG]  [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i  +  1);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getBasicRowIndex(i  +  1);	  int    rowIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
186	[BUG]  [BUGGY]  if  (minIndex  <  0)  {  If  (minIndex  >  0)  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0)  {  If  (minIndex  >  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0)  {  If  (minIndex  >  0)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
187	[BUG]  [BUGGY]  if  (minIndex  <  =  col)  {  If  (minIndex  <  minRow)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  col)  {  If  (minIndex  <  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  col)  {  If  (minIndex  <  minRow)  {	  if    (minIndex    <    minRow)    {    If    (minIndex    <    minRow)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
188	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  row  =  table.getBasicRow(i  +  1);  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  row  =  table.getBasicRow(i  +  1);	  int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
189	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  -  1,  row);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  -  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i  -  1,  row);	  int    minIndex    =    table.getBasicColumnIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
190	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.get(i))  {  [CE]  ';'  expected  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.get(i))  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.get(i))  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  ';'  expected	48	None	replace
191	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  >  maxUlps.size())  {  If  (i  <  minRow  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  ';'  expected	48	None	replace
192	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  row  +  1);	  int    minIndex    =    table.getBasicColumnIndex(i,    row);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
193	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  >  minRatio)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  MaxCountExceededException  	25	1	replace
194	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatio)  {  [FE]  MaxCountExceededException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  >  minRatio)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  >  minRatio)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  MaxCountExceededException  	25	1	replace
195	[BUG]  [BUGGY]  if  (minIndex  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  =  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  0)  {	  if    (minIndex    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
196	[BUG]  [BUGGY]  i  =  tableau.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  tableau.getBasicRow(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  tableau.getBasicRow(i  +  1);	  i    =    tableau.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
197	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minRow  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	70	4	replace
198	[BUG]  [BUGGY]  if  (i  <  minRow  &&  col  <  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minRow  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	70	4	replace
199	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  &&  col  <  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	38	4	replace
200	[BUG]  [BUGGY]  if  (minIndex  <  minRow  &&  col  <  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  &&  col  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  &&  col  <  minRatioPositions.size())  {	  if    (minIndex    <    minRow    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	38	4	replace
201	[BUG]  [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  minRow)  {  [CE]  ';'  expected  [FE]          UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  minRow)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex)  {  If  (i  >  minRow)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
202	[BUG]  [BUGGY]  if  (i  >  col)  {  If  (i  >  minIndex)  {  [CE]  ';'  expected  [FE]            UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  col)  {  If  (i  >  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  col)  {  If  (i  >  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
203	[BUG]  [BUGGY]  if  (i  >  maxUlps)  {  If  (i  <  minIndex)  {  [CE]  ';'  expected  [FE]              UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  maxUlps)  {  If  (i  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  maxUlps)  {  If  (i  <  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
204	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  i);	  int    minIndex    =    table.getBasicColumn(i,    col);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
205	[BUG]  [BUGGY]  minIndex  =  row;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  row;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  row;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
206	[BUG]  [BUGGY]  minIndex  =  i  +  2;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  i  +  2;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i  +  2;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
207	[BUG]  [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  tableau.getBasicRow(i,  col);	  Integer    minIndex    =    row.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
208	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  =  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  =  0)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
209	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  =  DEFAULT_EPSILON)  {  [CE]  illegal  start  of  expression  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  =  DEFAULT_EPSILON)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  =  DEFAULT_EPSILON)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
210	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  col  &&  col  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  col  &&  col  <  minIndex)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	85	3	replace
211	[BUG]  [BUGGY]  if  (i  <  col  &&  col  <  minIndex)  {  [FE]  UnboundedSolutionException  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  col  &&  col  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  col  &&  col  <  minIndex)  {	  if    (i    <    =    col    &&    col    <    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	85	3	replace
212	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(i,  row);	  int    minIndex    =    table.getBasicColumnIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
213	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  table.getColumnCount())  {  [CE]  cannot  find  symbol  table  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRow  ||  col  >  table.getColumnCount())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  table.getColumnCount())  {	  if    (minIndex    <    minRow    ||    col    >    minRatioPositions.size())    {    	non-compiled	[CE]  cannot  find  symbol  table	68	None	replace
214	[BUG]  [BUGGY]  minIndex  =  table.getBasicRow(i).intValue();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  =  table.getBasicRow(i).intValue();  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicRow(i).intValue();	  i    =    table.getBasicRow(i);    minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
215	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(row);	  int    minIndex    =    table.getBasicRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
216	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i  -  1  +  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i  -  1  +  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i  -  1  +  row);	  int    minIndex    =    table.getBasicColumn(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
217	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(i  +  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i  +  1);	  int    minIndex    =    table.getBasicColumn(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
218	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  1  +  row);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  1  +  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  -  1  +  row);	  Integer    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
219	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  i);	  Integer    minIndex    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
220	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1  +  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1  +  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  -  1  +  row);	  Integer    minRow    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
221	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  -  1,  row);	  Integer    minRow    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
222	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i).intValue();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i).intValue();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i).intValue();	  Integer    minIndex    =    tableau.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
223	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  +  1,  row);	  Integer    minRow    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
224	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  2);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  +  2);	  Integer    minRow    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
225	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(col,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(col,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(col,  row);	  int    minIndex    =    table.getBasicColumn(i,    row);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
226	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row  -  1);	  int    minIndex    =    table.getBasicColumnIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
227	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row,  i  -  1);	  int    minIndex    =    table.getBasicColumnIndex(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
228	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).intValue()  +  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  i  =  table.getBasicRow(i).intValue()  +  1;  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).intValue()  +  1;	  i    =    table.getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
229	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(col  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumn(col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(col  -  1);	  int    minIndex    =    table.getBasicColumn(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
230	[BUG]  [BUGGY]  if  (i  >  col)  {  If  (i  <  minIndex)  {  [CE]  ';'  expected  [FE]          UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  >  col)  {  If  (i  <  minIndex)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  col)  {  If  (i  <  minIndex)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
231	[BUG]  [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  0)  {  [CE]  ';'  expected  [FE]            UnboundedSolutionException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex)  {  If  (i  >  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex)  {  If  (i  >  0)  {	  if    (i    >    minIndex)    {    If    (i    >    minIndex)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
232	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  +  1,  row);	  int    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
233	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.getBasicRow(i  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i  -  1);	  Integer    minIndex    =    row.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
234	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  2);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  2);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  -  2);	  Integer    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
235	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  column);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row,  column);	  int    minIndex    =    table.getBasicColumnIndex(i,    column);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
236	[BUG]  [BUGGY]  minIndex  -=  i;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  minIndex  -=  i;  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  -=  i;	  minIndex    =    i;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
237	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(index);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(index);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(index);	  int    minIndex    =    table.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
238	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  DEFAULT_EPSILON)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  <  DEFAULT_EPSILON)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	25	4	replace
239	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  DEFAULT_EPSILON)  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  DEFAULT_EPSILON)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  DEFAULT_EPSILON)  {	  if    (i    <    minIndex    &&    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	25	4	replace
240	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  column);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i,  column);	  Integer    minIndex    =    row.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
241	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(row,  i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRowIndex(row,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(row,  i);	  int    minIndex    =    table.getBasicColumnIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
242	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col,  i);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(col,  i);	  int    minIndex    =    table.getBasicColumnIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
243	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1,  row);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1,  row);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  +  1,  row);	  Integer    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
244	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  2);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  2);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  +  2);	  Integer    minIndex    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
245	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  row)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  row)  {	  if    (i    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	83	4	replace
246	[BUG]  [BUGGY]  if  (i  <  row)  {  [FE]  UnboundedSolutionException  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  row)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  row)  {	  if    (i    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	83	4	replace
247	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRatioPositions.size()  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRatioPositions.size()  ||  col  >  minRatioPositions.size())  {	  if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	88	2	replace
248	[BUG]  [BUGGY]  if  (minIndex  <  minRatioPositions.size()  ||  col  >  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  minRatioPositions.size()  ||  col  >  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRatioPositions.size()  ||  col  >  minRatioPositions.size())  {	  if    (minIndex    <    0    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	88	2	replace
249	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(col  -  1);	  int    minIndex    =    table.getBasicColumnIndex(col);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
250	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(col  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  int  minIndex  =  table.getBasicRow(col  -  1);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(col  -  1);	  int    minIndex    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
251	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRowIndex();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minIndex  =  table.getBasicRowIndex();  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRowIndex();	  Integer    minIndex    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
252	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  0)  {	  if    (minIndex    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	15	4	replace
253	[BUG]  [BUGGY]  if  (i  <  0)  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  0)  {	  if    (minIndex    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	15	4	replace
254	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(row,  col);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  Integer  minRow  =  table.getBasicRow(row,  col);  [BUGGY]      if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(row,  col);	  Integer    minRow    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
255	[BUG]  [BUGGY]  if(i  >  minUlps)  {  [CE]  cannot  find  symbol  minUlps  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if(i  >  minUlps)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if(i  >  minUlps)  {	  if    (i    >    maxUlps)    {    	non-compiled	[CE]  cannot  find  symbol  minUlps	72	None	replace
256	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if(i  >  maxUlps  &&  row  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if(i  >  maxUlps  &&  row  <  minRatioPositions.size())  {	  if    (i    >    maxUlps)    {    	compilable	  [FE]  UnboundedSolutionException  	72	4	replace
257	[BUG]  [BUGGY]  if(i  >  maxUlps  &&  row  <  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]      UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if(i  >  maxUlps  &&  row  <  minRatioPositions.size())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if(i  >  maxUlps  &&  row  <  minRatioPositions.size())  {	  if    (i    >    maxUlps)    {    	compilable	  [FE]  UnboundedSolutionException  	72	4	replace
258	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  0  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	27	4	replace
259	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  0)  {  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (minIndex  <  0  ||  col  <  0)  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    0)    {    	compilable	  [FE]  UnboundedSolutionException  	27	4	replace
260	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  =  table.getColumnCount())  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {      [BUGGY]  if  (i  <  minIndex  &&  col  <  =  table.getColumnCount())  {  [BUGGY]      minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  =  table.getColumnCount())  {	  if    (i    <    minIndex    &&    col    <    minRatioPositions.size())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
