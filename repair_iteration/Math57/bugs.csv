bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this(random, EmptyClusterStrategy.LARGEST_VARIANCE); [FE] AssertionError [CONTEXT]     public KMeansPlusPlusClusterer(final Random random) { [BUGGY] this(random, EmptyClusterStrategy.LARGEST_VARIANCE); [BUGGY] }     [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	69	69	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]     public KMeansPlusPlusClusterer(final Random random) { [BUGGY] [BUGGY] this(random, EmptyClusterStrategy.LARGEST_VARIANCE); }     [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	69	69	1	add	
3	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT]    public KMeansPlusPlusClusterer(final Random random) { this(random, EmptyClusterStrategy.LARGEST_VARIANCE); [BUGGY] } [BUGGY]      [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]    public KMeansPlusPlusClusterer(final Random random) { this(random, EmptyClusterStrategy.LARGEST_VARIANCE); [BUGGY] [BUGGY] }      [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	
5	[BUG] [BUGGY] return clusters; [FE] AssertionError [CONTEXT] return clusters; } assignPointsToClusters(newClusters, points); clusters = newClusters; } [BUGGY] return clusters; [BUGGY] }     [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return clusters; } assignPointsToClusters(newClusters, points); clusters = newClusters; } [BUGGY] [BUGGY] return clusters; }     [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	add	
7	[BUG] [BUGGY] int sum = 0; [FE] AssertionError [CONTEXT] final double[] dx2 = new double[pointSet.size()]; while (resultSet.size() < k) {   [BUGGY] int sum = 0; [BUGGY] for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] dx2 = new double[pointSet.size()]; while (resultSet.size() < k) {   [BUGGY] [BUGGY] int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	add	
9	[BUG] [BUGGY] for (int i = 0; i < pointSet.size(); i++) { [FE] AssertionError [CONTEXT] final double[] dx2 = new double[pointSet.size()]; while (resultSet.size() < k) {   int sum = 0; [BUGGY] for (int i = 0; i < pointSet.size(); i++) { [BUGGY] final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] dx2 = new double[pointSet.size()]; while (resultSet.size() < k) {   int sum = 0; [BUGGY] [BUGGY] for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	add	
11	[BUG] [BUGGY] final T p = pointSet.get(i); [FE] AssertionError [CONTEXT] while (resultSet.size() < k) {   int sum = 0; for (int i = 0; i < pointSet.size(); i++) { [BUGGY] final T p = pointSet.get(i); [BUGGY] final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	177	177	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] while (resultSet.size() < k) {   int sum = 0; for (int i = 0; i < pointSet.size(); i++) { [BUGGY] [BUGGY] final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	177	177	1	add	
13	[BUG] [BUGGY] final Cluster<T> nearest = getNearestCluster(resultSet, p); [FE] AssertionError [CONTEXT]   int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); [BUGGY] final Cluster<T> nearest = getNearestCluster(resultSet, p); [BUGGY] final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; }  [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	178	178	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]   int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); [BUGGY] [BUGGY] final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; }  [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	178	178	1	add	
15	[BUG] [BUGGY] final double d = p.distanceFrom(nearest.getCenter()); [FE] AssertionError [CONTEXT]  int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); [BUGGY] final double d = p.distanceFrom(nearest.getCenter()); [BUGGY] sum += d * d; dx2[i] = sum; }   [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	179	179	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); [BUGGY] [BUGGY] final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; dx2[i] = sum; }   [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	179	179	1	add	
17	[BUG] [BUGGY] sum += d * d; [FE] AssertionError [CONTEXT] int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); [BUGGY] sum += d * d; [BUGGY] dx2[i] = sum; }    [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	180	180	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] int sum = 0; for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); [BUGGY] [BUGGY] sum += d * d; dx2[i] = sum; }    [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	180	180	1	add	
19	[BUG] [BUGGY] dx2[i] = sum; [FE] AssertionError [CONTEXT] for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; [BUGGY] dx2[i] = sum; [BUGGY] }   final double r = random.nextDouble() * sum; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	181	181	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (int i = 0; i < pointSet.size(); i++) { final T p = pointSet.get(i); final Cluster<T> nearest = getNearestCluster(resultSet, p); final double d = p.distanceFrom(nearest.getCenter()); sum += d * d; [BUGGY] [BUGGY] dx2[i] = sum; }   final double r = random.nextDouble() * sum; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	181	181	1	add	
21	[BUG] [BUGGY] final double r = random.nextDouble() * sum; [FE] AssertionError [CONTEXT] dx2[i] = sum; }   [BUGGY] final double r = random.nextDouble() * sum; [BUGGY] for (int i = 0 ; i < dx2.length; i++) { if (dx2[i] >= r) { final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	186	186	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] dx2[i] = sum; }   [BUGGY] [BUGGY] final double r = random.nextDouble() * sum; for (int i = 0 ; i < dx2.length; i++) { if (dx2[i] >= r) { final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	186	186	1	add	
23	[BUG] [BUGGY] for (int i = 0 ; i < dx2.length; i++) { [FE] AssertionError [CONTEXT] }   final double r = random.nextDouble() * sum; [BUGGY] for (int i = 0 ; i < dx2.length; i++) { [BUGGY] if (dx2[i] >= r) { final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	187	187	1	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] }   final double r = random.nextDouble() * sum; [BUGGY] [BUGGY] for (int i = 0 ; i < dx2.length; i++) { if (dx2[i] >= r) { final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	187	187	1	add	
25	[BUG] [BUGGY] if (dx2[i] >= r) { [FE] AssertionError [CONTEXT]   final double r = random.nextDouble() * sum; for (int i = 0 ; i < dx2.length; i++) { [BUGGY] if (dx2[i] >= r) { [BUGGY] final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; } } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	188	188	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]   final double r = random.nextDouble() * sum; for (int i = 0 ; i < dx2.length; i++) { [BUGGY] [BUGGY] if (dx2[i] >= r) { final T p = pointSet.remove(i); resultSet.add(new Cluster<T>(p)); break; } } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	188	188	1	add	
27	[BUG] [BUGGY] final T p = pointSet.remove(i); [FE] AssertionError [CONTEXT]   final double r = random.nextDouble() * sum; for (int i = 0 ; i < dx2.length; i++) { if (dx2[i] >= r) { [BUGGY] final T p = pointSet.remove(i); [BUGGY] resultSet.add(new Cluster<T>(p)); break; } } } [CLASS] 	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	189	189	1	replace	