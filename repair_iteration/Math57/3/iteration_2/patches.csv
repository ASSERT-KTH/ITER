bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  because(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  because(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	because(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }	  if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
2	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  null;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  null;  }	  return    null;    if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  missing  return  statement	51	None	replace
3	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  Collections  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }	  return    null;    if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  Collections	51	None	replace
4	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  clusters	88	None	replace
5	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  clusters	88	None	replace
6	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
7	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    '    	non-compiled	[CE]  ']'  expected	112	None	replace
8	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  this;  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  this;  }	  return    null;    if(clusters    ==    null)    {    return    this;    }    	non-compiled	[CE]  incompatible  types	106	None	replace
9	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  this;  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  this;  }	  return    null;    if(clusters    ==    null)    {    return    this;    }    	non-compiled	[CE]  incompatible  types	106	None	replace
10	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  null;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  null;  }	  return    null;    if(clusters    ==    null)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	106	None	replace
11	[BUG]  [BUGGY]  if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
12	[BUG]  [BUGGY]  if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
13	[BUG]  [BUGGY]  if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }  [CE]  cannot  find  symbol  newPoints  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  cannot  find  symbol  newPoints	108	None	replace
14	[BUG]  [BUGGY]  if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }  [CE]  cannot  find  symbol  newPoints  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  cannot  find  symbol  newPoints	108	None	replace
15	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  [CE]  missing  return  statement  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
16	[BUG]  [BUGGY]  electedClusters  =  new  HashMap();  [CE]  cannot  find  symbol  electedClusters  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  new  HashMap();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  new  HashMap();	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	5	None	replace
17	[BUG]  [BUGGY]  lusters  =  new  HashMap();  [CE]  cannot  find  symbol  lusters  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  lusters  =  new  HashMap();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	lusters  =  new  HashMap();	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol  lusters	5	None	replace
18	[BUG]  [BUGGY]  Clusters  newClusters  =  new  HashMap();  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  new  HashMap();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  new  HashMap();	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
19	[BUG]  [BUGGY]  clusters  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  Collections.EMPTY_LIST;	  if(clusters!=    null)    {    clusters    =    Collections.EMPTY_LIST;    }    	non-compiled	[CE]  cannot  find  symbol  Collections	2	None	replace
20	[BUG]  [BUGGY]  Clusters  clusters  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  Collections.EMPTY_LIST;	  if(clusters!=    null)    {    clusters    =    Collections.EMPTY_LIST;    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
21	[BUG]  [BUGGY]  lusters  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  lusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  lusters  =  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	lusters  =  Collections.EMPTY_LIST;	  if(clusters!=    null)    {    clusters    =    Collections.EMPTY_LIST;    }    	non-compiled	[CE]  cannot  find  symbol  lusters	2	None	replace
22	[BUG]  [BUGGY]  System.err.println( "AssertionError: "  +  clusters);  [CE]  missing  return  statement  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.err.println( "AssertionError: "  +  clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.err.println( "AssertionError: "  +  clusters);	  System.err.println(   "AssertionError:   "    +    statement);    	non-compiled	[CE]  missing  return  statement	76	None	replace
23	[BUG]  [BUGGY]  System.err.println( "AssertionError: "  +  ClusterUtilities.ASSIGN_ERROR);  [CE]  cannot  find  symbol  ClusterUtilities  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.err.println( "AssertionError: "  +  ClusterUtilities.ASSIGN_ERROR);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.err.println( "AssertionError: "  +  ClusterUtilities.ASSIGN_ERROR);	  System.err.println(   "AssertionError:   "    +    statement);    	non-compiled	[CE]  cannot  find  symbol  ClusterUtilities	76	None	replace
24	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();	  return(clusters!=    null)?    null    :    new    HashMap    <    Integer,Object>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
25	[BUG]  [BUGGY]  Return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Return(clusters  ==  null)?  null  :  new  HashMap  <  Integer,Object>();	  return(clusters!=    null)?    null    :    new    HashMap    <    Integer,Object>();    	non-compiled	[CE]  not  a  statement	87	None	replace
26	[BUG]  [BUGGY]  clusters  =  new  LinkedHashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  LinkedHashSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  LinkedHashSet  <  AssertionError>();	  lusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
27	[BUG]  [BUGGY]  clusters  =  new  TreeSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  TreeSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  TreeSet  <  AssertionError>();	  lusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
28	[BUG]  [BUGGY]  clusters  =  clusters.toArray(new  Cluster[clusters.size()]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  clusters.toArray(new  Cluster[clusters.size()]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  clusters.toArray(new  Cluster[clusters.size()]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    +    1]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  incompatible  types	55	None	replace
29	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  ArrayList  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  ArrayList  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  new  ArrayList  <  AssertionError>();	  Clusters    <    AssertionError>    clusters    =    new    LinkedHashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
30	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  LinkedList  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  LinkedList  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  new  LinkedList  <  AssertionError>();	  Clusters    <    AssertionError>    clusters    =    new    LinkedHashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
31	[BUG]  [BUGGY]  Clusters  clusters  =  new  LinkedHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  LinkedHashMap  <  String,Object>();	  Clusters    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
32	[BUG]  [BUGGY]  Clusters  clusters  =  new  TreeMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  TreeMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  TreeMap  <  String,Object>();	  Clusters    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
33	[BUG]  [BUGGY]  Clusters  clusters  =  new  ConcurrentHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  ConcurrentHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  ConcurrentHashMap  <  String,Object>();	  Clusters    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
34	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ']'  expected	61	None	replace
35	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  =='}  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  =='}  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  =='}	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    '    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
36	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	8	None	replace
37	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	8	None	replace
38	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	67	None	add
39	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters  ==  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters  ==  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters  ==  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	67	None	add
40	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  Clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Clusters  [FE]        AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  Clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters!=  null)  {  return  Clusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  Clusters	67	None	add
41	[BUG]  [BUGGY]  AssertionError  error  =  new  AssertionError(error);  [CE]  variable  error  might  not  have  been  initialized  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  =  new  AssertionError(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  =  new  AssertionError(error);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  variable  error  might  not  have  been  initialized	94	None	replace
42	[BUG]  [BUGGY]  AssertionError  error  =(AssertionError)this.clusters.get(error);  [CE]  cannot  find  symbol  clusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  =(AssertionError)this.clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  =(AssertionError)this.clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  clusters	94	None	replace
43	[BUG]  [BUGGY]  AssertionError  error  =(AssertionError)this.clusters.get(0);  [CE]  cannot  find  symbol  clusters  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  =(AssertionError)this.clusters.get(0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  =(AssertionError)this.clusters.get(0);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  clusters	94	None	replace
44	[BUG]  [BUGGY]  <  Cluster>  newClusters  =  clusters.get(clusters.size()  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  <  Cluster>  newClusters  =  clusters.get(clusters.size()  -  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	<  Cluster>  newClusters  =  clusters.get(clusters.size()  -  1);	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
45	[BUG]  [BUGGY]  <  Cluster>  newClusters  =  clusters.iterator().next();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  <  Cluster>  newClusters  =  clusters.iterator().next();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	<  Cluster>  newClusters  =  clusters.iterator().next();	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
46	[BUG]  [BUGGY]  <  Cluster>  newClusters  =  clusters.values();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  <  Cluster>  newClusters  =  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	<  Cluster>  newClusters  =  clusters.values();	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
47	[BUG]  [BUGGY]  <  Cluster>  newClusters  =  clusters.get(clusters.size());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  <  Cluster>  newClusters  =  clusters.get(clusters.size());  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	<  Cluster>  newClusters  =  clusters.get(clusters.size());	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
48	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  false;  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  false;  }	  if(clusters!=    null)    {    return    true;    }    	non-compiled	[CE]  incompatible  types	111	None	replace
49	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.values();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.values();	  return(clusters!=    null)?    null    :    clusters.values();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
50	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  Clusters.values();  [CE]  cannot  find  symbol  Clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  Clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  Clusters.values();	  return(clusters!=    null)?    null    :    clusters.values();    	non-compiled	[CE]  cannot  find  symbol  Clusters	86	None	replace
51	[BUG]  [BUGGY]  Clusters  newClusters  =  clusters.values();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
52	[BUG]  [BUGGY]  Clusters  newClusters  =  clusters.get(error);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
53	[BUG]  [BUGGY]  AssertionError  error  :  clusters.values();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  :  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  :  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
54	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters.add(error);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters.add(error);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters.add(error);  }	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
55	[BUG]  [BUGGY]  Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.get(error);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
56	[BUG]  [BUGGY]  Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.clone();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.clone();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =(AssertionError  <  AssertionError>)this.clusters.clone();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
57	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  clusters  =  new  AssertionError(error);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  clusters  =  new  AssertionError(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  clusters  =  new  AssertionError(error);	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	replace
58	[BUG]  [BUGGY]  assignPointsToClusters(clusters,  points);  [CE]  missing  return  statement  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  assignPointsToClusters(clusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	assignPointsToClusters(clusters,  points);	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  missing  return  statement	37	None	replace
59	[BUG]  [BUGGY]  assignPointsToClusters(this.clusters,  points);  [CE]  cannot  find  symbol  clusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  assignPointsToClusters(this.clusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	assignPointsToClusters(this.clusters,  points);	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol  clusters	37	None	replace
60	[BUG]  [BUGGY]  assignPointsToClusters(this.newClusters,  points);  [CE]  cannot  find  symbol  newClusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  assignPointsToClusters(this.newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	assignPointsToClusters(this.newClusters,  points);	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol  newClusters	37	None	replace
61	[BUG]  [BUGGY]  if(clusters!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }  [CE]  missing  return  statement  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }	  if(clusters    ==    null)return    null;    if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  missing  return  statement	97	None	replace
62	[BUG]  [BUGGY]  if(clusters!=  null)return  null;  if(clusters  ==  null)  {  return  clusters;  }  [CE]  missing  return  statement  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)return  null;  if(clusters  ==  null)  {  return  clusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)return  null;  if(clusters  ==  null)  {  return  clusters;  }	  if(clusters    ==    null)return    null;    if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  missing  return  statement	97	None	replace
63	[BUG]  [BUGGY]  if(points!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }  [CE]  missing  return  statement  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(points!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(points!=  null)return  null;  if(clusters!=  null)  {  return  clusters;  }	  if(clusters    ==    null)return    null;    if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  missing  return  statement	97	None	replace
64	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  clusters;  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  clusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  clusters;  }	  if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  missing  return  statement	82	None	replace
65	[BUG]  [BUGGY]  return  clusters.values(),  newClusters);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  clusters.values(),  newClusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  clusters.values(),  newClusters);	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
66	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters.values(),  points);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters.values(),  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  clusters.values(),  points);  }	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
67	[BUG]  [BUGGY]  return  this.clusters.values(),  points);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  this.clusters.values(),  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  this.clusters.values(),  points);	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
68	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters.values(),  points);  }  else  {  clusters  =  newClusters;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters.values(),  points);  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  clusters.values(),  points);  }  else  {  clusters  =  newClusters;  }	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
69	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).as    	non-compiled	[CE]  ')'  expected	10	None	replace
70	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).a  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).a  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).a	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).as    	non-compiled	[CE]  ')'  expected	10	None	replace
71	[BUG]  [BUGGY]  vices.add(clusters);  [CE]  cannot  find  symbol  vices  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  vices.add(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	vices.add(clusters);	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  vices	65	None	replace
72	[BUG]  [BUGGY]  if(clusters  ==  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
73	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
74	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
75	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
76	[BUG]  [BUGGY]  this.clusters  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  clusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;	  this.clusters    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  clusters	45	None	replace
77	[BUG]  [BUGGY]  this.clusters  =  Lists.EMPTY_LIST;  [CE]  cannot  find  symbol  clusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Lists.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Lists.EMPTY_LIST;	  this.clusters    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  clusters	45	None	replace
78	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    ')'    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
79	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    ')'    	non-compiled	[CE]  ')'  expected	9	None	replace
80	[BUG]  [BUGGY]  return  this.newClusters.values();  [CE]  cannot  find  symbol  newClusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  this.newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  this.newClusters.values();	  return    newClusters.values();    	non-compiled	[CE]  cannot  find  symbol  newClusters	26	None	replace
81	[BUG]  [BUGGY]  newClusters.values();  [CE]  cannot  find  symbol  newClusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	newClusters.values();	  return    newClusters.values();    	non-compiled	[CE]  cannot  find  symbol  newClusters	26	None	replace
82	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    }    	non-compiled	[CE]  ')'  expected	85	None	replace
83	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    }    	non-compiled	[CE]  ')'  expected	85	None	replace
84	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  +  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  +  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  +  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    }    	non-compiled	[CE]  ')'  expected	85	None	replace
85	[BUG]  [BUGGY]  Clusters  clusters  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  ArrayList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  ArrayList();	  Clusters    clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
86	[BUG]  [BUGGY]  Clusters  clusters  =  Lists.emptyList();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  Lists.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  Lists.emptyList();	  Clusters    clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
87	[BUG]  [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	90	None	replace
88	[BUG]  [BUGGY]  Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	90	None	replace
89	[BUG]  [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	90	None	replace
90	[BUG]  [BUGGY]  Clusters  clusters  =  new  LinkedHashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  LinkedHashSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  LinkedHashSet  <  AssertionError>();	  clusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
91	[BUG]  [BUGGY]  Clusters  newClusters  =  clusters;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  clusters;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  clusters;	  Clusters    newClusters    =    null;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
92	[BUG]  [BUGGY]  Clusters  newClusters  =  Clusters.newInstance();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  Clusters.newInstance();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  Clusters.newInstance();	  Clusters    newClusters    =    null;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
93	[BUG]  [BUGGY]  Clusters  newClusters  =  Clusters.getInstance();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  Clusters.getInstance();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  Clusters.getInstance();	  Clusters    newClusters    =    null;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
94	[BUG]  [BUGGY]  Clusters  newClusters  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  Collections.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  Collections.emptyList();	  Clusters    newClusters    =    null;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
95	[BUG]  [BUGGY]  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)	104	None	replace
96	[BUG]  [BUGGY]  Cluster[]  clusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  clusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  clusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)	104	None	replace
97	[BUG]  [BUGGY]  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)	104	None	replace
98	[BUG]  [BUGGY]  Clusters.sort(clusters,  points);  [CE]  cannot  find  symbol  Clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters.sort(clusters,  points);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters.sort(clusters,  points);	  Clusters.sort(clusters);    	non-compiled	[CE]  cannot  find  symbol  Clusters	22	None	replace
99	[BUG]  [BUGGY]  Clusters.sort(this.clusters);  [CE]  cannot  find  symbol  clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters.sort(this.clusters);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters.sort(this.clusters);	  Clusters.sort(clusters);    	non-compiled	[CE]  cannot  find  symbol  clusters	22	None	replace
100	[BUG]  [BUGGY]  Clusters.sort(newClusters);  [CE]  cannot  find  symbol  newClusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters.sort(newClusters);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters.sort(newClusters);	  Clusters.sort(clusters);    	non-compiled	[CE]  cannot  find  symbol  newClusters	22	None	replace
101	[BUG]  [BUGGY]  clusters  =  new  LinkedHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  LinkedHashMap  <  String,Object>();	  clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
102	[BUG]  [BUGGY]  AssertionError  error  :  clusters.keySet())  {  clusters.add(error);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  :  clusters.keySet())  {  clusters.add(error);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  :  clusters.keySet())  {  clusters.add(error);  }	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	95	None	replace
103	[BUG]  [BUGGY]  Clusters  newClusters  =  clusters.keySet();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  clusters.keySet();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  clusters.keySet();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
104	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  Collections  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  Collections.emptyList();  }	  return    null;    if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  Collections	79	None	replace
105	[BUG]  [BUGGY]  Return(clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Return(clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Return(clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();	  return(clusters!=    null)?    null    :    new    HashMap    <    String,Object>();    	non-compiled	[CE]  not  a  statement	59	None	replace
106	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsToClusters    	non-compiled	[CE]  ')'  expected	12	None	replace
107	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPoints	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsToClusters    	non-compiled	[CE]  ')'  expected	12	None	replace
108	[BUG]  [BUGGY]  electedClusters  =  newClusters;  [CE]  cannot  find  symbol  electedClusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  newClusters;	  if(clusters!=    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	47	None	replace
109	[BUG]  [BUGGY]  lusters  =  newClusters;  [CE]  cannot  find  symbol  lusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  lusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	lusters  =  newClusters;	  if(clusters!=    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  lusters	47	None	replace
110	[BUG]  [BUGGY]  vices.add(newClusters);  [CE]  cannot  find  symbol  newClusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  vices.add(newClusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	vices.add(newClusters);	  if(clusters!=    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	47	None	replace
111	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1)    	non-compiled	[CE]  ')'  expected	57	None	replace
112	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  ==  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  ==  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1)    	non-compiled	[CE]  illegal  line  end  in  character  literal	57	None	replace
113	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1)    	non-compiled	[CE]  ')'  expected	57	None	replace
114	[BUG]  [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  lusters    =    newClusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
115	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[newClusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[newClusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[newClusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  lusters    =    newClusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
116	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >>  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >>  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters!=    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	6	None	replace
117	[BUG]  [BUGGY]  return(this.clusters  ==  null)?  null  :  this.clusters;  [CE]  cannot  find  symbol  clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(this.clusters  ==  null)?  null  :  this.clusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(this.clusters  ==  null)?  null  :  this.clusters;	  return(this.clusters!=    null)?    null    :    this.clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	58	None	replace
118	[BUG]  [BUGGY]  if(this.clusters!=  null)return  null;  if(this.clusters!=  null)return  null;  [CE]  cannot  find  symbol  clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(this.clusters!=  null)return  null;  if(this.clusters!=  null)return  null;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(this.clusters!=  null)return  null;  if(this.clusters!=  null)return  null;	  return(this.clusters!=    null)?    null    :    this.clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	58	None	replace
119	[BUG]  [BUGGY]  clusters  =  Clusters.emptyList();  [CE]  cannot  find  symbol  Clusters  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  Clusters.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  Clusters.emptyList();	  lusters    =    Clusters.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Clusters	115	None	replace
120	[BUG]  [BUGGY]  clusters  =  Clusters.EMPTY_LIST;  [CE]  cannot  find  symbol  Clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  Clusters.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  Clusters.EMPTY_LIST;	  lusters    =    Clusters.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Clusters	115	None	replace
121	[BUG]  [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  String[clusters.size()  ]);  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  String[clusters.size()  ]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters!=  null)?  null  :  clusters.toArray(new  String[clusters.size()  ]);	  return(clusters    ==    null)?    null    :    clusters.toArray(new    String[clusters.size()    ]);    	non-compiled	[CE]  incompatible  types	103	None	replace
122	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  +  1]);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  +  1]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  +  1]);	  return(clusters    ==    null)?    null    :    clusters.toArray(new    String[clusters.size()    ]);    	non-compiled	[CE]  incompatible  types	103	None	replace
123	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  ],  points);  [CE]  no  suitable  method  found  for  toArray(String[],Collection<T#1>)  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  ],  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.toArray(new  String[clusters.size()  ],  points);	  return(clusters    ==    null)?    null    :    clusters.toArray(new    String[clusters.size()    ]);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(String[],Collection<T#1>)	103	None	replace
124	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assign    	non-compiled	[CE]  ')'  expected	13	None	replace
125	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assign    	non-compiled	[CE]  ')'  expected	13	None	replace
126	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [CE]  ']'  expected  [FE]                              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assign    	non-compiled	[CE]  ']'  expected	13	None	replace
127	[BUG]  [BUGGY]  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
128	[BUG]  [BUGGY]  }  else  if(newClusters!=  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(newClusters!=  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(newClusters!=  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
129	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }  else  {  assignPointsToClusters(newClusters,  points);  }	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
130	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  +  1]);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  +  1]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  +  1]);	  return(clusters!=    null)?    null    :    clusters.toArray(new    Class[clusters.size()    ]);    	non-compiled	[CE]  incompatible  types	102	None	replace
131	[BUG]  [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);  [CE]  no  suitable  method  found  for  toArray(Class[],Collection<T#1>)  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);	  return(clusters!=    null)?    null    :    clusters.toArray(new    Class[clusters.size()    ]);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Class[],Collection<T#1>)	102	None	replace
132	[BUG]  [BUGGY]  Clusters  clusters  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  LinkedHashMap();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  LinkedHashMap();	  Clusters    clusters    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
133	[BUG]  [BUGGY]  Clusters  clusters  =  new  TreeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  TreeMap();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  TreeMap();	  Clusters    clusters    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
134	[BUG]  [BUGGY]  Clusters  clusters  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  HashSet();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  HashSet();	  Clusters    clusters    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
135	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(1));  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(0));    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
136	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [CE]  cannot  find  symbol  clusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(0));    }    	non-compiled	[CE]  cannot  find  symbol  clusters	56	None	replace
137	[BUG]  [BUGGY]  clusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(0));    }    	non-compiled	[CE]  incompatible  types	56	None	replace
138	[BUG]  [BUGGY]  return  clusters.newClusters;  [CE]  cannot  find  symbol  newClusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  clusters.newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  clusters.newClusters;	  return    this.newClusters;    	non-compiled	[CE]  cannot  find  symbol  newClusters	41	None	replace
139	[BUG]  [BUGGY]  clusters  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  LinkedHashMap();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  LinkedHashMap();	  clusters    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
140	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  ')'  expected	99	None	replace
141	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
142	[BUG]  [BUGGY]  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
143	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  clusters	89	None	replace
144	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
145	[BUG]  [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  newClusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  newClusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	89	None	replace
146	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	11	None	replace
147	[BUG]  [BUGGY]  this.clusters  =  Lists.emptyList();  [CE]  cannot  find  symbol  clusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Lists.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Lists.emptyList();	  this.clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  clusters	44	None	replace
148	[BUG]  [BUGGY]  this.clusters  =  Collections.EMPTY_STRING;  [CE]  cannot  find  symbol  clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Collections.EMPTY_STRING;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Collections.EMPTY_STRING;	  this.clusters    =    clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	43	None	replace
149	[BUG]  [BUGGY]  Clusters  <  String,Object>  clusters  =  new  LinkedHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  String,Object>  clusters  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  String,Object>  clusters  =  new  LinkedHashMap  <  String,Object>();	  Clusters    <    String,Object>    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
150	[BUG]  [BUGGY]  Clusters  <  String,Object>  clusters  =  new  TreeMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  String,Object>  clusters  =  new  TreeMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  String,Object>  clusters  =  new  TreeMap  <  String,Object>();	  Clusters    <    String,Object>    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
151	[BUG]  [BUGGY]  Clusters  <  String,Object>  clusters  =  new  ConcurrentHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  String,Object>  clusters  =  new  ConcurrentHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  String,Object>  clusters  =  new  ConcurrentHashMap  <  String,Object>();	  Clusters    <    String,Object>    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
152	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);  [CE]  no  suitable  method  found  for  toArray(Class[],Collection<T#1>)  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  ],  points);	  return(clusters    ==    null)?    null    :    clusters.toArray(new    Class[clusters.size()    ]);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Class[],Collection<T#1>)	101	None	replace
153	[BUG]  [BUGGY]  AssertionError  <  Cluster>  error  :  clusters.values())  {  clusters.add(error);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  Cluster>  error  :  clusters.values())  {  clusters.add(error);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  Cluster>  error  :  clusters.values())  {  clusters.add(error);  }	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
154	[BUG]  [BUGGY]  AssertionError  <  Cluster>  error  :  clusters.values();  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  Cluster>  error  :  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  Cluster>  error  :  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
155	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.values();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
156	[BUG]  [BUGGY]  AssertionError  <  Cluster>  newClusters  =  new  AssertionError(error);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  Cluster>  newClusters  =  new  AssertionError(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  Cluster>  newClusters  =  new  AssertionError(error);	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	replace
157	[BUG]  [BUGGY]  while(clusters!=  null)  {  clusters  =  newClusters;  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  while(clusters!=  null)  {  clusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	while(clusters!=  null)  {  clusters  =  newClusters;	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
158	[BUG]  [BUGGY]  while(clusters!=  null)  {  if(clusters.size()  >  0)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  while(clusters!=  null)  {  if(clusters.size()  >  0)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	while(clusters!=  null)  {  if(clusters.size()  >  0)  {  return  this;  }	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
159	[BUG]  [BUGGY]  while(clusters!=  null)  {  if(clusters.length  ==  0)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  while(clusters!=  null)  {  if(clusters.length  ==  0)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	while(clusters!=  null)  {  if(clusters.length  ==  0)  {  return  this;  }	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
160	[BUG]  [BUGGY]  while(clusters!=  null)  {  if(clusters.length  ==  1)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  while(clusters!=  null)  {  if(clusters.length  ==  1)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	while(clusters!=  null)  {  if(clusters.length  ==  1)  {  return  this;  }	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
161	[BUG]  [BUGGY]  return(this.clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();  [CE]  cannot  find  symbol  clusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(this.clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(this.clusters  ==  null)?  null  :  new  HashMap  <  String,Object>();	  return(clusters    ==    null)?    null    :    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol  clusters	60	None	replace
162	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
163	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
164	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
165	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(clusters,  0,  points,  0,  0);  [CE]  missing  return  statement  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.arraycopy(clusters,  0,  points,  0,  0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.arraycopy(clusters,  0,  points,  0,  0);	  System.arraycopy(clusters,    0,    newClusters,    0,    0);    	non-compiled	[CE]  missing  return  statement	77	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(clusters,  0,  clusters,  0,  0);  [CE]  missing  return  statement  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.arraycopy(clusters,  0,  clusters,  0,  0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.arraycopy(clusters,  0,  clusters,  0,  0);	  System.arraycopy(clusters,    0,    newClusters,    0,    0);    	non-compiled	[CE]  missing  return  statement	77	None	replace
168	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
169	[BUG]  [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
170	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
171	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  }  [CE]  cannot  find  symbol  newClusters  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	80	None	replace
172	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	62	None	replace
173	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[this.clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	62	None	replace
174	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [CE]  ']'  expected  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
175	[BUG]  [BUGGY]  if(clusters!=  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [CE]  ']'  expected  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
176	[BUG]  [BUGGY]  if(newClusters!=  null)  {  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [CE]  ']'  expected  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
177	[BUG]  [BUGGY]  if(clusters!=  null)  {  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [CE]  ']'  expected  [FE]                      NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
178	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).    	non-compiled	[CE]  <identifier>  expected	29	None	replace
179	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).    	non-compiled	[CE]  <identifier>  expected	29	None	replace
180	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).    	non-compiled	[CE]  <identifier>  expected	29	None	replace
181	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  ')'  expected	100	None	replace
182	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
183	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
184	[BUG]  [BUGGY]  clusters  =  Collections.EMPTY_STRING;  [CE]  cannot  find  symbol  Collections  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  Collections.EMPTY_STRING;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  Collections.EMPTY_STRING;	  clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  Collections	34	None	replace
185	[BUG]  [BUGGY]  electedClusters  =  new  LinkedHashSet  <  AssertionError>();  [CE]  cannot  find  symbol  electedClusters  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  new  LinkedHashSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  new  LinkedHashSet  <  AssertionError>();	  electedClusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  electedClusters	73	None	replace
186	[BUG]  [BUGGY]  electedClusters  =  new  TreeSet  <  AssertionError>();  [CE]  cannot  find  symbol  electedClusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  new  TreeSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  new  TreeSet  <  AssertionError>();	  electedClusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  electedClusters	73	None	replace
187	[BUG]  [BUGGY]  clusters  =  Lists.emptyList();  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  Lists.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  Lists.emptyList();	  clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	1	None	replace
188	[BUG]  [BUGGY]  nes.addAll(clusters);  [CE]  cannot  find  symbol  nes  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  nes.addAll(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	nes.addAll(clusters);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol  nes	96	None	replace
189	[BUG]  [BUGGY]  clusters.addAll(errors);  [CE]  cannot  find  symbol  errors  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters.addAll(errors);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters.addAll(errors);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol  errors	96	None	replace
190	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
191	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
192	[BUG]  [BUGGY]  Cluster[]  newClusters  =  assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
193	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.assignPointsToClusters(newClusters,  points);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
194	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }	  return    null;    this.clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  newClusters	52	None	replace
195	[BUG]  [BUGGY]  if(this.clusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }  [CE]  cannot  find  symbol  clusters  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(this.clusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(this.clusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }	  return    null;    this.clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	52	None	replace
196	[BUG]  [BUGGY]  if(this.clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [CE]  cannot  find  symbol  clusters  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(this.clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(this.clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }	  return    null;    this.clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	52	None	replace
197	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    >>    '    	non-compiled	[CE]  ')'  expected	91	None	replace
198	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    +    1]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ']'  expected	63	None	replace
199	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    +    1]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    	non-compiled	[CE]  ']'  expected	113	None	replace
200	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters  =  newClusters;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  clusters.values())  {  clusters  =  newClusters;  }	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
201	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  newClusters.values();  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
202	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
203	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;  }  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  clusters.values())  {  Clusters  newClusters  =  newClusters;  }	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
204	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
205	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(0));  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(0));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(0));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
206	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  ']'  expected	64	None	replace
207	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
208	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
209	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
210	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  clusters;  }  else  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
211	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    	non-compiled	[CE]  ')'  expected	28	None	replace
212	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    	non-compiled	[CE]  ')'  expected	28	None	replace
213	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    	non-compiled	[CE]  ')'  expected	27	None	replace
214	[BUG]  [BUGGY]  Cluster[]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  variable  clusters  is  already  defined  in  method  cluster(Collection<T>,int,int)	104	None	replace
215	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
216	[BUG]  [BUGGY]  aughtExceptionHandler.handleNullPointerException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleNullPointerException( " ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleNullPointerException( " ");	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
217	[BUG]  [BUGGY]  aughtExceptionHandler.handleNullClusters(clusters);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleNullClusters(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleNullClusters(clusters);	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
218	[BUG]  [BUGGY]  electedClusters  =  clusters;  [CE]  cannot  find  symbol  electedClusters  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  clusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  clusters;	  if(clusters    ==    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	66	None	replace
219	[BUG]  [BUGGY]  clusters  =  new  ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  ArrayList  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  ArrayList  <  AssertionError>();	  clusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  incompatible  types	18	None	replace
220	[BUG]  [BUGGY]  if(clusters  ==  null)  {  clusters  =  Collections.EMPTY_LIST;  }  [CE]  cannot  find  symbol  Collections  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  clusters  =  Collections.EMPTY_LIST;  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  clusters  =  Collections.EMPTY_LIST;  }	  if(clusters    ==    null)    {    clusters    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	83	None	replace
221	[BUG]  [BUGGY]  this.clusters  =  Collections.EMPTY_CHROMES;  [CE]  cannot  find  symbol  clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Collections.EMPTY_CHROMES;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Collections.EMPTY_CHROMES;	  this.clusters    =    clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	43	None	replace
222	[BUG]  [BUGGY]  Cluster[]  newClusters  =  _clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  _clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  _clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  _clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  _clusters	89	None	replace
223	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
224	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
225	[BUG]  [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
226	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  Clusters  newClusters  =  newClusters;  newClusters  =  newClusters;  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  Clusters  newClusters  =  newClusters;  newClusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  false;  }  else  {  Clusters  newClusters  =  newClusters;  newClusters  =  newClusters;  }	  return    false;    	non-compiled	[CE]  incompatible  types	46	None	replace
227	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
228	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    >=    ')'    	non-compiled	[CE]  ')'  expected	110	None	replace
229	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    >=    ')'    	non-compiled	[CE]  ')'  expected	110	None	replace
230	[BUG]  [BUGGY]  Cluster[]  newClusters  =  cmlusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  cmlusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  cmlusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    +    1]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	63	None	replace
231	[BUG]  [BUGGY]  System.err.println( "AssertionError: "  +  clusterName);  [CE]  cannot  find  symbol  clusterName  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.err.println( "AssertionError: "  +  clusterName);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.err.println( "AssertionError: "  +  clusterName);	  System.err.println(   "AssertionError:   "    +    statement);    	non-compiled	[CE]  cannot  find  symbol  clusterName	76	None	replace
232	[BUG]  [BUGGY]  System.err.println( "AssertionError: "  +  cluster);  [CE]  cannot  find  symbol  cluster  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.err.println( "AssertionError: "  +  cluster);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.err.println( "AssertionError: "  +  cluster);	  System.err.println(   "AssertionError:   "    +    statement);    	non-compiled	[CE]  cannot  find  symbol  cluster	76	None	replace
233	[BUG]  [BUGGY]  return  Clusters.values();  [CE]  cannot  find  symbol  Clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  Clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  Clusters.values();	  return    this.clusters.values();    	non-compiled	[CE]  cannot  find  symbol  Clusters	24	None	replace
234	[BUG]  [BUGGY]  if(newClusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }	  return    null;    if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	79	None	replace
235	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }	  return    null;    if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	79	None	replace
236	[BUG]  [BUGGY]  Clusters  lusters  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  lusters  =  Collections.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  lusters  =  Collections.emptyList();	  lusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
237	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  clusters  =  newClusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  newClusters  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  clusters  =  newClusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters!=  null)  {  clusters  =  newClusters;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  newClusters	67	None	add
238	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	67	None	add
239	[BUG]  [BUGGY]  this.clusters  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  clusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Collections.EMPTYList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Collections.EMPTYList();	  this.clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  clusters	44	None	replace
240	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  error  :  newClusters.assignPointsToClusters(newClusters,  points);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  <  AssertionError>  error  :  newClusters.assignPointsToClusters(newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  <  AssertionError>  error  :  newClusters.assignPointsToClusters(newClusters,  points);	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
241	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  '  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters!=    '    	non-compiled	[CE]  ')'  expected	6	None	replace
242	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  }  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assign    	non-compiled	[CE]  ')'  expected	13	None	replace
243	[BUG]  [BUGGY]  return  Clusters.newClusters;  [CE]  cannot  find  symbol  Clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  Clusters.newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  Clusters.newClusters;	  return    this.newClusters;    	non-compiled	[CE]  cannot  find  symbol  Clusters	41	None	replace
244	[BUG]  [BUGGY]  Clusters  newClusters  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  Collections.EMPTY_LIST;	  Clusters    newClusters    =    null;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
245	[BUG]  [BUGGY]  Clusters  <  String,Object>  clusters  =  new  ArrayHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  String,Object>  clusters  =  new  ArrayHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  String,Object>  clusters  =  new  ArrayHashMap  <  String,Object>();	  Clusters    <    String,Object>    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
246	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
247	[BUG]  [BUGGY]  if(clusters  ==  null  ||  clusters.length  ==  0)  {  return  this;  }  [CE]  cannot  find  symbol  length  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null  ||  clusters.length  ==  0)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null  ||  clusters.length  ==  0)  {  return  this;  }	  return    null;    if(clusters    ==    null)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol  length	106	None	replace
248	[BUG]  [BUGGY]  assignmentPointsToClusters(clusters,  points);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  assignmentPointsToClusters(clusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	assignmentPointsToClusters(clusters,  points);	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
249	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
250	[BUG]  [BUGGY]  electedClusters  =  new  ArrayList  <  AssertionError>();  [CE]  cannot  find  symbol  electedClusters  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  new  ArrayList  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  new  ArrayList  <  AssertionError>();	  electedClusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  electedClusters	73	None	replace
251	[BUG]  [BUGGY]  vices.addAll(clusters);  [CE]  cannot  find  symbol  vices  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  vices.addAll(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	vices.addAll(clusters);	  if(clusters    ==    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  vices	48	None	replace
252	[BUG]  [BUGGY]  if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
253	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
254	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
255	[BUG]  [BUGGY]  if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newPoints!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
256	[BUG]  [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	90	None	replace
257	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
258	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsToClusters    	non-compiled	[CE]  ')'  expected	12	None	replace
259	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
260	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
261	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
262	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
263	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1)	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1)    	non-compiled	[CE]  ')'  expected	57	None	replace
264	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters.values();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters.values();  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  clusters.values();  }	  if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
265	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    ')'    	non-compiled	[CE]  ')'  expected	9	None	replace
266	[BUG]  [BUGGY]  Clusters  newClusters  =  newClusters.values();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
267	[BUG]  [BUGGY]  Clusters  newClusters  =  newClusters;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  newClusters;	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
268	[BUG]  [BUGGY]  castClusters(clusters);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  castClusters(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	castClusters(clusters);	  if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
269	[BUG]  [BUGGY]  castPoints(newClusters,  points);  [CE]  cannot  find  symbol  newClusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  castPoints(newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	castPoints(newClusters,  points);	  if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	74	None	replace
270	[BUG]  [BUGGY]  castPoints(newClusters);  [CE]  cannot  find  symbol  newClusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  castPoints(newClusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	castPoints(newClusters);	  if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	74	None	replace
271	[BUG]  [BUGGY]  electedClusters  =  Collections.emptyMap();  [CE]  cannot  find  symbol  electedClusters  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  Collections.emptyMap();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  Collections.emptyMap();	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	5	None	replace
272	[BUG]  [BUGGY]  if(newClusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  lusters    =    newClusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
273	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  [Delete]  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	[Delete]	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
274	[BUG]  [BUGGY]  cast(clusters);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  cast(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	cast(clusters);	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
275	[BUG]  [BUGGY]  cast(clusters,  null);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  cast(clusters,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	cast(clusters,  null);	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
276	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  >>  return  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  >>  return  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  >>  return	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
277	[BUG]  [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  return  null;  }  else  {  this.clusters  =  newClusters;  }	  return    null;    this.clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  newClusters	52	None	replace
278	[BUG]  [BUGGY]  Clusters  newClusters  =  getClusters();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  getClusters();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  getClusters();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
279	[BUG]  [BUGGY]  Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsToClusters    	non-compiled	[CE]  ')'  expected	114	None	replace
280	[BUG]  [BUGGY]  aught(clusters!=  null)  {  return  this;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aught(clusters!=  null)  {  return  this;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aught(clusters!=  null)  {  return  this;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
281	[BUG]  [BUGGY]  electedClusters  =  clusters.get(0);  [CE]  cannot  find  symbol  electedClusters  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  clusters.get(0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  clusters.get(0);	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	65	None	replace
282	[BUG]  [BUGGY]  AssertionError  error  :  clusters.keySet();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  :  clusters.keySet();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  :  clusters.keySet();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  ';'  expected	95	None	replace
283	[BUG]  [BUGGY]  AssertionError  error  =  new  AssertionError(clusters.keySet());  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  =  new  AssertionError(clusters.keySet());  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  =  new  AssertionError(clusters.keySet());	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
284	[BUG]  [BUGGY]  Clusters  clusters  =  newClusters.emptyList();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  newClusters.emptyList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  newClusters.emptyList();	  Clusters    clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
285	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
286	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clustersToClusters(i,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clustersToClusters(i,    points);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
287	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    +    1]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  ']'  expected	55	None	replace
288	[BUG]  [BUGGY]  return  clusters.values(),  newPoints);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  clusters.values(),  newPoints);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  clusters.values(),  newPoints);	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
289	[BUG]  [BUGGY]  return  newClusters.values(),  points);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return  newClusters.values(),  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  newClusters.values(),  points);	  return    clusters.values(),    points);    	non-compiled	[CE]  ';'  expected	25	None	replace
290	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.values();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
291	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =  clusters.values();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
292	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)this.clusters.values();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)this.clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)this.clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
293	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.get(error);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =(AssertionError  <  AssertionError>)clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
294	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.length  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.length  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.length  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
295	[BUG]  [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  newClusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	54	None	replace
296	[BUG]  [BUGGY]  lusters  =  Clusters.EMPTY_LIST;  [CE]  cannot  find  symbol  lusters  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  lusters  =  Clusters.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	lusters  =  Clusters.EMPTY_LIST;	  lusters    =    Clusters.emptyList();    	non-compiled	[CE]  cannot  find  symbol  lusters	115	None	replace
297	[BUG]  [BUGGY]  AssertionError  error  :  newClusters.values();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  :  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  :  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
298	[BUG]  [BUGGY]  AssertionError  error  :  newClusters.assignPointsToClusters(newClusters,  points);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  AssertionError  error  :  newClusters.assignPointsToClusters(newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	AssertionError  error  :  newClusters.assignPointsToClusters(newClusters,  points);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
299	[BUG]  [BUGGY]  if(clusters!=  null  ||  clusters.length  ==  0)  {  return  this;  }  [CE]  cannot  find  symbol  length  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null  ||  clusters.length  ==  0)  {  return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null  ||  clusters.length  ==  0)  {  return  this;  }	  return    null;    if(clusters!=    null)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol  length	107	None	replace
300	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).as  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).as    	non-compiled	[CE]  ')'  expected	10	None	replace
301	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }	  return    null;    if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
302	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
303	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
304	[BUG]  [BUGGY]  Cluster[]  newClusters  =  getClusters();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  getClusters();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  getClusters();	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
305	[BUG]  [BUGGY]  Clusters  clusters  =  new  ArrayHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  ArrayHashMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  ArrayHashMap  <  String,Object>();	  Clusters    clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
306	[BUG]  [BUGGY]  electedClusters  =  null;  [CE]  cannot  find  symbol  electedClusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  null;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  null;	  if(clusters!=    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	47	None	replace
307	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	62	None	replace
308	[BUG]  [BUGGY]  return(this.clusters!=  null)?  null  :  newClusters;  [CE]  cannot  find  symbol  clusters  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(this.clusters!=  null)?  null  :  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(this.clusters!=  null)?  null  :  newClusters;	  return(this.clusters!=    null)?    null    :    this.clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	58	None	replace
309	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [CE]  ']'  expected  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
310	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [CE]  ']'  expected  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
311	[BUG]  [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  Clusters[i]  =  newClusters[points.get(i);  }  [CE]  ']'  expected  [FE]                    NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  Clusters[i]  =  newClusters[points.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  Clusters[i]  =  newClusters[points.get(i);  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
312	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).as  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).as  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).as	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).as    	non-compiled	[CE]  ')'  expected	10	None	replace
313	[BUG]  [BUGGY]  Clusters[]  newClusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters[]  newClusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters[]  newClusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Clusters[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  ')'  expected	90	None	replace
314	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  true;  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  true;  }	  if(clusters!=    null)    {    return    true;    }    	non-compiled	[CE]  incompatible  types	111	None	replace
315	[BUG]  [BUGGY]  Set  <  AssertionError>  clusters  =  new  HashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Set  <  AssertionError>  clusters  =  new  HashSet  <  AssertionError>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Set  <  AssertionError>  clusters  =  new  HashSet  <  AssertionError>();	  electedClusters    =    new    HashSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
316	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
317	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
318	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i].assignPointsToClusters(newClusters,  points);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i].assignPointsToClusters(newClusters,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[i].assignPointsToClusters(newClusters,  points);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
319	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newPoints[i];  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newPoints[i];  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newPoints[i];  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters    =    newClusters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
320	[BUG]  [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
321	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
322	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [CE]  ']'  expected  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(points!=  null)  {  for(int  i  =  0;  i  <  newClusters.size();  i++)  {  clusters[i]  =  newClusters[points.get(i);  }	  return    null;    if(clusters!=    null)    {    for(int    i    =    0;    i    <    newClusters.size();    i++)    {    clusters[i]    =    newClusters[points.get(i);    }    	non-compiled	[CE]  ']'  expected	53	None	replace
323	[BUG]  [BUGGY]  return(clusters  ==  null)?  new  HashMap  <  Integer,Object>()  :  new  HashMap  <  Integer,Object>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  new  HashMap  <  Integer,Object>()  :  new  HashMap  <  Integer,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  new  HashMap  <  Integer,Object>()  :  new  HashMap  <  Integer,Object>();	  return(clusters!=    null)?    null    :    new    HashMap    <    Integer,Object>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
324	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    	non-compiled	[CE]  incompatible  types	46	None	replace
325	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  false;  }  else  {  throw  new  IllegalStateException( " ");  }	  return    false;    	non-compiled	[CE]  incompatible  types	46	None	replace
326	[BUG]  [BUGGY]  if(clusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  lusters  =  newClusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  lusters    =    newClusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
327	[BUG]  [BUGGY]  if(clusters!=  null)  {  lusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  lusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  lusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  lusters    =    newClusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
328	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =  newClusters;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =  newClusters;	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
329	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =  assignPointsToClusters(newClusters,  points);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =  assignPointsToClusters(newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =  assignPointsToClusters(newClusters,  points);	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
330	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  newClusters;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  newClusters;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  newClusters;	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
331	[BUG]  [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);	  return(clusters    ==    null)?    null    :    clusters.toArray(new    Class[clusters.size()    ]);    	non-compiled	[CE]  incompatible  types	101	None	replace
332	[BUG]  [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.values();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  Node>  newClusters  =  clusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
333	[BUG]  [BUGGY]  Clusters  <  Class  <?>  newClusters  =  newClusters.values();  [CE]  >  expected  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  Class  <?>  newClusters  =  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  Class  <?>  newClusters  =  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    Cluster>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  >  expected	40	None	replace
334	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  clusters	88	None	replace
335	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsTo	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assignPointsTo    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
336	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	65	None	replace
337	[BUG]  [BUGGY]  electedClusters  =  clusters.iterator().next();  [CE]  cannot  find  symbol  electedClusters  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  electedClusters  =  clusters.iterator().next();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	electedClusters  =  clusters.iterator().next();	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  electedClusters	65	None	replace
338	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingClass(clusters);	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	65	None	replace
339	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(clusters,  null);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingName(clusters,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingName(clusters,  null);	  if(clusters!=    null)    {    return    this;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	65	None	replace
340	[BUG]  [BUGGY]  if(clusters!=  null)return  this;  }  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)return  this;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)return  this;  }	  return    null;    if(clusters!=    null)    {    return    this;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
341	[BUG]  [BUGGY]  if(clusters!=  null)  {  return;  }  else  {  clusters  =  newClusters;  }  [CE]  missing  return  value  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return;  }  else  {  clusters  =  newClusters;  }	  return    null;    if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  missing  return  value	51	None	replace
342	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  newPoints.size();  ++i)  {  Clusters.add(newPoints[i]);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newPoints.size();    ++i)    {    clusters.add(newPoints[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
343	[BUG]  [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters,  points);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters,  points);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
344	[BUG]  [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(clusters,  points);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(clusters,  points);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  newClusters.assignPointsToClusters(clusters,  points);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
345	[BUG]  [BUGGY]  Clusters  <  N,  V>  newClusters  =  newClusters.values();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  N,  V>  newClusters  =  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  N,  V>  newClusters  =  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
346	[BUG]  [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =  newClusters.assignPointsToClusters(newClusters);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
347	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(clusters);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(clusters);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(clusters);	  Clusters    <    AssertionError>    clusters    =    new    TreeSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
348	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(this);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(this);	  Clusters    <    AssertionError>    clusters    =    new    TreeSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
349	[BUG]  [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(8);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(8);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  clusters  =  new  TreeSet  <  AssertionError>(8);	  Clusters    <    AssertionError>    clusters    =    new    TreeSet    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
350	[BUG]  [BUGGY]  because(clusters  ==  null)  {  clusters  =  newClusters;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  because(clusters  ==  null)  {  clusters  =  newClusters;  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	because(clusters  ==  null)  {  clusters  =  newClusters;  }	  if(clusters    ==    null)    {    clusters    =    newClusters;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
351	[BUG]  [BUGGY]  Clusters  clusters  =  Collections.emptyList(clusters);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  Collections.emptyList(clusters);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  Collections.emptyList(clusters);	  Clusters    clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
352	[BUG]  [BUGGY]  Clusters  clusters  =  Collections.emptyArrayList();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  Collections.emptyArrayList();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  Collections.emptyArrayList();	  Clusters    clusters    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
353	[BUG]  [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    }    	non-compiled	[CE]  ')'  expected	85	None	replace
354	[BUG]  [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    }    	non-compiled	[CE]  ')'  expected	85	None	replace
355	[BUG]  [BUGGY]  Clusters  clusters  =  new  HashMap(System.identityHashCode(clusters));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  clusters  =  new  HashMap(System.identityHashCode(clusters));  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  clusters  =  new  HashMap(System.identityHashCode(clusters));	  Clusters    clusters    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
356	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  +  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    >=    ')'    	non-compiled	[CE]  ')'  expected	110	None	replace
357	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >  ')'  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  >  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    >=    ')'    	non-compiled	[CE]  ')'  expected	110	None	replace
358	[BUG]  [BUGGY]  this.clusters  =  Arrays.copyOf(clusters);  [CE]  cannot  find  symbol  clusters  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Arrays.copyOf(clusters);  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Arrays.copyOf(clusters);	  this.clusters    =    clusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	43	None	replace
359	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
360	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  return  clusters;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  return  clusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  return  clusters;  }	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
361	[BUG]  [BUGGY]  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  {  throw  new  IllegalArgumentException( " ");  }	  if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
362	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).asS  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).asS  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(0).asS	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    >>    '    	non-compiled	[CE]  ')'  expected	91	None	replace
363	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  newClusters;  }	  if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
364	[BUG]  [BUGGY]  if(clusters  ==  null)return  null;  }  else  {  clusters  =  newClusters;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)return  null;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)return  null;  }  else  {  clusters  =  newClusters;  }	  if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
365	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return;  }  else  {  clusters  =  newClusters;  }  [CE]  missing  return  value  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return;  }  else  {  clusters  =  newClusters;  }	  if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  missing  return  value	4	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  cannot  find  symbol  newClusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	104	None	replace
367	[BUG]  [BUGGY]  }  else  if(newClusters.size()  >  0)  {  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(newClusters.size()  >  0)  {  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(newClusters.size()  >  0)  {  Cluster[]  clusters  =  new  Cluster[clusters.size()  ];  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }	  Cluster[]    clusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i    +    1));    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
368	[BUG]  [BUGGY]  }  else  if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
369	[BUG]  [BUGGY]  if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(this.clusters!=  null)  {  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    this.clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	62	None	replace
370	[BUG]  [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  clusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  for(int  i  =  0;  i  <  clusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  for(int  i  =  0;  i  <  clusters.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
371	[BUG]  [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  points.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  for(int  i  =  0;  i  <  points.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  for(int  i  =  0;  i  <  points.size();  ++i)  {  ClusterTraversal.traverse(compiler,  this);  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    ClusterTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
372	[BUG]  [BUGGY]  if(clusters  ==  null  ||  newClusters  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  newClusters  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null  ||  newClusters  ==  null)  {  return  null;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null  ||  newClusters  ==  null)  {  return  null;  }	  return    null;    if(clusters    ==    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  newClusters	50	None	replace
373	[BUG]  [BUGGY]  Clusters  {  new  HashSet  <  AssertionError>();  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  {  new  HashSet  <  AssertionError>();  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  {  new  HashSet  <  AssertionError>();  }	  if(clusters    ==    null)    {    clusters    =    new    HashSet    <    AssertionError>();    }    	non-compiled	[CE]  not  a  statement	70	None	replace
374	[BUG]  [BUGGY]  clusters  =  new  TreeMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  clusters  =  new  TreeMap  <  String,Object>();  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	clusters  =  new  TreeMap  <  String,Object>();	  clusters    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
375	[BUG]  [BUGGY]  if(clusters!=  null)return  null;  [CE]  missing  return  statement  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)return  null;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)return  null;	  if(clusters    ==    null)return    null;    if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  missing  return  statement	97	None	replace
376	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
377	[BUG]  [BUGGY]  }  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
378	[BUG]  [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  [CE]  cannot  find  symbol  newClusters  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol  newClusters	37	None	replace
379	[BUG]  [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  clusters  =  newClusters;  }	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol  newClusters	37	None	replace
380	[BUG]  [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newClusters  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters!=  null)  {  assignPointsToClusters(newClusters,  points);  }  else  {  throw  new  IllegalStateException( " ");  }	  assignPointsToClusters(newClusters,    points);    	non-compiled	[CE]  cannot  find  symbol  newClusters	37	None	replace
381	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  clusters  =  newClusters;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  clusters  =  newClusters;  }	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
382	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  clusters  =  newClusters;  }	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
383	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  Clusters  newClusters  =  newClusters;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  Clusters  newClusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  Clusters  newClusters  =  newClusters;  }	  }    else    if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
384	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    '    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
385	[BUG]  [BUGGY]  }  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  ==  1)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  }  '	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    }    '    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
386	[BUG]  [BUGGY]  Clusters  newClusters  =(Clusters)this.clusters.clone();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =(Clusters)this.clusters.clone();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =(Clusters)this.clusters.clone();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
387	[BUG]  [BUGGY]  Clusters  newClusters  =(Clusters)this.clusters.get(error);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =(Clusters)this.clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =(Clusters)this.clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
388	[BUG]  [BUGGY]  Clusters  newClusters  =(Clusters)clusters.clone();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  newClusters  =(Clusters)clusters.clone();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  newClusters  =(Clusters)clusters.clone();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.values())    {    clusters.addAll(errors);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
389	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  new  HashMap();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  new  HashMap();  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  new  HashMap();  }	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
390	[BUG]  [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  new  HashMap();  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  new  HashMap();  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)  {  return  null;  }  else  {  Clusters  newClusters  =  new  HashMap();  }	  if(clusters!=    null)    {    return    null;    }    else    {    clusters    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
391	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]    AssertionError    [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=    null)    {    return    clusters;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(clusters!=  null)  {  return  clusters;  }  else  {  throw  new  IllegalArgumentException( " "));  }	  	non-compiled	[CE]  	67	None	add
392	[BUG]  [BUGGY]  }  else  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters  ==  null)  {  return  null;  }  else  {  clusters  =  newClusters;  }	  return    null;    if(clusters    ==    null)    {    return    null;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
393	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assign	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).assign    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
394	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
395	[BUG]  [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
396	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
397	[BUG]  [BUGGY]  return(clusters  ==  null)?  new  HashMap  <  String,Object>()  :  new  HashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters  ==  null)?  new  HashMap  <  String,Object>()  :  new  HashMap  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters  ==  null)?  new  HashMap  <  String,Object>()  :  new  HashMap  <  String,Object>();	  return(clusters    ==    null)?    null    :    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
398	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters!=  ')'  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters!=  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters!=  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters!=    ')'    	non-compiled	[CE]  ')'  expected	7	None	replace
399	[BUG]  [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  this.clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  }  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters!=    ')'    	non-compiled	[CE]  ')'  expected	7	None	replace
400	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingCluster(clusters,  false);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingCluster(clusters,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingCluster(clusters,  false);	  if(clusters    ==    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	48	None	replace
401	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters,  false);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingClass(clusters,  false);	  if(clusters    ==    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	48	None	replace
402	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters,  null);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  aughtExceptionHandler.handleMissingClass(clusters,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	aughtExceptionHandler.handleMissingClass(clusters,  null);	  if(clusters    ==    null)    {    return    false;    }    else    {    clusters    =    newClusters;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	48	None	replace
403	[BUG]  [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  -  1]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  ==  ')'	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters    ==    ')'    	non-compiled	[CE]  ')'  expected	9	None	replace
404	[BUG]  [BUGGY]  System.err.println( "AssertionError: "  +  asStatement);  [CE]  cannot  find  symbol  asStatement  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  System.err.println( "AssertionError: "  +  asStatement);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	System.err.println( "AssertionError: "  +  asStatement);	  System.err.println(   "AssertionError:   "    +    statement);    	non-compiled	[CE]  cannot  find  symbol  asStatement	76	None	replace
405	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i).asS    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
406	[BUG]  [BUGGY]  lusters!=  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  lusters!=  null;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	lusters!=  null;	  if(clusters!=    null)    {    clusters    =    newClusters;    }    else    {    assignPointsToClusters(newClusters,    points);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
407	[BUG]  [BUGGY]  if(clusters  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters  ==  null)return  false;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters  ==  null)return  false;  }	  if(clusters!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
408	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [CE]  cannot  find  symbol  clusters  [FE]              NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  null;  this.clusters  =  newClusters;  }	  return    null;    this.clusters    =    newClusters;    	non-compiled	[CE]  cannot  find  symbol  clusters	52	None	replace
409	[BUG]  [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(newClusters  ==  null)  {  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  }	  return    null;    if(clusters    ==    null)    {    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	105	None	replace
410	[BUG]  [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.isEmpty())  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
411	[BUG]  [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters.size()  >  0)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  }    else    if(clusters!=    null)    {    Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
412	[BUG]  [BUGGY]  Clusters  <  N,  V>  newClusters  =  clusters.keySet();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  N,  V>  newClusters  =  clusters.keySet();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  N,  V>  newClusters  =  clusters.keySet();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
413	[BUG]  [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.keySet();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.keySet();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  Node>  newClusters  =  clusters.keySet();	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
414	[BUG]  [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.get(error);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  Node>  newClusters  =  clusters.get(error);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  Node>  newClusters  =  clusters.get(error);	  if(clusters!=    null)    {    for(AssertionError    error    :    clusters.keySet())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
415	[BUG]  [BUGGY]  if(clusters!=  null)  {  return  Clusters.EMPTY;  }  [CE]  cannot  find  symbol  Clusters  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  return  Clusters.EMPTY;  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  return  Clusters.EMPTY;  }	  if(clusters!=    null)    {    return    clusters;    }    	non-compiled	[CE]  cannot  find  symbol  Clusters	82	None	replace
416	[BUG]  [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
417	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[0]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
418	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[0]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.add(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
419	[BUG]  [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return(clusters!=  null)?  null  :  clusters.toArray(new  Class[clusters.size()  -  1]);	  return(clusters!=    null)?    null    :    clusters.toArray(new    Class[clusters.size()    ]);    	non-compiled	[CE]  incompatible  types	102	None	replace
420	[BUG]  [BUGGY]  this.clusters  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  clusters  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  this.clusters  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	this.clusters  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.clusters    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  clusters	45	None	replace
421	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =  newClusters.values();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =  newClusters.values();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =  newClusters.values();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
422	[BUG]  [BUGGY]  Clusters  <  AssertionError>  newClusters  =  getClusters();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  Clusters  <  AssertionError>  newClusters  =  getClusters();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	Clusters  <  AssertionError>  newClusters  =  getClusters();	  if(clusters!=    null)    {    for(AssertionError    <    AssertionError>    error    :    clusters.values())    {    clusters.add(error);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
423	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	add	throw  new  IllegalArgumentException( " ");	  return    null;    if(clusters!=    null)    {    return    null;    }    	compilable	  [FE]  IllegalArgumentException  	49	3	replace
424	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]        NullPointerException      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	throw  new  IllegalArgumentException( " ");	  return    null;    if(clusters!=    null)    {    return    null;    }    	compilable	  [FE]  IllegalArgumentException  	49	3	replace
425	[BUG]  [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
426	[BUG]  [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }      [BUGGY]  }  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }  [BUGGY]      return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	}  else  if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.remove(newClusters.get(i);  }	  Cluster[]    newClusters    =    clusters.toArray(new    Cluster[clusters.size()    ]);    for(int    i    =    0;    i    <    newClusters.size();    ++i)    {    clusters.remove(newClusters.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
