bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  random);	  this(random,    EmptyClusterStrategy.LARGEST_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  false);	  this(random,    EmptyClusterStrategy.LARGEST_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
3	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  0);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  0);	  this(random,    EmptyClusterStrategy.LARGEST_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
4	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	57	None	replace
11	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	57	None	replace
12	[BUG]  [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  not  a  statement	22	None	replace
13	[BUG]  [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  not  a  statement	22	None	replace
14	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	60	None	replace
15	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  this);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random),  this);	  mutators.add(new    KMeansPlusPlusClusterer(random));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE));	  mutators.add(new    KMeansPlusPlusClusterer(random));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random),  false);	  mutators.add(new    KMeansPlusPlusClusterer(random));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  mutableValues  =  new  ArrayList  <  Random>();  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutableValues  =  new  ArrayList  <  Random>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutableValues  =  new  ArrayList  <  Random>();	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
22	[BUG]  [BUGGY]  mutableValues  =  random.nextValue();  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutableValues  =  random.nextValue();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutableValues  =  random.nextValue();	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  mutator!=  null?  null  :  random.mutator();  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator!=  null?  null  :  random.mutator();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator!=  null?  null  :  random.mutator();	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
24	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  false);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  null);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  false);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  1);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
30	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  2);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  2);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
31	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  3);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  3);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
32	[BUG]  [BUGGY]  Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(Random.class)))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	25	None	replace
33	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	67	None	replace
34	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  random);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
35	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  null);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  null);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
36	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  false);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
37	[BUG]  [BUGGY]  MutatorUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutatorUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutatorUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    RandomUtils.isEmpty(random))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	47	None	replace
38	[BUG]  [BUGGY]  mutator!=  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator!=  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator!=  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    RandomUtils.isEmpty(random))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	47	None	replace
39	[BUG]  [BUGGY]  mutator  ==  null  ||  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null  ||  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  ||  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    RandomUtils.isEmpty(random))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	47	None	replace
40	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  new  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  '('  or  '['  expected  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random),  new  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random),  new  EmptyClusterStrategy.LARGEST_VARIANCE);	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    	non-compiled	[CE]  '('  or  '['  expected	84	None	replace
41	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  false);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  false);	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
42	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  random);  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  random);	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
43	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  this);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    null);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    null);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(this);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(this);	  KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
46	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(null,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(null,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(null,  random);	  KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
47	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(null,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(null,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(null,  null);	  KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
48	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	  this.random    =    Random.createInstance(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
49	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	  this.random    =    Random.createInstance(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
50	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);	  this.random    =    Random.createInstance(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
51	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);	  this.random    =    Random.createInstance(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
52	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  0);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  2);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  2);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  random,  false);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KEY_SECOND);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KEY_SECOND);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  KEY_SECOND);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlus(random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlus(random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlus(random);	  this.clusters    =    new    KMeansPlus();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
57	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  this.clusters    =    new    KMeansPlus();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	21	3	add
59	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	21	3	add
60	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	21	None	add
61	[BUG]  [BUGGY]  mutators  =  new  LinkedList  <  String>();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators  =  new  LinkedList  <  String>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators  =  new  LinkedList  <  String>();	  mutators    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
62	[BUG]  [BUGGY]  mutator!=  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator!=  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator!=  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	46	None	replace
63	[BUG]  [BUGGY]  mutator  ==  null  ||  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null  ||  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  ||  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	46	None	replace
64	[BUG]  [BUGGY]  Mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");	  mutators.add(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
65	[BUG]  [BUGGY]  mutators.add( "KMeansPlusPlusClusterer()  is  not  an  exception. ");  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add( "KMeansPlusPlusClusterer()  is  not  an  exception. ");  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add( "KMeansPlusPlusClusterer()  is  not  an  exception. ");	  mutators.add(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
66	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random.class);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
67	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  new  Random(random));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  new  Random(random));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  new  Random(random));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
68	[BUG]  [BUGGY]  Mutators.add(new  KMeansPlusPlusClusterer());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutators.add(new  KMeansPlusPlusClusterer());  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutators.add(new  KMeansPlusPlusClusterer());	  mutators.add(new    KMeansPlusPlusClusterer());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
69	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(),  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(),  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(),  random);	  mutators.add(new    KMeansPlusPlusClusterer());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
70	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansplusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	86	None	replace
71	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansplusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	85	None	replace
72	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  -  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  -  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  -  1));	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
76	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()  +  1));	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
77	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  0);	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
78	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	83	None	add
79	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	83	None	add
80	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
81	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  true);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  true);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
82	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random.type);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random.type);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random.type);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
83	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  this);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    null);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
84	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null,  random);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    null);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
85	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  1);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
86	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  2);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  2);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
87	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  null);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
88	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
89	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
90	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  2));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  2));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  -  2));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
91	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
93	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
95	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
96	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
97	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.asList()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.asList()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.asList()));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random),  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random),  false);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
100	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
101	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
102	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
103	[BUG]  [BUGGY]  safeInit(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeInit(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeInit(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  	55	None	replace
104	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    NUMBER_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
105	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  Random.valueOf(random.getValue()));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    NUMBER_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
106	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
108	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(null,  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(this);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(this);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(this);	  this.clusters    =    new    KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
111	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  null);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(null,  null);	  this.clusters    =    new    KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random.. ");  }  [CE]  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random.. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random.. ");  }	  MutableMeansPlusPlusClusterer()    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	73	None	replace
113	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.class,  random);	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
114	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.type);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.type);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.type);	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
115	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.getValueType());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.getValueType());  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.class,  random.getValueType());	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer();	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
117	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer(random);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer(random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  new  MutableMeansPlusPlusClusterer(random);	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
118	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.NONE;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.NONE;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.NONE;	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
119	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
120	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  random);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
121	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  false);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
122	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.class);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
123	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
124	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
125	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  this);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
126	[BUG]  [BUGGY]  this.clusters  =  new  KMeansplus();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansplus();  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansplus();	  this.clusters    =    new    KMeansplusPlus();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
127	[BUG]  [BUGGY]  this.clusters  =  new  KMeansplus(random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansplus(random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansplus(random);	  this.clusters    =    new    KMeansplusPlus();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  this.clusters  =  new  KMeansplusClusterer();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansplusClusterer();  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansplusClusterer();	  this.clusters    =    new    KMeansplusPlus();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
129	[BUG]  [BUGGY]  Mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");	  mutators.add(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
130	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.GREGOR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
131	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR,  false);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.GREGOR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
132	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(this.random,  EmptyClusterStrategy.GREGOR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(this.random,  EmptyClusterStrategy.GREGOR);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(this.random,  EmptyClusterStrategy.GREGOR);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.GREGOR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
133	[BUG]  [BUGGY]  MutableClusterStrategy.notEmpty(random);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableClusterStrategy.notEmpty(random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableClusterStrategy.notEmpty(random);	  MutableClusterStrategy.notNull(random);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
134	[BUG]  [BUGGY]  MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  MutableClusterStrategy.notNull(random);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
135	[BUG]  [BUGGY]  MutableClusterStrategy.notNull(this);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableClusterStrategy.notNull(this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableClusterStrategy.notNull(this);	  MutableClusterStrategy.notNull(random);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
136	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	61	None	replace
137	[BUG]  [BUGGY]  mutators  =  new  ArrayList  <  String,Object>();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators  =  new  ArrayList  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators  =  new  ArrayList  <  String,Object>();	  mutators    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
138	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
139	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  false);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
140	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
141	[BUG]  [BUGGY]  this.random  =  random.nextDouble()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  random.nextDouble()  +  1;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  random.nextDouble()  +  1;	  this.random    =    random.nextDouble();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
142	[BUG]  [BUGGY]  this.random  =  random.nextDouble()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  random.nextDouble()  -  1;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  random.nextDouble()  -  1;	  this.random    =    random.nextDouble();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
143	[BUG]  [BUGGY]  this.random  =  random.nextDouble()  /  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  random.nextDouble()  /  2;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  random.nextDouble()  /  2;	  this.random    =    random.nextDouble();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
144	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
145	[BUG]  [BUGGY]  this.parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
146	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
147	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
148	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
149	[BUG]  [BUGGY]  mutableValues  =  new  LinkedHashMap  <  String,Object>();  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutableValues  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutableValues  =  new  LinkedHashMap  <  String,Object>();	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
150	[BUG]  [BUGGY]  this.random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  this.random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
151	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  true);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
152	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    false);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
153	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  +  1));	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
154	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getKey()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getKey()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getKey()));	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
155	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  false);	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
156	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  false);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
157	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  0);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  0);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
158	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  1);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
159	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  random);	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
160	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  false);	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
161	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  0);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  0);	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
162	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  true);	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
163	[BUG]  [BUGGY]  this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  EmptyClusterStrategy.LARGEST_VARIANCE;	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
164	[BUG]  [BUGGY]  this.random  =  Random.valueOf(random);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.valueOf(random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.valueOf(random);	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
165	[BUG]  [BUGGY]  this.random  =  EmptyClusterStrategy.NONE;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  EmptyClusterStrategy.NONE;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  EmptyClusterStrategy.NONE;	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
166	[BUG]  [BUGGY]  this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy>();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy>();  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy>();	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
167	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  this);	  super(random,    EmptyClusterStrategy.NONE,    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  null,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  null,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  null,  random);	  super(random,    EmptyClusterStrategy.NONE,    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	3	add
170	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	3	add
171	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	10	None	add
172	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	19	3	add
173	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	19	3	add
174	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	19	None	add
175	[BUG]  [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
176	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  random);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
177	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  null);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  null);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
178	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  false);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  false);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
179	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  Random.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  Random.class);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
180	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
181	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  -  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  -  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
182	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()),  random);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
183	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);	  this.random    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
184	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	62	None	add
185	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	62	None	add
186	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }	  	compilable	  [FE]  IllegalArgumentException  	62	3	add
187	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }	  	compilable	  [FE]  IllegalArgumentException  	62	3	add
188	[BUG]  [BUGGY]  Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutator  <?>mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	24	None	replace
189	[BUG]  [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( "_ ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( "_ ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&(random!=  null  ||  random.equals( "_ ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
190	[BUG]  [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  initialized. ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  initialized. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  initialized. ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
191	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	8	3	add
192	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	8	3	add
193	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	8	None	add
194	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getKey()));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
195	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.class);	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
196	[BUG]  [BUGGY]  Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals( "   ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	24	None	replace
197	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0,  random);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0,  random);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
198	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	66	None	replace
199	[BUG]  [BUGGY]  this(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  this.random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	6	None	replace
200	[BUG]  [BUGGY]  this(random  }  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random  }  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random  }  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  this.random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	6	None	replace
201	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
202	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC  +  1);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC  +  1);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
203	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	3	add
204	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	3	add
205	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.	  	non-compiled	[CE]  unclosed  string  literal	10	None	add
206	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusClusterer.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusClusterer.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusClusterer.class);	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
207	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPrettyPrinter.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPrettyPrinter.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPrettyPrinter.class);	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
208	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(this));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(this));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(this));	  mutators.add(new    KMeansPlusPlusClusterer());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
209	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  	54	None	replace
210	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.LARGEST_VARIANCE);	  this.clusters    =    new    KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
211	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_VARIANCE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_VARIANCE);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_VARIANCE);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.GREGOR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
212	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_SYNTHETIC);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR_SYNTHETIC);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.GREGOR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
213	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	56	None	replace
214	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
215	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer();	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
216	[BUG]  [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized. ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized. ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
217	[BUG]  [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer  is  not  initialized. ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer  is  not  initialized. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer  is  not  initialized. ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
218	[BUG]  [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  not  be  initialized ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
219	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random)+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random)+  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random)+  1);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
220	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  +  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
221	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random.valueOf(random));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random.valueOf(random));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random.valueOf(random));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
222	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  2));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  2));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()  +  2));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
223	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class,  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class,  random);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
224	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()),  random);	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
225	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  1);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
226	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPlusClusterer.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPlusClusterer.DEFAULT);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  KMeansPlusPlusPlusClusterer.DEFAULT);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
227	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(0));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(0));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
228	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	68	None	replace
229	[BUG]  [BUGGY]  this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy.LARGEST_VARIANCE;  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy.LARGEST_VARIANCE;  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  HashMap  <  Random,  EmptyClusterStrategy.LARGEST_VARIANCE;	  this.random    =    random;    	non-compiled	[CE]  >  expected	28	None	replace
230	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	59	None	replace
231	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE);	  this.random    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
232	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  2);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  2);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
233	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.       ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  	53	None	replace
234	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [CE]  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.       ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  	53	None	replace
235	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC  +  1);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC  +  1);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
236	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(null,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(null,  false);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(null,  false);	  KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
237	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE_VARIANCE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE_VARIANCE);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE_VARIANCE);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
238	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE),  random);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE),  random);	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  ';'  expected	4	None	replace
239	[BUG]  [BUGGY]  Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutator  <  Object>  mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(Random.class)))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	25	None	replace
240	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class,  random);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
241	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.RANGE_VARIANCE,  Random.class);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
242	[BUG]  [BUGGY]  MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.NONE);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.NONE);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableClusterStrategy.notNull(random,  EmptyClusterStrategy.NONE);	  MutableClusterStrategy.notNull(random);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
243	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
244	[BUG]  [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAccess(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  	55	None	replace
245	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE));	  mutators.add(new    KMeansPlusPlusClusterer(random));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
246	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  -  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()  -  1));	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
247	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE_VARIANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE_VARIANCE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE_VARIANCE);	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
248	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()  +  1));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
249	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  null);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
250	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  KMeansPlusPlusPlusClusterer);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  KMeansPlusPlusPlusClusterer);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random,  KMeansPlusPlusPlusClusterer);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
251	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	58	None	replace
252	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  KMeansPlusPlusPlusClusterer.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class,  KMeansPlusPlusPlusClusterer.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.class,  KMeansPlusPlusPlusClusterer.class);	  super(random,    EmptyClusterStrategy.NONE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
253	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
254	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
255	[BUG]  [BUGGY]  safeMultiply(random.nextToken())  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeMultiply(random.nextToken())  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random.nextToken())  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    	non-compiled	[CE]  	84	None	replace
256	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  1);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
257	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  this);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random,  this);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE,    random);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
258	[BUG]  [BUGGY]  }  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  }  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	}  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
259	[BUG]  [BUGGY]  }  else  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  }  else  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	}  else  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
260	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	66	None	replace
261	[BUG]  [BUGGY]  mutators.add( "KMeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add( "KMeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add( "KMeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");	  mutators.add(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
262	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer(random);  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer(random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  new  KMeansPlusPlusClusterer(random);	  MutableMeansPlusPlusClusterer.this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
263	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
264	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  new  Object[]  {  }  );  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  new  Object[]  {  }  );  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  new  Object[]  {  }  );	  super(random,    EmptyClusterStrategy.NONE,    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
265	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.NONE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.NONE);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(null,  EmptyClusterStrategy.NONE);	  this.clusters    =    new    KMeansPlusPlusClusterer(null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
266	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansplusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	85	None	replace
267	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  -  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  -  1));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random  -  1));	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
268	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random));    	non-compiled	[CE]  ')'  expected	50	None	replace
269	[BUG]  [BUGGY]  this.clusters  =  new  KMeansplusPlus(random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansplusPlus(random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansplusPlus(random);	  this.clusters    =    new    KMeansplusPlus();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
270	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
271	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
272	[BUG]  [BUGGY]  this.random  =  new  Random();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  Random();  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  Random();	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
273	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  Random.createInstance(random);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random);	  this.random    =    random;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
274	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  null);  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  null);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE),  null);	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
275	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
276	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
277	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
278	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
279	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.ALWAYS_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.ALWAYS_VARIANCE,  Random.class);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.ALWAYS_VARIANCE,  Random.class);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.class);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
280	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized  with  random. ");  }	  MutableMeansPlusPlusClusterer()    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	73	None	replace
281	[BUG]  [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safe(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  safeGet(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	59	None	replace
282	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
283	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
284	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
285	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  1);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random,  1);	  KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
286	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC,  Random.valueOf(random.getValue()));	  this(random,    EmptyClusterStrategy.LARGEST_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
287	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	65	None	replace
288	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	21	3	add
289	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(     "MeansPlusPlusClusterer()  is  not  an  exception.     ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random    ==    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	21	3	add
290	[BUG]  [BUGGY]  Mutator  {  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutator  {  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutator  {  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	46	None	replace
291	[BUG]  [BUGGY]  MutatorUtils.isNotEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  MutatorUtils.isNotEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutatorUtils.isNotEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	  mutator    ==    null    &&    RandomUtils.isEmpty(random))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	47	None	replace
292	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  4);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  4);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  4);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
293	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
294	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.random    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
295	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
296	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
297	[BUG]  [BUGGY]  Mutators  =  new  LinkedHashMap  <  String,Object>();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  Mutators  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	Mutators  =  new  LinkedHashMap  <  String,Object>();	  mutators    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
298	[BUG]  [BUGGY]  mutator  ==  null  &&(random  ==  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null  &&(random  ==  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&(random  ==  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(Random.class)))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
299	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
300	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
301	[BUG]  [BUGGY]  mutators  =  new  ArrayList  <  String>(System.arraycopy(random,  0,  mutators,  0,  random.length));  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutators  =  new  ArrayList  <  String>(System.arraycopy(random,  0,  mutators,  0,  random.length));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators  =  new  ArrayList  <  String>(System.arraycopy(random,  0,  mutators,  0,  random.length));	  mutators    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
302	[BUG]  [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( "null ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( "null ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&(random!=  null  ||  random.equals( "null ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	  mutator    ==    null    &&(random!=    null    ||    random.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
303	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
304	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.VALUE_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
305	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
306	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
307	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer);	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
308	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer());  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  random,  KMeansPlusPlusPlusClusterer());	  super(random,    EmptyClusterStrategy.NONE,    random);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
309	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()),  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()),  random);	  super(random,    EmptyClusterStrategy.LARGEST_VARIANCE,    Random.valueOf(random.nextDouble()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
310	[BUG]  [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeanPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeanPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random!=  null)  {  throw  new  IllegalArgumentException( "MeanPlusPlusClusterer()  is  not  supported. ");  }	  this.random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
311	[BUG]  [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported: ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported: ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported: ");  }	  this.random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
312	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
313	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
314	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.DECEMBER);  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.DECEMBER);	  this.random    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
315	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	3	add
316	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	3	add
317	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	3	add
318	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer:    random    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer:        random        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	3	add
319	[BUG]  [BUGGY]  }  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  }  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	}  else  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }	          if(random!=    null)    {    throw    new    IllegalArgumentException(       "MeansPlusPlusClusterer()    is    not    an    exception.       ");    }    if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
320	[BUG]  [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ".);  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]          if(random!=    null)    {    throw    new    IllegalArgumentException(     "MeansPlusPlusClusterer()    is    not    an    exception.     ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception..   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ".);  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	                if(random!=        null)        {        throw        new        IllegalArgumentException(       "MeansPlusPlusClusterer()        is        not        an        exception.       ");        }        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception..   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception. ".);  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }	  	non-compiled	[CE]  <identifier>  expected	62	None	add
321	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	60	None	replace
322	[BUG]  [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeAdd(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  safeMultiply(random)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	67	None	replace
323	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.nextDouble()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
324	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]            [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE,  Random.valueOf(random.getValue()));	  this.clusters    =    new    KMeansPlusPlus(random,    EmptyClusterStrategy.LARGEEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
325	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  random);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]          public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);      [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  random);  [BUGGY]      }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()),  random);	  super(random,    EmptyClusterStrategy.NONE,    Random.valueOf(random.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
