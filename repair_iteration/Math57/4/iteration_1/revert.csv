projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175intsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175doublesum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175floatsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])this.resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;finalcharsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()+1];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[dx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[ResultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2-k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size()-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=array.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(k<dx2.length)?0:k;
