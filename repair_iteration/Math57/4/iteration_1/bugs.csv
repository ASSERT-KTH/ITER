bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  double[]  pointSet  =  new  double[pointSet.size()  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]    AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  pointSet  =  new  double[pointSet.size()  ];  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  pointSet  =  new  double[pointSet.size()  ];		non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
2	[BUG]  [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  [CE]  variable  dx2  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]      AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  dx2  =  new  double[pointSet.size()  ];		non-compiled	[CE]  variable  dx2  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
3	[BUG]  [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  dx2  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {		non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  dx2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  dx2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {		non-compiled	[CE]  illegal  start  of  expression	8	None	add
5	[BUG]  [BUGGY]    final  double[]  pointSet  =(double[])resultSet.get(0);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  pointSet  =(double[])resultSet.get(0);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  pointSet  =(double[])resultSet.get(0);		non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
6	[BUG]  [BUGGY]  final  int  sum  =  0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]        AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]  final  int  sum  =  0;  [BUGGY]  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  0;	int  sum  =  0;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	7	None	replace
7	[BUG]  [BUGGY]    final  int  pointSet  =  resultSet.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]    AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  int  pointSet  =  resultSet.size();  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  int  pointSet  =  resultSet.size();		non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
8	[BUG]  [BUGGY]    final  double[]  pointSet  =  resultSet.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]      AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  pointSet  =  resultSet.get(k);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  pointSet  =  resultSet.get(k);		non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
9	[BUG]  [BUGGY]    final  int  pointSet  =  resultSet.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  int  pointSet  =  resultSet.get(k);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  int  pointSet  =  resultSet.get(k);		non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
10	[BUG]  [BUGGY]    final  Point  <  T>  pointSet  =  getPoint(resultSet);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  Point  <  T>  pointSet  =  getPoint(resultSet);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  Point  <  T>  pointSet  =  getPoint(resultSet);		non-compiled	[CE]  cannot  find  symbol	8	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]  char  sum  =  0;  [BUGGY]  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	add	char  sum  =  0;	int  sum  =  0;  	compilable	  [FE]  AssertionError  	7	1	replace
12	[BUG]  [BUGGY]  char  sum  =  0;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]  char  sum  =  0;  [BUGGY]  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char  sum  =  0;	int  sum  =  0;  	compilable	  [FE]  AssertionError  	7	1	replace
13	[BUG]  [BUGGY]    final  double[]  dx2  =  new  double[resultSet.size()  ];  [CE]  variable  dx2  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]    AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double[]  dx2  =  new  double[resultSet.size()  ];  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double[]  dx2  =  new  double[resultSet.size()  ];		non-compiled	[CE]  variable  dx2  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	add
14	[BUG]  [BUGGY]    final  double  d  =  getNearestCluster(resultSet,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double  d  =  getNearestCluster(resultSet,  resultSet);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double  d  =  getNearestCluster(resultSet,  resultSet);		non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	8	None	add
15	[BUG]  [BUGGY]    final  double  d  =  getNearestCluster(resultSet,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  double  d  =  getNearestCluster(resultSet,  k);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  double  d  =  getNearestCluster(resultSet,  k);		non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	8	None	add
16	[BUG]  [BUGGY]    final  Point  <  T>  pointSet  =  resultSet.get(k);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    [BUGGY]    final  Point  <  T>  pointSet  =  resultSet.get(k);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	    final  Point  <  T>  pointSet  =  resultSet.get(k);		non-compiled	[CE]  cannot  find  symbol	8	None	add
