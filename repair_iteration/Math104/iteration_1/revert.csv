projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*an;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*an);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177sum=sum+an;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177sum=sum+an*epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177sum=sum/an;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177sum=sum+an/epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.log(a)-logGamma(a));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.log(an)/epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.log(an)/HALF_LOG_2_PI;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.abs(an)/epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.log(an)/HALF_LOG_2_PI);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n+1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=an+1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n+0.5;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n*1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169-regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=regularizedGammaQ(x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=RegularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162}elseif(a>=1.0&&x>a){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162}elseif(a<=1.0&&x>a){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162elseif(a>=1.0&&x>a){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162}elseif(a<1.0&&x>a){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-normalizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaQ(x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170an=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170-regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170an=regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=regularizedGammaQ(x,an,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179if(n>=maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179if(n>maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179if(n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179if(n<=maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*Sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x))/logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon&&n<=maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon||n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon&&n<maximalIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x*(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*an;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=1.0-regularizedGammaQ(x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=RegularizedGammaQ(x,a,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=regularizedGammaQ(x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseriesdoublesum=an;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries.doublean=an;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/n;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries.doublean=an;//partialsumwhile(Math.abs(an)>epsilon&&n>>maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174an=an*(x/(a+n));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174an=an*(x/(a+n)-1);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171-regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171n=regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171-regularizedGammaQ(a,x,epsilon,maxIterations),an);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>=epsilon){if(n>maxIterations){thrownewMaxIterationsExceededException(maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>epsilon){if(n>maxIterations){thrownewMaxIterationsExceededException(maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>epsilon){if(Math.abs(an)<=epsilon&&n<maxIterations){thrownewMaxIterationsExceededException(maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>epsilon){if(Math.abs(an)>epsilon){thrownewMaxIterationsExceededException(maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>epsilon){if(Math.abs(an)<=epsilon&&n<maxIterations){thrownewMaxIterationExceededException(maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=an;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=a;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=1.0;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=n;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+an.doubleValue();
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+an.doubleValue()*HALF_LOG_2_PI;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum/epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum/epsilon*(a+n);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum/a;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=0.0;//currentelementindexdoublean=1.0/a;//n-thelementintheseriesdoublesum=an;//partialsum
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex*an=1.0/a;//n-thelementintheseriesdoublesum=an;//partialsum
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=1.0/a;//n-thelementintheseriesdoublean=an;//partialsum
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindexdoublean=1.0/a;//n-thelementintheseriesdoublesum=an;//partialsum
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex+an=1.0/a;//n-thelementintheseriesdoublesum=an;//partialsum
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x))-logGamma(a)/sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum,n;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=0.0;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170doublesum=an;//sumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=regularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169intmaxIterations=Math.max(relativeAccuracy*Math.abs(x),epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169intmaxIterations=Math.max(relativeAccuracy*Math.abs(x)/a);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169intmaxIterations=Math.max(relativeAccuracy*Math.abs(x));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174ret=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174ret=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174ret=Math.exp(-x+(a*Math.log(x))-logGamma(a));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174ret=Math.exp(-x+(a*Math.log(x))/logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.log(x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=1.0;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=a;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=1.0/a;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex+an=1.0/a;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>=epsilon){if(maxIterations>1){maxIterations=Math.abs(an);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an<epsilon){if(maxIterations>1){maxIterations=Math.abs(an);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>=epsilon){if(maxIterations>1){maxIterations=Math.max(an,epsilon);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>=epsilon){if(n<maxIterations){thrownewMaxIterationExceededException("");}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(an>=epsilon){if(n<maxIterations){thrownewMaxIterationExceededException("maximumnumberofentriesmustbe>0");}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=1.0/regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173ret=Math.exp(-x+(a*Math.log(x))/logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162}elseif(a>=1.0&&x>A){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174an=an*(x/(an+n));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=1.0/regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=1.0/regularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171ret=1.0/regularizedGammaQ(x,an,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon&&n<maximumIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon&&n<minIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(a)/HALF_LOG_2_PI;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(x);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum/HALF_LOG_2_PI;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(a)/HALF_LOG_2_PI);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(a);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179intmaxIterations=Math.max(an,epsilon);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179intmaxIterations=Math.max(an,sum);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x+(a*Math.log(x))-logGamma(a));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170ret=1.0/regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170ret=1.0/regularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=Math.exp(-x+(a*Math.log(x)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170ret=1.0/regularizedGammaQ(a,x,epsilon,maxIterations);an=an*x/(a+n));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=1.0/regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=RegularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations+1);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries;sum=an;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries:an;//partialsumwhile(Math.abs(an)>epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries;sum=an;//partialsumwhile(Math.abs(an)<epsilon&&n<maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177sum=sum+an-epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168regularizedGammaQ(a,x,epsilon,maxIterations);ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaS(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168regularizedGammaQ(a,x,epsilon,maxIterations);ret=1.0-regularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewMaxIterationsExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewMaxIterationExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173x=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewClassExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentmoment=a;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=a;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentelementindex=1.0/a;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168doublen=1.0;//currentday=a;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162ret=RegularizedGammaP(a,x,epsilon,maxIterations);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java162if(a>=1.0&&x<1.0&&!isVowel(x)){ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations);}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174while(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174while(Math.abs(an)>epsilon&&n<maxIterations){n=n-1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174while(Math.abs(an)>epsilon&&n<maxIterations){n++;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174n=Math.abs(an);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java174while(Math.abs(an)>epsilon&&n<maxIterations){n=n*1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179elseif(n>=maxIterations){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=Math.exp(-x+(a<<1.0/getSlope())*x)-1;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=Math.exp(-x+(a>>1.0/getSlope())*x)-1;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java168ret=1.0-regularizedGammaQ(a,x,epsilon,maxIterations),0.0);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/x;//n-thelementintheseries;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169doublean=1.0/a;//n-thelementintheseries.doublean=an;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n+1.0,an*x/(a+n).doubleValue();
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n+1.0,an*x/(a+n);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java173n=n+1.0,an*x/(a+n)-10.0);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182ret=Math.exp(-x+(a*Math.log(x),epsilon)-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=Math.abs(1.0-regularizedGammaQ(a,x,epsilon,maxIterations));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=Math.exp(-x+(a*Math.log(x))-logGamma(a))/ret;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java169n=Math.exp(-x+(a*Math.log(x))-logGamma(a)));
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=Math.exp(-x+(a*Math.log(x))-logGamma(a))*ret;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170an=Math.exp(-x+(a*Math.log(x))-logGamma(a))*ret;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java170n=Math.exp(-x+(a*Math.log(x))-logGamma(a))/ret;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171while(Math.abs(an)>epsilon-n){
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179ret=Math.log(an)/HALF_LOG_2_PI;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179intmaxIterations=Math.max(Math.abs(an)/epsilon);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179intmaxIterations=Math.max(Math.abs(an)%epsilon-1.0);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java179intmaxIterations=Math.max(Math.abs(an)/epsilon,1.0);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewMaxIterationExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177while(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewMaxIterationsExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewMaxIterationExceededException("")
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java177if(Math.abs(an)>epsilon&&n<maxIterations){if(Math.abs(an)>epsilon&&n<maxIterations){thrownewClassExceededException("max
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+an*x/epsilon;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182n=n+1;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(x);n=n+1;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java182sum=sum+Math.log(a/x);
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171if(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;n=n+1.0;}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171n=Math.exp(-x+(a*Math.log(x))-logGamma(a))*sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171n=Math.exp(-x+(a*Math.log(x))-logGamma(a))/sum;
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171if(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;n=an*sum;}
projects/Math104/src/java/org/apache/commons/math/special/Gamma.java171if(Math.abs(an)>epsilon&&n<maxIterations){n=n+1.0;n=an*x/sum;}
