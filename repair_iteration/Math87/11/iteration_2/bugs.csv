bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())-  coefficients.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())-  coefficients.doubleValue();  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())-  coefficients.doubleValue();	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions());	      Integer[]    basicRows    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);	      Integer[]    basicRows    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions(),  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions(),  getRhsOffset());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions(),  getRhsOffset());	      Integer[]    basicRows    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables()  +  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables()  +  getNumObjectiveFunctions());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables()  +  getNumObjectiveFunctions());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getColumnsOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  +  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLowerOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLowerOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLowerOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLowerOffset());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()));	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLowerOffset());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	boolean  maximizeToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	int  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumDecisionVariables()  +  getOriginalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumSlackVariables()  +  getOriginalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  1;  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  rhsOffset  =  getRhsOffset()  +  1;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
31	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset(basicRow);  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  rhsOffset  =  getRhsOffset(basicRow);	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
32	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset(0);  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  rhsOffset  =  getRhsOffset(0);	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()));	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getSlope());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getSlope());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getSlope());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getSlope());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getSlope());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()));	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getBasicOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getBasicOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getBasicOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()));	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLeftOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLeftOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getLeftOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLeftOffset());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()));	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLeftOffset());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()),  coefficients.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()),  coefficients.doubleValue();  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()),  coefficients.doubleValue();	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLowerOffset()  +  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLowerOffset());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      boolean    maximizeToNonNegative    =    basicRow!=    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
46	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  2;  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  rhsOffset  =  getRhsOffset()  +  2;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
47	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getLeftOffset()  +  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getLeftOffset());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getBasicOffset()  +  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSimpleFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSimpleFunctions());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumSimpleFunctions());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getSlope()  +  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getSlope());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumberDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumberDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumberDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getOriginalNumDecisionVariables());	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  boolean  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getRestrictedNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  boolean  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getRestrictedNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	boolean  maximizeToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getRestrictedNumDecisionVariables());	      boolean    maximizeToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(coefficients);  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(coefficients);	      Integer[]    basicRows    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer[]  basicRows  =  getBasicRows(getNumVariables());	      Integer[]    basicRows    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getStandardNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getStandardNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getBasicRow(getNumObjectiveFunctions()  +  getStandardNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  -  1;  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  rhsOffset  =  getRhsOffset()  -  1;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  -  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()  -  1);	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecimalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecimalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  getDecimalNumDecisionVariables());	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1);	  double    mostNegative    =    basicRow!=    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()).doubleValue();	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())/  2.0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())/  2.0;  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())/  2.0;	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  Double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  Integer  baseRow  =  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	Integer  baseRow  =  getBasicRow(getNumVariables()  +  getOriginalNumDecisionVariables());	      Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());    [BUGGY]  double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1));  [BUGGY]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	328	328	1	replace	double  mostNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()  +  1));	      double    mostNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
