bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    [BUGGY]  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	  	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
6	[BUG]  [BUGGY]    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  1;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
7	[BUG]  [BUGGY]    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
8	[BUG]  [BUGGY]    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  -1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getArtificialVariableOffset()  +  slackVar++]  =  -1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
9	[BUG]  [BUGGY]    matrix[row][getSlackVar()  +  slackVar++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getSlackVar()  +  slackVar++]  =  1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getSlackVar()  +  slackVar++]  =  1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
10	[BUG]  [BUGGY]    matrix[row][getSlackVar()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]    matrix[row][getSlackVar()  +  slackVar++]  =  -1;  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	    matrix[row][getSlackVar()  +  slackVar++]  =  -1;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
11	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (!restrictToNonNegative)  {  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  -1;//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
